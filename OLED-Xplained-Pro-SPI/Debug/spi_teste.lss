
spi_teste.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000070fc  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  004070fc  004070fc  000170fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00407104  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000308  204009d0  00407ad4  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400cd8  00407ddc  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd8  00409ddc  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   0001a597  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00003bb1  00000000  00000000  0003afee  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00006637  00000000  00000000  0003eb9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000a10  00000000  00000000  000451d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a50  00000000  00000000  00045be6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00021e7b  00000000  00000000  00046636  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000fcaf  00000000  00000000  000684b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009061a  00000000  00000000  00078160  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00002228  00000000  00000000  0010877c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d8 2c 40 20 e9 13 40 00 e5 13 40 00 e5 13 40 00     .,@ ..@...@...@.
  400010:	e5 13 40 00 e5 13 40 00 e5 13 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	e5 13 40 00 e5 13 40 00 00 00 00 00 e5 13 40 00     ..@...@.......@.
  40003c:	e5 13 40 00 e5 13 40 00 e5 13 40 00 05 18 40 00     ..@...@...@...@.
  40004c:	e5 13 40 00 e5 13 40 00 e5 13 40 00 e5 13 40 00     ..@...@...@...@.
  40005c:	e5 13 40 00 e5 13 40 00 00 00 00 00 49 0f 40 00     ..@...@.....I.@.
  40006c:	5d 0f 40 00 71 0f 40 00 e5 13 40 00 e5 13 40 00     ].@.q.@...@...@.
  40007c:	e5 13 40 00 85 0f 40 00 99 0f 40 00 e5 13 40 00     ..@...@...@...@.
  40008c:	e5 13 40 00 e5 13 40 00 e5 13 40 00 e5 13 40 00     ..@...@...@...@.
  40009c:	11 17 40 00 41 17 40 00 e5 13 40 00 e5 13 40 00     ..@.A.@...@...@.
  4000ac:	e5 13 40 00 e5 13 40 00 e5 13 40 00 e5 13 40 00     ..@...@...@...@.
  4000bc:	e5 13 40 00 e5 13 40 00 e5 13 40 00 e5 13 40 00     ..@...@...@...@.
  4000cc:	e5 13 40 00 00 00 00 00 e5 13 40 00 00 00 00 00     ..@.......@.....
  4000dc:	e5 13 40 00 e5 13 40 00 e5 13 40 00 e5 13 40 00     ..@...@...@...@.
  4000ec:	e5 13 40 00 e5 13 40 00 e5 13 40 00 e5 13 40 00     ..@...@...@...@.
  4000fc:	e5 13 40 00 e5 13 40 00 e5 13 40 00 e5 13 40 00     ..@...@...@...@.
  40010c:	e5 13 40 00 e5 13 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 e5 13 40 00 e5 13 40 00 e5 13 40 00     ......@...@...@.
  40012c:	e5 13 40 00 e5 13 40 00 00 00 00 00 e5 13 40 00     ..@...@.......@.
  40013c:	e5 13 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00407104 	.word	0x00407104

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00407104 	.word	0x00407104
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00407104 	.word	0x00407104
  4001a8:	00000000 	.word	0x00000000

004001ac <rtc_set_hour_mode>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_mode 1 for 12-hour mode, 0 for 24-hour mode.
 */
void rtc_set_hour_mode(Rtc *p_rtc, uint32_t ul_mode)
{
	if (ul_mode) {
  4001ac:	b921      	cbnz	r1, 4001b8 <rtc_set_hour_mode+0xc>
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
	} else {
		p_rtc->RTC_MR &= (~RTC_MR_HRMOD);
  4001ae:	6843      	ldr	r3, [r0, #4]
  4001b0:	f023 0301 	bic.w	r3, r3, #1
  4001b4:	6043      	str	r3, [r0, #4]
  4001b6:	4770      	bx	lr
		p_rtc->RTC_MR |= RTC_MR_HRMOD;
  4001b8:	6843      	ldr	r3, [r0, #4]
  4001ba:	f043 0301 	orr.w	r3, r3, #1
  4001be:	6043      	str	r3, [r0, #4]
  4001c0:	4770      	bx	lr

004001c2 <rtc_enable_interrupt>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_sources Interrupts to be enabled.
 */
void rtc_enable_interrupt(Rtc *p_rtc, uint32_t ul_sources)
{
	p_rtc->RTC_IER = ul_sources;
  4001c2:	6201      	str	r1, [r0, #32]
  4001c4:	4770      	bx	lr

004001c6 <rtc_get_time>:
 * \param pul_minute Current minute.
 * \param pul_second Current second.
 */
void rtc_get_time(Rtc *p_rtc, uint32_t *pul_hour, uint32_t *pul_minute,
		uint32_t *pul_second)
{
  4001c6:	b430      	push	{r4, r5}
	uint32_t ul_time;
	uint32_t ul_temp;

	/* Get the current RTC time (multiple reads are necessary to insure a stable value). */
	ul_time = p_rtc->RTC_TIMR;
  4001c8:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001ca:	6884      	ldr	r4, [r0, #8]
  4001cc:	42a5      	cmp	r5, r4
  4001ce:	d003      	beq.n	4001d8 <rtc_get_time+0x12>
		ul_time = p_rtc->RTC_TIMR;
  4001d0:	6885      	ldr	r5, [r0, #8]
	while (ul_time != p_rtc->RTC_TIMR) {
  4001d2:	6884      	ldr	r4, [r0, #8]
  4001d4:	42ac      	cmp	r4, r5
  4001d6:	d1fb      	bne.n	4001d0 <rtc_get_time+0xa>
	}

	/* Hour */
	if (pul_hour) {
  4001d8:	b161      	cbz	r1, 4001f4 <rtc_get_time+0x2e>
		ul_temp = (ul_time & RTC_TIMR_HOUR_Msk) >> RTC_TIMR_HOUR_Pos;
		*pul_hour = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  4001da:	f3c4 5001 	ubfx	r0, r4, #20, #2
  4001de:	eb00 0580 	add.w	r5, r0, r0, lsl #2
  4001e2:	f3c4 4003 	ubfx	r0, r4, #16, #4
  4001e6:	eb00 0045 	add.w	r0, r0, r5, lsl #1

		if ((ul_time & RTC_TIMR_AMPM) == RTC_TIMR_AMPM) {
  4001ea:	f414 0f80 	tst.w	r4, #4194304	; 0x400000
			*pul_hour += 12;
  4001ee:	bf18      	it	ne
  4001f0:	300c      	addne	r0, #12
  4001f2:	6008      	str	r0, [r1, #0]
		}
	}

	/* Minute */
	if (pul_minute) {
  4001f4:	b142      	cbz	r2, 400208 <rtc_get_time+0x42>
		ul_temp = (ul_time & RTC_TIMR_MIN_Msk) >> RTC_TIMR_MIN_Pos;
		*pul_minute = (ul_temp >> BCD_SHIFT) * BCD_FACTOR +  (ul_temp & BCD_MASK);
  4001f6:	f3c4 3102 	ubfx	r1, r4, #12, #3
  4001fa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
  4001fe:	f3c4 2003 	ubfx	r0, r4, #8, #4
  400202:	eb00 0141 	add.w	r1, r0, r1, lsl #1
  400206:	6011      	str	r1, [r2, #0]
	}

	/* Second */
	if (pul_second) {
  400208:	b143      	cbz	r3, 40021c <rtc_get_time+0x56>
		ul_temp = (ul_time & RTC_TIMR_SEC_Msk) >> RTC_TIMR_SEC_Pos;
		*pul_second = (ul_temp >> BCD_SHIFT) * BCD_FACTOR + (ul_temp & BCD_MASK);
  40020a:	f3c4 1202 	ubfx	r2, r4, #4, #3
  40020e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400212:	f004 040f 	and.w	r4, r4, #15
  400216:	eb04 0442 	add.w	r4, r4, r2, lsl #1
  40021a:	601c      	str	r4, [r3, #0]
	}
}
  40021c:	bc30      	pop	{r4, r5}
  40021e:	4770      	bx	lr

00400220 <rtc_set_time>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_time(Rtc *p_rtc, uint32_t ul_hour, uint32_t ul_minute,
		uint32_t ul_second)
{
  400220:	b4f0      	push	{r4, r5, r6, r7}
	uint32_t ul_time = 0;

	/* If 12-hour mode, set AMPM bit */
	if ((p_rtc->RTC_MR & RTC_MR_HRMOD) == RTC_MR_HRMOD) {
  400222:	6844      	ldr	r4, [r0, #4]
		if (ul_hour > 12) {
  400224:	f014 0f01 	tst.w	r4, #1
  400228:	d005      	beq.n	400236 <rtc_set_time+0x16>
  40022a:	290c      	cmp	r1, #12
  40022c:	d903      	bls.n	400236 <rtc_set_time+0x16>
			ul_hour -= 12;
  40022e:	390c      	subs	r1, #12
			ul_time |= RTC_TIMR_AMPM;
  400230:	f44f 0780 	mov.w	r7, #4194304	; 0x400000
  400234:	e000      	b.n	400238 <rtc_set_time+0x18>
	uint32_t ul_time = 0;
  400236:	2700      	movs	r7, #0
	/* Minute */
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);

	/* Second */
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400238:	4c1c      	ldr	r4, [pc, #112]	; (4002ac <rtc_set_time+0x8c>)
  40023a:	fba4 5603 	umull	r5, r6, r4, r3
  40023e:	08f6      	lsrs	r6, r6, #3
			((ul_second % BCD_FACTOR) << RTC_TIMR_SEC_Pos);
  400240:	eb06 0586 	add.w	r5, r6, r6, lsl #2
  400244:	eba3 0345 	sub.w	r3, r3, r5, lsl #1
  400248:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
	ul_time |= ((ul_minute / BCD_FACTOR) << (RTC_TIMR_MIN_Pos + BCD_SHIFT)) |
  40024c:	fba4 6502 	umull	r6, r5, r4, r2
  400250:	08ed      	lsrs	r5, r5, #3
  400252:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
			((ul_minute % BCD_FACTOR) << RTC_TIMR_MIN_Pos);
  400256:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  40025a:	eba2 0545 	sub.w	r5, r2, r5, lsl #1
  40025e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  400262:	433b      	orrs	r3, r7
	ul_time |= ((ul_hour / BCD_FACTOR) << (RTC_TIMR_HOUR_Pos + BCD_SHIFT)) |
  400264:	fba4 4201 	umull	r4, r2, r4, r1
  400268:	08d2      	lsrs	r2, r2, #3
  40026a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
			((ul_hour % BCD_FACTOR) << RTC_TIMR_HOUR_Pos);
  40026e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  400272:	eba1 0142 	sub.w	r1, r1, r2, lsl #1
	ul_time |= ((ul_second / BCD_FACTOR) << (RTC_TIMR_SEC_Pos + BCD_SHIFT)) |
  400276:	ea43 4101 	orr.w	r1, r3, r1, lsl #16

	/* Update time register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  40027a:	6983      	ldr	r3, [r0, #24]
  40027c:	f013 0f04 	tst.w	r3, #4
  400280:	d0fb      	beq.n	40027a <rtc_set_time+0x5a>
	p_rtc->RTC_CR |= RTC_CR_UPDTIM;
  400282:	6803      	ldr	r3, [r0, #0]
  400284:	f043 0301 	orr.w	r3, r3, #1
  400288:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  40028a:	6983      	ldr	r3, [r0, #24]
  40028c:	f013 0f01 	tst.w	r3, #1
  400290:	d0fb      	beq.n	40028a <rtc_set_time+0x6a>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  400292:	2301      	movs	r3, #1
  400294:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_TIMR = ul_time;
  400296:	6081      	str	r1, [r0, #8]
	p_rtc->RTC_CR &= (~RTC_CR_UPDTIM);
  400298:	6803      	ldr	r3, [r0, #0]
  40029a:	f023 0301 	bic.w	r3, r3, #1
  40029e:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVTIM);
  4002a0:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  4002a2:	f000 0001 	and.w	r0, r0, #1
  4002a6:	bcf0      	pop	{r4, r5, r6, r7}
  4002a8:	4770      	bx	lr
  4002aa:	bf00      	nop
  4002ac:	cccccccd 	.word	0xcccccccd

004002b0 <rtc_set_date>:
 *
 * \return 0 for OK, else invalid setting.
 */
uint32_t rtc_set_date(Rtc *p_rtc, uint32_t ul_year, uint32_t ul_month,
		uint32_t ul_day, uint32_t ul_week)
{
  4002b0:	b470      	push	{r4, r5, r6}

	/* Week */
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);

	/* Day */
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002b2:	4d2a      	ldr	r5, [pc, #168]	; (40035c <rtc_set_date+0xac>)
  4002b4:	fba5 4603 	umull	r4, r6, r5, r3
  4002b8:	08f6      	lsrs	r6, r6, #3
	ul_date |= (ul_week << RTC_CALR_DAY_Pos);
  4002ba:	9c03      	ldr	r4, [sp, #12]
  4002bc:	0564      	lsls	r4, r4, #21
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002be:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
			((ul_day % BCD_FACTOR) << RTC_CALR_DATE_Pos);
  4002c2:	eb06 0686 	add.w	r6, r6, r6, lsl #2
  4002c6:	eba3 0346 	sub.w	r3, r3, r6, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002ca:	ea44 6303 	orr.w	r3, r4, r3, lsl #24
	ul_date |= ((ul_month / BCD_FACTOR) << (RTC_CALR_MONTH_Pos + BCD_SHIFT)) |
  4002ce:	fba5 6402 	umull	r6, r4, r5, r2
  4002d2:	08e4      	lsrs	r4, r4, #3
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002d4:	ea43 5304 	orr.w	r3, r3, r4, lsl #20
			((ul_month % BCD_FACTOR) << RTC_CALR_MONTH_Pos);
  4002d8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4002dc:	eba2 0244 	sub.w	r2, r2, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002e0:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
	ul_date |= ((ul_year / BCD_FACTOR / BCD_FACTOR / BCD_FACTOR) <<
  4002e4:	4b1e      	ldr	r3, [pc, #120]	; (400360 <rtc_set_date+0xb0>)
  4002e6:	fba3 4301 	umull	r4, r3, r3, r1
  4002ea:	099b      	lsrs	r3, r3, #6
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  4002ec:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
			((ul_year / BCD_FACTOR / BCD_FACTOR) % BCD_FACTOR) <<  RTC_CALR_CENT_Pos);
  4002f0:	4b1c      	ldr	r3, [pc, #112]	; (400364 <rtc_set_date+0xb4>)
  4002f2:	fba3 4301 	umull	r4, r3, r3, r1
  4002f6:	095b      	lsrs	r3, r3, #5
  4002f8:	fba5 6403 	umull	r6, r4, r5, r3
  4002fc:	08e4      	lsrs	r4, r4, #3
  4002fe:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  400302:	eba3 0344 	sub.w	r3, r3, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400306:	431a      	orrs	r2, r3
			((ul_year % BCD_FACTOR) << RTC_CALR_YEAR_Pos);
  400308:	fba5 4301 	umull	r4, r3, r5, r1
  40030c:	08db      	lsrs	r3, r3, #3
  40030e:	eb03 0483 	add.w	r4, r3, r3, lsl #2
  400312:	eba1 0144 	sub.w	r1, r1, r4, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400316:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
	ul_date |= (((ul_year / BCD_FACTOR) % BCD_FACTOR) <<
  40031a:	fba5 1503 	umull	r1, r5, r5, r3
  40031e:	08ed      	lsrs	r5, r5, #3
  400320:	eb05 0585 	add.w	r5, r5, r5, lsl #2
  400324:	eba3 0545 	sub.w	r5, r3, r5, lsl #1
	ul_date |= ((ul_day / BCD_FACTOR) << (RTC_CALR_DATE_Pos + BCD_SHIFT)) |
  400328:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

	/* Update calendar register. Check the spec for the flow. */
	while ((p_rtc->RTC_SR & RTC_SR_SEC) != RTC_SR_SEC);
  40032c:	6983      	ldr	r3, [r0, #24]
  40032e:	f013 0f04 	tst.w	r3, #4
  400332:	d0fb      	beq.n	40032c <rtc_set_date+0x7c>
	p_rtc->RTC_CR |= RTC_CR_UPDCAL;
  400334:	6803      	ldr	r3, [r0, #0]
  400336:	f043 0302 	orr.w	r3, r3, #2
  40033a:	6003      	str	r3, [r0, #0]
	while ((p_rtc->RTC_SR & RTC_SR_ACKUPD) != RTC_SR_ACKUPD);
  40033c:	6983      	ldr	r3, [r0, #24]
  40033e:	f013 0f01 	tst.w	r3, #1
  400342:	d0fb      	beq.n	40033c <rtc_set_date+0x8c>
	p_rtc->RTC_SCCR = RTC_SCCR_ACKCLR;
  400344:	2301      	movs	r3, #1
  400346:	61c3      	str	r3, [r0, #28]
	p_rtc->RTC_CALR = ul_date;
  400348:	60c2      	str	r2, [r0, #12]
	p_rtc->RTC_CR &= (~RTC_CR_UPDCAL);
  40034a:	6803      	ldr	r3, [r0, #0]
  40034c:	f023 0302 	bic.w	r3, r3, #2
  400350:	6003      	str	r3, [r0, #0]

	return (p_rtc->RTC_VER & RTC_VER_NVCAL);
  400352:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
}
  400354:	f000 0002 	and.w	r0, r0, #2
  400358:	bc70      	pop	{r4, r5, r6}
  40035a:	4770      	bx	lr
  40035c:	cccccccd 	.word	0xcccccccd
  400360:	10624dd3 	.word	0x10624dd3
  400364:	51eb851f 	.word	0x51eb851f

00400368 <rtc_get_status>:
 *
 * \return Status of the RTC.
 */
uint32_t rtc_get_status(Rtc *p_rtc)
{
	return (p_rtc->RTC_SR);
  400368:	6980      	ldr	r0, [r0, #24]
}
  40036a:	4770      	bx	lr

0040036c <rtc_clear_status>:
 * \param p_rtc Pointer to an RTC instance.
 * \param ul_clear Some flag bits which will be cleared.
 */
void rtc_clear_status(Rtc *p_rtc, uint32_t ul_clear)
{
	p_rtc->RTC_SCCR = ul_clear;
  40036c:	61c1      	str	r1, [r0, #28]
  40036e:	4770      	bx	lr

00400370 <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  400370:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  400372:	4b07      	ldr	r3, [pc, #28]	; (400390 <spi_enable_clock+0x20>)
  400374:	4298      	cmp	r0, r3
  400376:	d003      	beq.n	400380 <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  400378:	4b06      	ldr	r3, [pc, #24]	; (400394 <spi_enable_clock+0x24>)
  40037a:	4298      	cmp	r0, r3
  40037c:	d004      	beq.n	400388 <spi_enable_clock+0x18>
  40037e:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400380:	2015      	movs	r0, #21
  400382:	4b05      	ldr	r3, [pc, #20]	; (400398 <spi_enable_clock+0x28>)
  400384:	4798      	blx	r3
  400386:	bd08      	pop	{r3, pc}
  400388:	202a      	movs	r0, #42	; 0x2a
  40038a:	4b03      	ldr	r3, [pc, #12]	; (400398 <spi_enable_clock+0x28>)
  40038c:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  40038e:	e7f6      	b.n	40037e <spi_enable_clock+0xe>
  400390:	40008000 	.word	0x40008000
  400394:	40058000 	.word	0x40058000
  400398:	004010cd 	.word	0x004010cd

0040039c <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  40039c:	6843      	ldr	r3, [r0, #4]
  40039e:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4003a2:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4003a4:	6843      	ldr	r3, [r0, #4]
  4003a6:	0409      	lsls	r1, r1, #16
  4003a8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4003ac:	4319      	orrs	r1, r3
  4003ae:	6041      	str	r1, [r0, #4]
  4003b0:	4770      	bx	lr

004003b2 <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4003b2:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4003b4:	f643 2499 	movw	r4, #15001	; 0x3a99
  4003b8:	6905      	ldr	r5, [r0, #16]
  4003ba:	f015 0f02 	tst.w	r5, #2
  4003be:	d103      	bne.n	4003c8 <spi_write+0x16>
		if (!timeout--) {
  4003c0:	3c01      	subs	r4, #1
  4003c2:	d1f9      	bne.n	4003b8 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  4003c4:	2001      	movs	r0, #1
  4003c6:	e00c      	b.n	4003e2 <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  4003c8:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  4003ca:	f014 0f02 	tst.w	r4, #2
  4003ce:	d006      	beq.n	4003de <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  4003d0:	0412      	lsls	r2, r2, #16
  4003d2:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  4003d6:	4311      	orrs	r1, r2
		if (uc_last) {
  4003d8:	b10b      	cbz	r3, 4003de <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  4003da:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  4003de:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  4003e0:	2000      	movs	r0, #0
}
  4003e2:	bc30      	pop	{r4, r5}
  4003e4:	4770      	bx	lr

004003e6 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  4003e6:	b932      	cbnz	r2, 4003f6 <spi_set_clock_polarity+0x10>
  4003e8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  4003ec:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4003ee:	f023 0301 	bic.w	r3, r3, #1
  4003f2:	6303      	str	r3, [r0, #48]	; 0x30
  4003f4:	4770      	bx	lr
  4003f6:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  4003fa:	6b03      	ldr	r3, [r0, #48]	; 0x30
  4003fc:	f043 0301 	orr.w	r3, r3, #1
  400400:	6303      	str	r3, [r0, #48]	; 0x30
  400402:	4770      	bx	lr

00400404 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400404:	b932      	cbnz	r2, 400414 <spi_set_clock_phase+0x10>
  400406:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  40040a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40040c:	f023 0302 	bic.w	r3, r3, #2
  400410:	6303      	str	r3, [r0, #48]	; 0x30
  400412:	4770      	bx	lr
  400414:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400418:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40041a:	f043 0302 	orr.w	r3, r3, #2
  40041e:	6303      	str	r3, [r0, #48]	; 0x30
  400420:	4770      	bx	lr

00400422 <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  400422:	2a04      	cmp	r2, #4
  400424:	d003      	beq.n	40042e <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400426:	b16a      	cbz	r2, 400444 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400428:	2a08      	cmp	r2, #8
  40042a:	d016      	beq.n	40045a <spi_configure_cs_behavior+0x38>
  40042c:	4770      	bx	lr
  40042e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400432:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400434:	f023 0308 	bic.w	r3, r3, #8
  400438:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  40043a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40043c:	f043 0304 	orr.w	r3, r3, #4
  400440:	6303      	str	r3, [r0, #48]	; 0x30
  400442:	4770      	bx	lr
  400444:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400448:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40044a:	f023 0308 	bic.w	r3, r3, #8
  40044e:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  400450:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400452:	f023 0304 	bic.w	r3, r3, #4
  400456:	6303      	str	r3, [r0, #48]	; 0x30
  400458:	4770      	bx	lr
  40045a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40045e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400460:	f043 0308 	orr.w	r3, r3, #8
  400464:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  400466:	e7e1      	b.n	40042c <spi_configure_cs_behavior+0xa>

00400468 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  400468:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  40046c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40046e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  400472:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  400474:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  400476:	431a      	orrs	r2, r3
  400478:	630a      	str	r2, [r1, #48]	; 0x30
  40047a:	4770      	bx	lr

0040047c <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  40047c:	1e43      	subs	r3, r0, #1
  40047e:	4419      	add	r1, r3
  400480:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  400484:	1e43      	subs	r3, r0, #1
  400486:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  400488:	bf94      	ite	ls
  40048a:	b200      	sxthls	r0, r0
		return -1;
  40048c:	f04f 30ff 	movhi.w	r0, #4294967295
}
  400490:	4770      	bx	lr

00400492 <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  400492:	b17a      	cbz	r2, 4004b4 <spi_set_baudrate_div+0x22>
{
  400494:	b410      	push	{r4}
  400496:	4614      	mov	r4, r2
  400498:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  40049c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  40049e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4004a2:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4004a4:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4004a6:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4004aa:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4004ac:	2000      	movs	r0, #0
}
  4004ae:	f85d 4b04 	ldr.w	r4, [sp], #4
  4004b2:	4770      	bx	lr
        return -1;
  4004b4:	f04f 30ff 	mov.w	r0, #4294967295
  4004b8:	4770      	bx	lr

004004ba <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
  4004ba:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4004bc:	0189      	lsls	r1, r1, #6
  4004be:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
  4004c0:	2402      	movs	r4, #2
  4004c2:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
  4004c4:	f04f 31ff 	mov.w	r1, #4294967295
  4004c8:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
  4004ca:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
  4004cc:	605a      	str	r2, [r3, #4]
}
  4004ce:	f85d 4b04 	ldr.w	r4, [sp], #4
  4004d2:	4770      	bx	lr

004004d4 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
  4004d4:	0189      	lsls	r1, r1, #6
  4004d6:	2305      	movs	r3, #5
  4004d8:	5043      	str	r3, [r0, r1]
  4004da:	4770      	bx	lr

004004dc <tc_stop>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKDIS;
  4004dc:	0189      	lsls	r1, r1, #6
  4004de:	2302      	movs	r3, #2
  4004e0:	5043      	str	r3, [r0, r1]
  4004e2:	4770      	bx	lr

004004e4 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
  4004e4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
  4004e8:	61ca      	str	r2, [r1, #28]
  4004ea:	4770      	bx	lr

004004ec <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4004ec:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
  4004f0:	624a      	str	r2, [r1, #36]	; 0x24
  4004f2:	4770      	bx	lr

004004f4 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
  4004f4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
  4004f8:	6a08      	ldr	r0, [r1, #32]
}
  4004fa:	4770      	bx	lr

004004fc <tc_find_mck_divisor>:
		uint32_t ul_freq,
		uint32_t ul_mck,
		uint32_t *p_uldiv,
		uint32_t *p_ultcclks,
		uint32_t ul_boardmck)
{
  4004fc:	b4f0      	push	{r4, r5, r6, r7}
  4004fe:	b086      	sub	sp, #24
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400500:	2402      	movs	r4, #2
  400502:	9401      	str	r4, [sp, #4]
  400504:	2408      	movs	r4, #8
  400506:	9402      	str	r4, [sp, #8]
  400508:	2420      	movs	r4, #32
  40050a:	9403      	str	r4, [sp, #12]
  40050c:	2480      	movs	r4, #128	; 0x80
  40050e:	9404      	str	r4, [sp, #16]
			ul_boardmck / FREQ_SLOW_CLOCK_EXT };
  400510:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  400512:	0be4      	lsrs	r4, r4, #15
	const uint32_t divisors[5] = { 2, 8, 32, 128,
  400514:	9405      	str	r4, [sp, #20]
	for (ul_index = 0;
			ul_index < (sizeof(divisors) / sizeof(divisors[0]));
			ul_index++) {
		ul_high = ul_mck / divisors[ul_index];
		ul_low  = ul_high / TC_DIV_FACTOR;
		if (ul_freq > ul_high) {
  400516:	ebb0 0f51 	cmp.w	r0, r1, lsr #1
  40051a:	d814      	bhi.n	400546 <tc_find_mck_divisor+0x4a>
  40051c:	0c4c      	lsrs	r4, r1, #17
			return 0;
		} else if (ul_freq >= ul_low) {
  40051e:	42a0      	cmp	r0, r4
  400520:	d217      	bcs.n	400552 <tc_find_mck_divisor+0x56>
  400522:	2501      	movs	r5, #1
		ul_high = ul_mck / divisors[ul_index];
  400524:	af01      	add	r7, sp, #4
  400526:	f857 4025 	ldr.w	r4, [r7, r5, lsl #2]
  40052a:	fbb1 f4f4 	udiv	r4, r1, r4
		ul_low  = ul_high / TC_DIV_FACTOR;
  40052e:	0c26      	lsrs	r6, r4, #16
		if (ul_freq > ul_high) {
  400530:	4284      	cmp	r4, r0
  400532:	d30a      	bcc.n	40054a <tc_find_mck_divisor+0x4e>
		} else if (ul_freq >= ul_low) {
  400534:	4286      	cmp	r6, r0
  400536:	d90d      	bls.n	400554 <tc_find_mck_divisor+0x58>
			ul_index++) {
  400538:	3501      	adds	r5, #1
	for (ul_index = 0;
  40053a:	2d05      	cmp	r5, #5
  40053c:	d1f3      	bne.n	400526 <tc_find_mck_divisor+0x2a>
			break;
		}
	}
	if (ul_index >= (sizeof(divisors) / sizeof(divisors[0]))) {
		return 0;
  40053e:	2000      	movs	r0, #0
	if (p_ultcclks) {
		*p_ultcclks = ul_index;
	}

	return 1;
}
  400540:	b006      	add	sp, #24
  400542:	bcf0      	pop	{r4, r5, r6, r7}
  400544:	4770      	bx	lr
			return 0;
  400546:	2000      	movs	r0, #0
  400548:	e7fa      	b.n	400540 <tc_find_mck_divisor+0x44>
  40054a:	2000      	movs	r0, #0
  40054c:	e7f8      	b.n	400540 <tc_find_mck_divisor+0x44>
	return 1;
  40054e:	2001      	movs	r0, #1
  400550:	e7f6      	b.n	400540 <tc_find_mck_divisor+0x44>
	for (ul_index = 0;
  400552:	2500      	movs	r5, #0
	if (p_uldiv) {
  400554:	b12a      	cbz	r2, 400562 <tc_find_mck_divisor+0x66>
		*p_uldiv = divisors[ul_index];
  400556:	a906      	add	r1, sp, #24
  400558:	eb01 0185 	add.w	r1, r1, r5, lsl #2
  40055c:	f851 1c14 	ldr.w	r1, [r1, #-20]
  400560:	6011      	str	r1, [r2, #0]
	if (p_ultcclks) {
  400562:	2b00      	cmp	r3, #0
  400564:	d0f3      	beq.n	40054e <tc_find_mck_divisor+0x52>
		*p_ultcclks = ul_index;
  400566:	601d      	str	r5, [r3, #0]
	return 1;
  400568:	2001      	movs	r0, #1
  40056a:	e7e9      	b.n	400540 <tc_find_mck_divisor+0x44>

0040056c <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  40056c:	4b01      	ldr	r3, [pc, #4]	; (400574 <gfx_mono_set_framebuffer+0x8>)
  40056e:	6018      	str	r0, [r3, #0]
  400570:	4770      	bx	lr
  400572:	bf00      	nop
  400574:	204009ec 	.word	0x204009ec

00400578 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400578:	4b02      	ldr	r3, [pc, #8]	; (400584 <gfx_mono_framebuffer_put_byte+0xc>)
  40057a:	681b      	ldr	r3, [r3, #0]
  40057c:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  400580:	5442      	strb	r2, [r0, r1]
  400582:	4770      	bx	lr
  400584:	204009ec 	.word	0x204009ec

00400588 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400588:	4b02      	ldr	r3, [pc, #8]	; (400594 <gfx_mono_framebuffer_get_byte+0xc>)
  40058a:	681b      	ldr	r3, [r3, #0]
  40058c:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  400590:	5c40      	ldrb	r0, [r0, r1]
  400592:	4770      	bx	lr
  400594:	204009ec 	.word	0x204009ec

00400598 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400598:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  40059c:	1884      	adds	r4, r0, r2
  40059e:	2c80      	cmp	r4, #128	; 0x80
  4005a0:	dd02      	ble.n	4005a8 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  4005a2:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  4005a6:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  4005a8:	b322      	cbz	r2, 4005f4 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  4005aa:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  4005ac:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  4005b0:	2601      	movs	r6, #1
  4005b2:	fa06 f101 	lsl.w	r1, r6, r1
  4005b6:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  4005b8:	2b01      	cmp	r3, #1
  4005ba:	d01d      	beq.n	4005f8 <gfx_mono_generic_draw_horizontal_line+0x60>
  4005bc:	2b00      	cmp	r3, #0
  4005be:	d035      	beq.n	40062c <gfx_mono_generic_draw_horizontal_line+0x94>
  4005c0:	2b02      	cmp	r3, #2
  4005c2:	d117      	bne.n	4005f4 <gfx_mono_generic_draw_horizontal_line+0x5c>
  4005c4:	3801      	subs	r0, #1
  4005c6:	b2c7      	uxtb	r7, r0
  4005c8:	19d4      	adds	r4, r2, r7
  4005ca:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  4005cc:	f8df a090 	ldr.w	sl, [pc, #144]	; 400660 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  4005d0:	f04f 0900 	mov.w	r9, #0
  4005d4:	f8df 808c 	ldr.w	r8, [pc, #140]	; 400664 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4005d8:	4621      	mov	r1, r4
  4005da:	4628      	mov	r0, r5
  4005dc:	47d0      	blx	sl
			temp ^= pixelmask;
  4005de:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4005e2:	464b      	mov	r3, r9
  4005e4:	b2d2      	uxtb	r2, r2
  4005e6:	4621      	mov	r1, r4
  4005e8:	4628      	mov	r0, r5
  4005ea:	47c0      	blx	r8
  4005ec:	3c01      	subs	r4, #1
  4005ee:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4005f0:	42bc      	cmp	r4, r7
  4005f2:	d1f1      	bne.n	4005d8 <gfx_mono_generic_draw_horizontal_line+0x40>
  4005f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4005f8:	3801      	subs	r0, #1
  4005fa:	b2c7      	uxtb	r7, r0
  4005fc:	19d4      	adds	r4, r2, r7
  4005fe:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400600:	f8df a05c 	ldr.w	sl, [pc, #92]	; 400660 <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400604:	f04f 0900 	mov.w	r9, #0
  400608:	f8df 8058 	ldr.w	r8, [pc, #88]	; 400664 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40060c:	4621      	mov	r1, r4
  40060e:	4628      	mov	r0, r5
  400610:	47d0      	blx	sl
			temp |= pixelmask;
  400612:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400616:	464b      	mov	r3, r9
  400618:	b2d2      	uxtb	r2, r2
  40061a:	4621      	mov	r1, r4
  40061c:	4628      	mov	r0, r5
  40061e:	47c0      	blx	r8
  400620:	3c01      	subs	r4, #1
  400622:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400624:	42bc      	cmp	r4, r7
  400626:	d1f1      	bne.n	40060c <gfx_mono_generic_draw_horizontal_line+0x74>
  400628:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40062c:	3801      	subs	r0, #1
  40062e:	b2c7      	uxtb	r7, r0
  400630:	19d4      	adds	r4, r2, r7
  400632:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  400634:	f8df 8028 	ldr.w	r8, [pc, #40]	; 400660 <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  400638:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  40063a:	f8df 9028 	ldr.w	r9, [pc, #40]	; 400664 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  40063e:	4621      	mov	r1, r4
  400640:	4628      	mov	r0, r5
  400642:	47c0      	blx	r8
			temp &= ~pixelmask;
  400644:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  400648:	2300      	movs	r3, #0
  40064a:	b2d2      	uxtb	r2, r2
  40064c:	4621      	mov	r1, r4
  40064e:	4628      	mov	r0, r5
  400650:	47c8      	blx	r9
  400652:	3c01      	subs	r4, #1
  400654:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  400656:	42bc      	cmp	r4, r7
  400658:	d1f1      	bne.n	40063e <gfx_mono_generic_draw_horizontal_line+0xa6>
  40065a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40065e:	bf00      	nop
  400660:	00400899 	.word	0x00400899
  400664:	00400795 	.word	0x00400795

00400668 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  400668:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40066c:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  400670:	b18b      	cbz	r3, 400696 <gfx_mono_generic_draw_filled_rect+0x2e>
  400672:	461c      	mov	r4, r3
  400674:	4690      	mov	r8, r2
  400676:	4606      	mov	r6, r0
  400678:	1e4d      	subs	r5, r1, #1
  40067a:	b2ed      	uxtb	r5, r5
  40067c:	442c      	add	r4, r5
  40067e:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  400680:	f8df 9018 	ldr.w	r9, [pc, #24]	; 40069c <gfx_mono_generic_draw_filled_rect+0x34>
  400684:	463b      	mov	r3, r7
  400686:	4642      	mov	r2, r8
  400688:	4621      	mov	r1, r4
  40068a:	4630      	mov	r0, r6
  40068c:	47c8      	blx	r9
  40068e:	3c01      	subs	r4, #1
  400690:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  400692:	42ac      	cmp	r4, r5
  400694:	d1f6      	bne.n	400684 <gfx_mono_generic_draw_filled_rect+0x1c>
  400696:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40069a:	bf00      	nop
  40069c:	00400599 	.word	0x00400599

004006a0 <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  4006a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4006a4:	b083      	sub	sp, #12
  4006a6:	4604      	mov	r4, r0
  4006a8:	4688      	mov	r8, r1
  4006aa:	4691      	mov	r9, r2
  4006ac:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  4006ae:	7a5b      	ldrb	r3, [r3, #9]
  4006b0:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4006b4:	2100      	movs	r1, #0
  4006b6:	9100      	str	r1, [sp, #0]
  4006b8:	4649      	mov	r1, r9
  4006ba:	4640      	mov	r0, r8
  4006bc:	4d21      	ldr	r5, [pc, #132]	; (400744 <gfx_mono_draw_char+0xa4>)
  4006be:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  4006c0:	f89b 3000 	ldrb.w	r3, [fp]
  4006c4:	b113      	cbz	r3, 4006cc <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  4006c6:	b003      	add	sp, #12
  4006c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  4006cc:	f89b 2008 	ldrb.w	r2, [fp, #8]
  4006d0:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  4006d2:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  4006d6:	bf18      	it	ne
  4006d8:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  4006da:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  4006de:	f89b 700a 	ldrb.w	r7, [fp, #10]
  4006e2:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  4006e4:	fb17 f70a 	smulbb	r7, r7, sl
  4006e8:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  4006ec:	f8db 3004 	ldr.w	r3, [fp, #4]
  4006f0:	fa13 f787 	uxtah	r7, r3, r7
  4006f4:	e01f      	b.n	400736 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  4006f6:	0064      	lsls	r4, r4, #1
  4006f8:	b2e4      	uxtb	r4, r4
  4006fa:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  4006fc:	b2eb      	uxtb	r3, r5
  4006fe:	429e      	cmp	r6, r3
  400700:	d910      	bls.n	400724 <gfx_mono_draw_char+0x84>
  400702:	b2eb      	uxtb	r3, r5
  400704:	eb08 0003 	add.w	r0, r8, r3
  400708:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  40070a:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  40070e:	bf08      	it	eq
  400710:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  400714:	f014 0f80 	tst.w	r4, #128	; 0x80
  400718:	d0ed      	beq.n	4006f6 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  40071a:	2201      	movs	r2, #1
  40071c:	4649      	mov	r1, r9
  40071e:	4b0a      	ldr	r3, [pc, #40]	; (400748 <gfx_mono_draw_char+0xa8>)
  400720:	4798      	blx	r3
  400722:	e7e8      	b.n	4006f6 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  400724:	f109 0901 	add.w	r9, r9, #1
  400728:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  40072c:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  400730:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  400734:	d0c7      	beq.n	4006c6 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  400736:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  40073a:	2e00      	cmp	r6, #0
  40073c:	d0f2      	beq.n	400724 <gfx_mono_draw_char+0x84>
  40073e:	2500      	movs	r5, #0
  400740:	462c      	mov	r4, r5
  400742:	e7de      	b.n	400702 <gfx_mono_draw_char+0x62>
  400744:	00400669 	.word	0x00400669
  400748:	00400835 	.word	0x00400835

0040074c <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  40074c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  400750:	4604      	mov	r4, r0
  400752:	4690      	mov	r8, r2
  400754:	461d      	mov	r5, r3
  400756:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  400758:	4f0d      	ldr	r7, [pc, #52]	; (400790 <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  40075a:	460e      	mov	r6, r1
  40075c:	e008      	b.n	400770 <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  40075e:	7a6a      	ldrb	r2, [r5, #9]
  400760:	3201      	adds	r2, #1
  400762:	4442      	add	r2, r8
  400764:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  400768:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  40076a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  40076e:	b16b      	cbz	r3, 40078c <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  400770:	7820      	ldrb	r0, [r4, #0]
  400772:	280a      	cmp	r0, #10
  400774:	d0f3      	beq.n	40075e <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  400776:	280d      	cmp	r0, #13
  400778:	d0f7      	beq.n	40076a <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  40077a:	462b      	mov	r3, r5
  40077c:	4642      	mov	r2, r8
  40077e:	4649      	mov	r1, r9
  400780:	47b8      	blx	r7
			x += font->width;
  400782:	7a2b      	ldrb	r3, [r5, #8]
  400784:	4499      	add	r9, r3
  400786:	fa5f f989 	uxtb.w	r9, r9
  40078a:	e7ee      	b.n	40076a <gfx_mono_draw_string+0x1e>
}
  40078c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400790:	004006a1 	.word	0x004006a1

00400794 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  400794:	b570      	push	{r4, r5, r6, lr}
  400796:	4604      	mov	r4, r0
  400798:	460d      	mov	r5, r1
  40079a:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  40079c:	b91b      	cbnz	r3, 4007a6 <gfx_mono_ssd1306_put_byte+0x12>
  40079e:	4b0d      	ldr	r3, [pc, #52]	; (4007d4 <gfx_mono_ssd1306_put_byte+0x40>)
  4007a0:	4798      	blx	r3
  4007a2:	42b0      	cmp	r0, r6
  4007a4:	d015      	beq.n	4007d2 <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  4007a6:	4632      	mov	r2, r6
  4007a8:	4629      	mov	r1, r5
  4007aa:	4620      	mov	r0, r4
  4007ac:	4b0a      	ldr	r3, [pc, #40]	; (4007d8 <gfx_mono_ssd1306_put_byte+0x44>)
  4007ae:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  4007b0:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  4007b4:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  4007b8:	4c08      	ldr	r4, [pc, #32]	; (4007dc <gfx_mono_ssd1306_put_byte+0x48>)
  4007ba:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  4007bc:	f3c5 1002 	ubfx	r0, r5, #4, #3
  4007c0:	f040 0010 	orr.w	r0, r0, #16
  4007c4:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  4007c6:	f005 000f 	and.w	r0, r5, #15
  4007ca:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  4007cc:	4630      	mov	r0, r6
  4007ce:	4b04      	ldr	r3, [pc, #16]	; (4007e0 <gfx_mono_ssd1306_put_byte+0x4c>)
  4007d0:	4798      	blx	r3
  4007d2:	bd70      	pop	{r4, r5, r6, pc}
  4007d4:	00400589 	.word	0x00400589
  4007d8:	00400579 	.word	0x00400579
  4007dc:	004008a5 	.word	0x004008a5
  4007e0:	00400ac5 	.word	0x00400ac5

004007e4 <gfx_mono_ssd1306_init>:
{
  4007e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  4007e8:	480d      	ldr	r0, [pc, #52]	; (400820 <gfx_mono_ssd1306_init+0x3c>)
  4007ea:	4b0e      	ldr	r3, [pc, #56]	; (400824 <gfx_mono_ssd1306_init+0x40>)
  4007ec:	4798      	blx	r3
	ssd1306_init();
  4007ee:	4b0e      	ldr	r3, [pc, #56]	; (400828 <gfx_mono_ssd1306_init+0x44>)
  4007f0:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  4007f2:	2040      	movs	r0, #64	; 0x40
  4007f4:	4b0d      	ldr	r3, [pc, #52]	; (40082c <gfx_mono_ssd1306_init+0x48>)
  4007f6:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4007f8:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  4007fa:	f04f 0801 	mov.w	r8, #1
  4007fe:	462f      	mov	r7, r5
  400800:	4e0b      	ldr	r6, [pc, #44]	; (400830 <gfx_mono_ssd1306_init+0x4c>)
{
  400802:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400804:	4643      	mov	r3, r8
  400806:	463a      	mov	r2, r7
  400808:	b2e1      	uxtb	r1, r4
  40080a:	4628      	mov	r0, r5
  40080c:	47b0      	blx	r6
  40080e:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  400810:	2c80      	cmp	r4, #128	; 0x80
  400812:	d1f7      	bne.n	400804 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400814:	3501      	adds	r5, #1
  400816:	b2ed      	uxtb	r5, r5
  400818:	2d04      	cmp	r5, #4
  40081a:	d1f2      	bne.n	400802 <gfx_mono_ssd1306_init+0x1e>
  40081c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400820:	204009f0 	.word	0x204009f0
  400824:	0040056d 	.word	0x0040056d
  400828:	004008e5 	.word	0x004008e5
  40082c:	004008a5 	.word	0x004008a5
  400830:	00400795 	.word	0x00400795

00400834 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  400834:	09c3      	lsrs	r3, r0, #7
  400836:	d12a      	bne.n	40088e <gfx_mono_ssd1306_draw_pixel+0x5a>
  400838:	291f      	cmp	r1, #31
  40083a:	d828      	bhi.n	40088e <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  40083c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400840:	4614      	mov	r4, r2
  400842:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  400844:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  400846:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  40084a:	2201      	movs	r2, #1
  40084c:	fa02 f701 	lsl.w	r7, r2, r1
  400850:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  400854:	4601      	mov	r1, r0
  400856:	4630      	mov	r0, r6
  400858:	4b0d      	ldr	r3, [pc, #52]	; (400890 <gfx_mono_ssd1306_draw_pixel+0x5c>)
  40085a:	4798      	blx	r3
  40085c:	4602      	mov	r2, r0
	switch (color) {
  40085e:	2c01      	cmp	r4, #1
  400860:	d009      	beq.n	400876 <gfx_mono_ssd1306_draw_pixel+0x42>
  400862:	b164      	cbz	r4, 40087e <gfx_mono_ssd1306_draw_pixel+0x4a>
  400864:	2c02      	cmp	r4, #2
  400866:	d00e      	beq.n	400886 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  400868:	2300      	movs	r3, #0
  40086a:	4629      	mov	r1, r5
  40086c:	4630      	mov	r0, r6
  40086e:	4c09      	ldr	r4, [pc, #36]	; (400894 <gfx_mono_ssd1306_draw_pixel+0x60>)
  400870:	47a0      	blx	r4
  400872:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  400876:	ea48 0200 	orr.w	r2, r8, r0
  40087a:	b2d2      	uxtb	r2, r2
		break;
  40087c:	e7f4      	b.n	400868 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  40087e:	ea20 0207 	bic.w	r2, r0, r7
  400882:	b2d2      	uxtb	r2, r2
		break;
  400884:	e7f0      	b.n	400868 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  400886:	ea88 0200 	eor.w	r2, r8, r0
  40088a:	b2d2      	uxtb	r2, r2
		break;
  40088c:	e7ec      	b.n	400868 <gfx_mono_ssd1306_draw_pixel+0x34>
  40088e:	4770      	bx	lr
  400890:	00400589 	.word	0x00400589
  400894:	00400795 	.word	0x00400795

00400898 <gfx_mono_ssd1306_get_byte>:
{
  400898:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  40089a:	4b01      	ldr	r3, [pc, #4]	; (4008a0 <gfx_mono_ssd1306_get_byte+0x8>)
  40089c:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  40089e:	bd08      	pop	{r3, pc}
  4008a0:	00400589 	.word	0x00400589

004008a4 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  4008a4:	b538      	push	{r3, r4, r5, lr}
  4008a6:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  4008a8:	2208      	movs	r2, #8
  4008aa:	4b09      	ldr	r3, [pc, #36]	; (4008d0 <ssd1306_write_command+0x2c>)
  4008ac:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  4008ae:	4c09      	ldr	r4, [pc, #36]	; (4008d4 <ssd1306_write_command+0x30>)
  4008b0:	2101      	movs	r1, #1
  4008b2:	4620      	mov	r0, r4
  4008b4:	4b08      	ldr	r3, [pc, #32]	; (4008d8 <ssd1306_write_command+0x34>)
  4008b6:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  4008b8:	2301      	movs	r3, #1
  4008ba:	461a      	mov	r2, r3
  4008bc:	4629      	mov	r1, r5
  4008be:	4620      	mov	r0, r4
  4008c0:	4c06      	ldr	r4, [pc, #24]	; (4008dc <ssd1306_write_command+0x38>)
  4008c2:	47a0      	blx	r4
	delay_us(10);
  4008c4:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  4008c8:	4b05      	ldr	r3, [pc, #20]	; (4008e0 <ssd1306_write_command+0x3c>)
  4008ca:	4798      	blx	r3
  4008cc:	bd38      	pop	{r3, r4, r5, pc}
  4008ce:	bf00      	nop
  4008d0:	400e1000 	.word	0x400e1000
  4008d4:	40008000 	.word	0x40008000
  4008d8:	0040039d 	.word	0x0040039d
  4008dc:	004003b3 	.word	0x004003b3
  4008e0:	20400001 	.word	0x20400001

004008e4 <ssd1306_init>:
{
  4008e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4008e8:	4d66      	ldr	r5, [pc, #408]	; (400a84 <ssd1306_init+0x1a0>)
  4008ea:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  4008ee:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4008f0:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4008f4:	4b64      	ldr	r3, [pc, #400]	; (400a88 <ssd1306_init+0x1a4>)
  4008f6:	2708      	movs	r7, #8
  4008f8:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4008fa:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4008fe:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400900:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400904:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  400906:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400908:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40090c:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  40090e:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  400912:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400914:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  400916:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40091a:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  40091c:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40091e:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400922:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  400924:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400926:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  40092a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40092c:	f022 0208 	bic.w	r2, r2, #8
  400930:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400932:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400934:	f022 0208 	bic.w	r2, r2, #8
  400938:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  40093a:	601f      	str	r7, [r3, #0]
  40093c:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  40093e:	631f      	str	r7, [r3, #48]	; 0x30
  400940:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400942:	f8df 817c 	ldr.w	r8, [pc, #380]	; 400ac0 <ssd1306_init+0x1dc>
  400946:	2300      	movs	r3, #0
  400948:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  40094c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400950:	4640      	mov	r0, r8
  400952:	4c4e      	ldr	r4, [pc, #312]	; (400a8c <ssd1306_init+0x1a8>)
  400954:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400956:	2300      	movs	r3, #0
  400958:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  40095c:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400960:	4640      	mov	r0, r8
  400962:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  400964:	2300      	movs	r3, #0
  400966:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  40096a:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40096e:	4640      	mov	r0, r8
  400970:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  400972:	2300      	movs	r3, #0
  400974:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400978:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40097c:	4640      	mov	r0, r8
  40097e:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  400980:	2300      	movs	r3, #0
  400982:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400986:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  40098a:	4640      	mov	r0, r8
  40098c:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  40098e:	2300      	movs	r3, #0
  400990:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400994:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400998:	4640      	mov	r0, r8
  40099a:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  40099c:	4c3c      	ldr	r4, [pc, #240]	; (400a90 <ssd1306_init+0x1ac>)
  40099e:	f04f 0902 	mov.w	r9, #2
  4009a2:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  4009a6:	f04f 0880 	mov.w	r8, #128	; 0x80
  4009aa:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  4009ae:	6863      	ldr	r3, [r4, #4]
  4009b0:	f043 0301 	orr.w	r3, r3, #1
  4009b4:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  4009b6:	463a      	mov	r2, r7
  4009b8:	2101      	movs	r1, #1
  4009ba:	4620      	mov	r0, r4
  4009bc:	4b35      	ldr	r3, [pc, #212]	; (400a94 <ssd1306_init+0x1b0>)
  4009be:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  4009c0:	2200      	movs	r2, #0
  4009c2:	2101      	movs	r1, #1
  4009c4:	4620      	mov	r0, r4
  4009c6:	4b34      	ldr	r3, [pc, #208]	; (400a98 <ssd1306_init+0x1b4>)
  4009c8:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  4009ca:	2200      	movs	r2, #0
  4009cc:	2101      	movs	r1, #1
  4009ce:	4620      	mov	r0, r4
  4009d0:	4b32      	ldr	r3, [pc, #200]	; (400a9c <ssd1306_init+0x1b8>)
  4009d2:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  4009d4:	6863      	ldr	r3, [r4, #4]
  4009d6:	f023 0302 	bic.w	r3, r3, #2
  4009da:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  4009dc:	2200      	movs	r2, #0
  4009de:	2101      	movs	r1, #1
  4009e0:	4620      	mov	r0, r4
  4009e2:	4b2f      	ldr	r3, [pc, #188]	; (400aa0 <ssd1306_init+0x1bc>)
  4009e4:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  4009e6:	6863      	ldr	r3, [r4, #4]
  4009e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  4009ec:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  4009ee:	6863      	ldr	r3, [r4, #4]
  4009f0:	f043 0310 	orr.w	r3, r3, #16
  4009f4:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(1000000, sysclk_get_peripheral_hz());
  4009f6:	492b      	ldr	r1, [pc, #172]	; (400aa4 <ssd1306_init+0x1c0>)
  4009f8:	482b      	ldr	r0, [pc, #172]	; (400aa8 <ssd1306_init+0x1c4>)
  4009fa:	4b2c      	ldr	r3, [pc, #176]	; (400aac <ssd1306_init+0x1c8>)
  4009fc:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  4009fe:	b2c2      	uxtb	r2, r0
  400a00:	2101      	movs	r1, #1
  400a02:	4620      	mov	r0, r4
  400a04:	4b2a      	ldr	r3, [pc, #168]	; (400ab0 <ssd1306_init+0x1cc>)
  400a06:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400a08:	4620      	mov	r0, r4
  400a0a:	4b2a      	ldr	r3, [pc, #168]	; (400ab4 <ssd1306_init+0x1d0>)
  400a0c:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  400a0e:	2301      	movs	r3, #1
  400a10:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400a12:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  400a14:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a18:	4c27      	ldr	r4, [pc, #156]	; (400ab8 <ssd1306_init+0x1d4>)
  400a1a:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400a1c:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  400a1e:	f640 30b8 	movw	r0, #3000	; 0xbb8
  400a22:	47a0      	blx	r4
  400a24:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  400a26:	20a8      	movs	r0, #168	; 0xa8
  400a28:	4c24      	ldr	r4, [pc, #144]	; (400abc <ssd1306_init+0x1d8>)
  400a2a:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  400a2c:	201f      	movs	r0, #31
  400a2e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  400a30:	20d3      	movs	r0, #211	; 0xd3
  400a32:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  400a34:	2000      	movs	r0, #0
  400a36:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  400a38:	2040      	movs	r0, #64	; 0x40
  400a3a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  400a3c:	20a1      	movs	r0, #161	; 0xa1
  400a3e:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  400a40:	20c8      	movs	r0, #200	; 0xc8
  400a42:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  400a44:	20da      	movs	r0, #218	; 0xda
  400a46:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  400a48:	4648      	mov	r0, r9
  400a4a:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  400a4c:	2081      	movs	r0, #129	; 0x81
  400a4e:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  400a50:	208f      	movs	r0, #143	; 0x8f
  400a52:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  400a54:	20a4      	movs	r0, #164	; 0xa4
  400a56:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  400a58:	20a6      	movs	r0, #166	; 0xa6
  400a5a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  400a5c:	20d5      	movs	r0, #213	; 0xd5
  400a5e:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  400a60:	4640      	mov	r0, r8
  400a62:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  400a64:	208d      	movs	r0, #141	; 0x8d
  400a66:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  400a68:	2014      	movs	r0, #20
  400a6a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  400a6c:	20db      	movs	r0, #219	; 0xdb
  400a6e:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  400a70:	2040      	movs	r0, #64	; 0x40
  400a72:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400a74:	20d9      	movs	r0, #217	; 0xd9
  400a76:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400a78:	20f1      	movs	r0, #241	; 0xf1
  400a7a:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400a7c:	20af      	movs	r0, #175	; 0xaf
  400a7e:	47a0      	blx	r4
  400a80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400a84:	400e1200 	.word	0x400e1200
  400a88:	400e1000 	.word	0x400e1000
  400a8c:	00400dad 	.word	0x00400dad
  400a90:	40008000 	.word	0x40008000
  400a94:	00400423 	.word	0x00400423
  400a98:	004003e7 	.word	0x004003e7
  400a9c:	00400405 	.word	0x00400405
  400aa0:	00400469 	.word	0x00400469
  400aa4:	08f0d180 	.word	0x08f0d180
  400aa8:	000f4240 	.word	0x000f4240
  400aac:	0040047d 	.word	0x0040047d
  400ab0:	00400493 	.word	0x00400493
  400ab4:	00400371 	.word	0x00400371
  400ab8:	20400001 	.word	0x20400001
  400abc:	004008a5 	.word	0x004008a5
  400ac0:	400e1400 	.word	0x400e1400

00400ac4 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400ac4:	b538      	push	{r3, r4, r5, lr}
  400ac6:	4605      	mov	r5, r0
  400ac8:	2208      	movs	r2, #8
  400aca:	4b09      	ldr	r3, [pc, #36]	; (400af0 <ssd1306_write_data+0x2c>)
  400acc:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  400ace:	4c09      	ldr	r4, [pc, #36]	; (400af4 <ssd1306_write_data+0x30>)
  400ad0:	2101      	movs	r1, #1
  400ad2:	4620      	mov	r0, r4
  400ad4:	4b08      	ldr	r3, [pc, #32]	; (400af8 <ssd1306_write_data+0x34>)
  400ad6:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400ad8:	2301      	movs	r3, #1
  400ada:	461a      	mov	r2, r3
  400adc:	4629      	mov	r1, r5
  400ade:	4620      	mov	r0, r4
  400ae0:	4c06      	ldr	r4, [pc, #24]	; (400afc <ssd1306_write_data+0x38>)
  400ae2:	47a0      	blx	r4
	delay_us(10);
  400ae4:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400ae8:	4b05      	ldr	r3, [pc, #20]	; (400b00 <ssd1306_write_data+0x3c>)
  400aea:	4798      	blx	r3
  400aec:	bd38      	pop	{r3, r4, r5, pc}
  400aee:	bf00      	nop
  400af0:	400e1000 	.word	0x400e1000
  400af4:	40008000 	.word	0x40008000
  400af8:	0040039d 	.word	0x0040039d
  400afc:	004003b3 	.word	0x004003b3
  400b00:	20400001 	.word	0x20400001

00400b04 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400b04:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400b06:	4810      	ldr	r0, [pc, #64]	; (400b48 <sysclk_init+0x44>)
  400b08:	4b10      	ldr	r3, [pc, #64]	; (400b4c <sysclk_init+0x48>)
  400b0a:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400b0c:	213e      	movs	r1, #62	; 0x3e
  400b0e:	2000      	movs	r0, #0
  400b10:	4b0f      	ldr	r3, [pc, #60]	; (400b50 <sysclk_init+0x4c>)
  400b12:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  400b14:	4c0f      	ldr	r4, [pc, #60]	; (400b54 <sysclk_init+0x50>)
  400b16:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400b18:	2800      	cmp	r0, #0
  400b1a:	d0fc      	beq.n	400b16 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400b1c:	4b0e      	ldr	r3, [pc, #56]	; (400b58 <sysclk_init+0x54>)
  400b1e:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400b20:	4a0e      	ldr	r2, [pc, #56]	; (400b5c <sysclk_init+0x58>)
  400b22:	4b0f      	ldr	r3, [pc, #60]	; (400b60 <sysclk_init+0x5c>)
  400b24:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  400b26:	4c0f      	ldr	r4, [pc, #60]	; (400b64 <sysclk_init+0x60>)
  400b28:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400b2a:	2800      	cmp	r0, #0
  400b2c:	d0fc      	beq.n	400b28 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  400b2e:	2002      	movs	r0, #2
  400b30:	4b0d      	ldr	r3, [pc, #52]	; (400b68 <sysclk_init+0x64>)
  400b32:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400b34:	2000      	movs	r0, #0
  400b36:	4b0d      	ldr	r3, [pc, #52]	; (400b6c <sysclk_init+0x68>)
  400b38:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  400b3a:	4b0d      	ldr	r3, [pc, #52]	; (400b70 <sysclk_init+0x6c>)
  400b3c:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400b3e:	4802      	ldr	r0, [pc, #8]	; (400b48 <sysclk_init+0x44>)
  400b40:	4b02      	ldr	r3, [pc, #8]	; (400b4c <sysclk_init+0x48>)
  400b42:	4798      	blx	r3
  400b44:	bd10      	pop	{r4, pc}
  400b46:	bf00      	nop
  400b48:	11e1a300 	.word	0x11e1a300
  400b4c:	004015bd 	.word	0x004015bd
  400b50:	00401049 	.word	0x00401049
  400b54:	0040109d 	.word	0x0040109d
  400b58:	004010ad 	.word	0x004010ad
  400b5c:	20183f01 	.word	0x20183f01
  400b60:	400e0600 	.word	0x400e0600
  400b64:	004010bd 	.word	0x004010bd
  400b68:	00400fad 	.word	0x00400fad
  400b6c:	00400fe5 	.word	0x00400fe5
  400b70:	004014b1 	.word	0x004014b1

00400b74 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400b76:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400b7a:	4b48      	ldr	r3, [pc, #288]	; (400c9c <board_init+0x128>)
  400b7c:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  400b7e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b82:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400b86:	4b46      	ldr	r3, [pc, #280]	; (400ca0 <board_init+0x12c>)
  400b88:	2200      	movs	r2, #0
  400b8a:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  400b8e:	695a      	ldr	r2, [r3, #20]
  400b90:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400b94:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400b96:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400b9a:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  400b9e:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  400ba2:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400ba6:	f007 0007 	and.w	r0, r7, #7
  400baa:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400bac:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  400bb0:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400bb4:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400bb8:	f3bf 8f4f 	dsb	sy
  400bbc:	f04f 34ff 	mov.w	r4, #4294967295
  400bc0:	fa04 fc00 	lsl.w	ip, r4, r0
  400bc4:	fa06 f000 	lsl.w	r0, r6, r0
  400bc8:	fa04 f40e 	lsl.w	r4, r4, lr
  400bcc:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  400bd0:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  400bd2:	463a      	mov	r2, r7
  400bd4:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400bd6:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400bda:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  400bde:	3a01      	subs	r2, #1
  400be0:	4423      	add	r3, r4
  400be2:	f1b2 3fff 	cmp.w	r2, #4294967295
  400be6:	d1f6      	bne.n	400bd6 <board_init+0x62>
        } while(sets--);
  400be8:	3e01      	subs	r6, #1
  400bea:	4460      	add	r0, ip
  400bec:	f1b6 3fff 	cmp.w	r6, #4294967295
  400bf0:	d1ef      	bne.n	400bd2 <board_init+0x5e>
  400bf2:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400bf6:	4b2a      	ldr	r3, [pc, #168]	; (400ca0 <board_init+0x12c>)
  400bf8:	695a      	ldr	r2, [r3, #20]
  400bfa:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  400bfe:	615a      	str	r2, [r3, #20]
  400c00:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c04:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c08:	4a26      	ldr	r2, [pc, #152]	; (400ca4 <board_init+0x130>)
  400c0a:	4927      	ldr	r1, [pc, #156]	; (400ca8 <board_init+0x134>)
  400c0c:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400c0e:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  400c12:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  400c14:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c18:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  400c1c:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  400c20:	f022 0201 	bic.w	r2, r2, #1
  400c24:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  400c28:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  400c2c:	f022 0201 	bic.w	r2, r2, #1
  400c30:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  400c34:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400c38:	f3bf 8f6f 	isb	sy
  400c3c:	200a      	movs	r0, #10
  400c3e:	4c1b      	ldr	r4, [pc, #108]	; (400cac <board_init+0x138>)
  400c40:	47a0      	blx	r4
  400c42:	200b      	movs	r0, #11
  400c44:	47a0      	blx	r4
  400c46:	200c      	movs	r0, #12
  400c48:	47a0      	blx	r4
  400c4a:	2010      	movs	r0, #16
  400c4c:	47a0      	blx	r4
  400c4e:	2011      	movs	r0, #17
  400c50:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400c52:	4b17      	ldr	r3, [pc, #92]	; (400cb0 <board_init+0x13c>)
  400c54:	f44f 7280 	mov.w	r2, #256	; 0x100
  400c58:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400c5a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  400c5e:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  400c60:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400c64:	f44f 6200 	mov.w	r2, #2048	; 0x800
  400c68:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400c6a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  400c6e:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  400c70:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400c74:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400c76:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400c78:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400c7c:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400c7e:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400c82:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400c84:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400c86:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400c8a:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400c8c:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400c90:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400c94:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400c98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400c9a:	bf00      	nop
  400c9c:	400e1850 	.word	0x400e1850
  400ca0:	e000ed00 	.word	0xe000ed00
  400ca4:	400e0c00 	.word	0x400e0c00
  400ca8:	5a00080c 	.word	0x5a00080c
  400cac:	004010cd 	.word	0x004010cd
  400cb0:	400e1200 	.word	0x400e1200

00400cb4 <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400cb4:	6301      	str	r1, [r0, #48]	; 0x30
  400cb6:	4770      	bx	lr

00400cb8 <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400cb8:	6341      	str	r1, [r0, #52]	; 0x34
  400cba:	4770      	bx	lr

00400cbc <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400cbc:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400cbe:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400cc2:	d03a      	beq.n	400d3a <pio_set_peripheral+0x7e>
  400cc4:	d813      	bhi.n	400cee <pio_set_peripheral+0x32>
  400cc6:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400cca:	d025      	beq.n	400d18 <pio_set_peripheral+0x5c>
  400ccc:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400cd0:	d10a      	bne.n	400ce8 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400cd2:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400cd4:	4313      	orrs	r3, r2
  400cd6:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400cd8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400cda:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400cdc:	400b      	ands	r3, r1
  400cde:	ea23 0302 	bic.w	r3, r3, r2
  400ce2:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400ce4:	6042      	str	r2, [r0, #4]
  400ce6:	4770      	bx	lr
	switch (ul_type) {
  400ce8:	2900      	cmp	r1, #0
  400cea:	d1fb      	bne.n	400ce4 <pio_set_peripheral+0x28>
  400cec:	4770      	bx	lr
  400cee:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400cf2:	d021      	beq.n	400d38 <pio_set_peripheral+0x7c>
  400cf4:	d809      	bhi.n	400d0a <pio_set_peripheral+0x4e>
  400cf6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400cfa:	d1f3      	bne.n	400ce4 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400cfc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400cfe:	4313      	orrs	r3, r2
  400d00:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d02:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d04:	4313      	orrs	r3, r2
  400d06:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d08:	e7ec      	b.n	400ce4 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400d0a:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400d0e:	d013      	beq.n	400d38 <pio_set_peripheral+0x7c>
  400d10:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400d14:	d010      	beq.n	400d38 <pio_set_peripheral+0x7c>
  400d16:	e7e5      	b.n	400ce4 <pio_set_peripheral+0x28>
{
  400d18:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d1a:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d1c:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400d1e:	43d3      	mvns	r3, r2
  400d20:	4021      	ands	r1, r4
  400d22:	461c      	mov	r4, r3
  400d24:	4019      	ands	r1, r3
  400d26:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d28:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400d2a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400d2c:	400b      	ands	r3, r1
  400d2e:	4023      	ands	r3, r4
  400d30:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400d32:	6042      	str	r2, [r0, #4]
}
  400d34:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d38:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400d3a:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400d3c:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400d3e:	400b      	ands	r3, r1
  400d40:	ea23 0302 	bic.w	r3, r3, r2
  400d44:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400d46:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400d48:	4313      	orrs	r3, r2
  400d4a:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400d4c:	e7ca      	b.n	400ce4 <pio_set_peripheral+0x28>

00400d4e <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400d4e:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d50:	f012 0f01 	tst.w	r2, #1
  400d54:	d10d      	bne.n	400d72 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400d56:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400d58:	f012 0f0a 	tst.w	r2, #10
  400d5c:	d00b      	beq.n	400d76 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400d5e:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400d60:	f012 0f02 	tst.w	r2, #2
  400d64:	d109      	bne.n	400d7a <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400d66:	f012 0f08 	tst.w	r2, #8
  400d6a:	d008      	beq.n	400d7e <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400d6c:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400d70:	e005      	b.n	400d7e <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400d72:	6641      	str	r1, [r0, #100]	; 0x64
  400d74:	e7f0      	b.n	400d58 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400d76:	6241      	str	r1, [r0, #36]	; 0x24
  400d78:	e7f2      	b.n	400d60 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400d7a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400d7e:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400d80:	6001      	str	r1, [r0, #0]
  400d82:	4770      	bx	lr

00400d84 <pio_set_output>:
{
  400d84:	b410      	push	{r4}
  400d86:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400d88:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400d8a:	b94c      	cbnz	r4, 400da0 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400d8c:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400d8e:	b14b      	cbz	r3, 400da4 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400d90:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400d92:	b94a      	cbnz	r2, 400da8 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400d94:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400d96:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400d98:	6001      	str	r1, [r0, #0]
}
  400d9a:	f85d 4b04 	ldr.w	r4, [sp], #4
  400d9e:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400da0:	6641      	str	r1, [r0, #100]	; 0x64
  400da2:	e7f4      	b.n	400d8e <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400da4:	6541      	str	r1, [r0, #84]	; 0x54
  400da6:	e7f4      	b.n	400d92 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400da8:	6301      	str	r1, [r0, #48]	; 0x30
  400daa:	e7f4      	b.n	400d96 <pio_set_output+0x12>

00400dac <pio_configure>:
{
  400dac:	b570      	push	{r4, r5, r6, lr}
  400dae:	b082      	sub	sp, #8
  400db0:	4605      	mov	r5, r0
  400db2:	4616      	mov	r6, r2
  400db4:	461c      	mov	r4, r3
	switch (ul_type) {
  400db6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400dba:	d014      	beq.n	400de6 <pio_configure+0x3a>
  400dbc:	d90a      	bls.n	400dd4 <pio_configure+0x28>
  400dbe:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400dc2:	d024      	beq.n	400e0e <pio_configure+0x62>
  400dc4:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400dc8:	d021      	beq.n	400e0e <pio_configure+0x62>
  400dca:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400dce:	d017      	beq.n	400e00 <pio_configure+0x54>
		return 0;
  400dd0:	2000      	movs	r0, #0
  400dd2:	e01a      	b.n	400e0a <pio_configure+0x5e>
	switch (ul_type) {
  400dd4:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400dd8:	d005      	beq.n	400de6 <pio_configure+0x3a>
  400dda:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400dde:	d002      	beq.n	400de6 <pio_configure+0x3a>
  400de0:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400de4:	d1f4      	bne.n	400dd0 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400de6:	4632      	mov	r2, r6
  400de8:	4628      	mov	r0, r5
  400dea:	4b11      	ldr	r3, [pc, #68]	; (400e30 <pio_configure+0x84>)
  400dec:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400dee:	f014 0f01 	tst.w	r4, #1
  400df2:	d102      	bne.n	400dfa <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400df4:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400df6:	2001      	movs	r0, #1
  400df8:	e007      	b.n	400e0a <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400dfa:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400dfc:	2001      	movs	r0, #1
  400dfe:	e004      	b.n	400e0a <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400e00:	461a      	mov	r2, r3
  400e02:	4631      	mov	r1, r6
  400e04:	4b0b      	ldr	r3, [pc, #44]	; (400e34 <pio_configure+0x88>)
  400e06:	4798      	blx	r3
	return 1;
  400e08:	2001      	movs	r0, #1
}
  400e0a:	b002      	add	sp, #8
  400e0c:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400e0e:	f004 0301 	and.w	r3, r4, #1
  400e12:	9300      	str	r3, [sp, #0]
  400e14:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400e18:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400e1c:	bf14      	ite	ne
  400e1e:	2200      	movne	r2, #0
  400e20:	2201      	moveq	r2, #1
  400e22:	4631      	mov	r1, r6
  400e24:	4628      	mov	r0, r5
  400e26:	4c04      	ldr	r4, [pc, #16]	; (400e38 <pio_configure+0x8c>)
  400e28:	47a0      	blx	r4
	return 1;
  400e2a:	2001      	movs	r0, #1
		break;
  400e2c:	e7ed      	b.n	400e0a <pio_configure+0x5e>
  400e2e:	bf00      	nop
  400e30:	00400cbd 	.word	0x00400cbd
  400e34:	00400d4f 	.word	0x00400d4f
  400e38:	00400d85 	.word	0x00400d85

00400e3c <pio_get_output_data_status>:
	if ((p_pio->PIO_ODSR & ul_mask) == 0) {
  400e3c:	6b83      	ldr	r3, [r0, #56]	; 0x38
  400e3e:	420b      	tst	r3, r1
}
  400e40:	bf14      	ite	ne
  400e42:	2001      	movne	r0, #1
  400e44:	2000      	moveq	r0, #0
  400e46:	4770      	bx	lr

00400e48 <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400e48:	f012 0f10 	tst.w	r2, #16
  400e4c:	d012      	beq.n	400e74 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400e4e:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400e52:	f012 0f20 	tst.w	r2, #32
  400e56:	d007      	beq.n	400e68 <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400e58:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400e5c:	f012 0f40 	tst.w	r2, #64	; 0x40
  400e60:	d005      	beq.n	400e6e <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400e62:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400e66:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400e68:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400e6c:	e7f6      	b.n	400e5c <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400e6e:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400e72:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400e74:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400e78:	4770      	bx	lr

00400e7a <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400e7a:	6401      	str	r1, [r0, #64]	; 0x40
  400e7c:	4770      	bx	lr

00400e7e <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400e7e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400e80:	4770      	bx	lr

00400e82 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400e82:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400e84:	4770      	bx	lr
	...

00400e88 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400e88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400e8c:	4604      	mov	r4, r0
  400e8e:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400e90:	4b0e      	ldr	r3, [pc, #56]	; (400ecc <pio_handler_process+0x44>)
  400e92:	4798      	blx	r3
  400e94:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400e96:	4620      	mov	r0, r4
  400e98:	4b0d      	ldr	r3, [pc, #52]	; (400ed0 <pio_handler_process+0x48>)
  400e9a:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400e9c:	4005      	ands	r5, r0
  400e9e:	d013      	beq.n	400ec8 <pio_handler_process+0x40>
  400ea0:	4c0c      	ldr	r4, [pc, #48]	; (400ed4 <pio_handler_process+0x4c>)
  400ea2:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400ea6:	e003      	b.n	400eb0 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400ea8:	42b4      	cmp	r4, r6
  400eaa:	d00d      	beq.n	400ec8 <pio_handler_process+0x40>
  400eac:	3410      	adds	r4, #16
		while (status != 0) {
  400eae:	b15d      	cbz	r5, 400ec8 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400eb0:	6820      	ldr	r0, [r4, #0]
  400eb2:	4540      	cmp	r0, r8
  400eb4:	d1f8      	bne.n	400ea8 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400eb6:	6861      	ldr	r1, [r4, #4]
  400eb8:	4229      	tst	r1, r5
  400eba:	d0f5      	beq.n	400ea8 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400ebc:	68e3      	ldr	r3, [r4, #12]
  400ebe:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400ec0:	6863      	ldr	r3, [r4, #4]
  400ec2:	ea25 0503 	bic.w	r5, r5, r3
  400ec6:	e7ef      	b.n	400ea8 <pio_handler_process+0x20>
  400ec8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400ecc:	00400e7f 	.word	0x00400e7f
  400ed0:	00400e83 	.word	0x00400e83
  400ed4:	20400bf0 	.word	0x20400bf0

00400ed8 <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400eda:	4c18      	ldr	r4, [pc, #96]	; (400f3c <pio_handler_set+0x64>)
  400edc:	6826      	ldr	r6, [r4, #0]
  400ede:	2e06      	cmp	r6, #6
  400ee0:	d82a      	bhi.n	400f38 <pio_handler_set+0x60>
  400ee2:	f04f 0c00 	mov.w	ip, #0
  400ee6:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400ee8:	4f15      	ldr	r7, [pc, #84]	; (400f40 <pio_handler_set+0x68>)
  400eea:	e004      	b.n	400ef6 <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400eec:	3401      	adds	r4, #1
  400eee:	b2e4      	uxtb	r4, r4
  400ef0:	46a4      	mov	ip, r4
  400ef2:	42a6      	cmp	r6, r4
  400ef4:	d309      	bcc.n	400f0a <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400ef6:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400ef8:	0125      	lsls	r5, r4, #4
  400efa:	597d      	ldr	r5, [r7, r5]
  400efc:	428d      	cmp	r5, r1
  400efe:	d1f5      	bne.n	400eec <pio_handler_set+0x14>
  400f00:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400f04:	686d      	ldr	r5, [r5, #4]
  400f06:	4295      	cmp	r5, r2
  400f08:	d1f0      	bne.n	400eec <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400f0a:	4d0d      	ldr	r5, [pc, #52]	; (400f40 <pio_handler_set+0x68>)
  400f0c:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400f10:	eb05 040e 	add.w	r4, r5, lr
  400f14:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400f18:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400f1a:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400f1c:	9906      	ldr	r1, [sp, #24]
  400f1e:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400f20:	3601      	adds	r6, #1
  400f22:	4566      	cmp	r6, ip
  400f24:	d005      	beq.n	400f32 <pio_handler_set+0x5a>
  400f26:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400f28:	461a      	mov	r2, r3
  400f2a:	4b06      	ldr	r3, [pc, #24]	; (400f44 <pio_handler_set+0x6c>)
  400f2c:	4798      	blx	r3

	return 0;
  400f2e:	2000      	movs	r0, #0
  400f30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400f32:	4902      	ldr	r1, [pc, #8]	; (400f3c <pio_handler_set+0x64>)
  400f34:	600e      	str	r6, [r1, #0]
  400f36:	e7f6      	b.n	400f26 <pio_handler_set+0x4e>
		return 1;
  400f38:	2001      	movs	r0, #1
}
  400f3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400f3c:	20400c60 	.word	0x20400c60
  400f40:	20400bf0 	.word	0x20400bf0
  400f44:	00400e49 	.word	0x00400e49

00400f48 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400f48:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400f4a:	210a      	movs	r1, #10
  400f4c:	4801      	ldr	r0, [pc, #4]	; (400f54 <PIOA_Handler+0xc>)
  400f4e:	4b02      	ldr	r3, [pc, #8]	; (400f58 <PIOA_Handler+0x10>)
  400f50:	4798      	blx	r3
  400f52:	bd08      	pop	{r3, pc}
  400f54:	400e0e00 	.word	0x400e0e00
  400f58:	00400e89 	.word	0x00400e89

00400f5c <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400f5c:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400f5e:	210b      	movs	r1, #11
  400f60:	4801      	ldr	r0, [pc, #4]	; (400f68 <PIOB_Handler+0xc>)
  400f62:	4b02      	ldr	r3, [pc, #8]	; (400f6c <PIOB_Handler+0x10>)
  400f64:	4798      	blx	r3
  400f66:	bd08      	pop	{r3, pc}
  400f68:	400e1000 	.word	0x400e1000
  400f6c:	00400e89 	.word	0x00400e89

00400f70 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400f70:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400f72:	210c      	movs	r1, #12
  400f74:	4801      	ldr	r0, [pc, #4]	; (400f7c <PIOC_Handler+0xc>)
  400f76:	4b02      	ldr	r3, [pc, #8]	; (400f80 <PIOC_Handler+0x10>)
  400f78:	4798      	blx	r3
  400f7a:	bd08      	pop	{r3, pc}
  400f7c:	400e1200 	.word	0x400e1200
  400f80:	00400e89 	.word	0x00400e89

00400f84 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400f84:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400f86:	2110      	movs	r1, #16
  400f88:	4801      	ldr	r0, [pc, #4]	; (400f90 <PIOD_Handler+0xc>)
  400f8a:	4b02      	ldr	r3, [pc, #8]	; (400f94 <PIOD_Handler+0x10>)
  400f8c:	4798      	blx	r3
  400f8e:	bd08      	pop	{r3, pc}
  400f90:	400e1400 	.word	0x400e1400
  400f94:	00400e89 	.word	0x00400e89

00400f98 <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400f98:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400f9a:	2111      	movs	r1, #17
  400f9c:	4801      	ldr	r0, [pc, #4]	; (400fa4 <PIOE_Handler+0xc>)
  400f9e:	4b02      	ldr	r3, [pc, #8]	; (400fa8 <PIOE_Handler+0x10>)
  400fa0:	4798      	blx	r3
  400fa2:	bd08      	pop	{r3, pc}
  400fa4:	400e1600 	.word	0x400e1600
  400fa8:	00400e89 	.word	0x00400e89

00400fac <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400fac:	2803      	cmp	r0, #3
  400fae:	d011      	beq.n	400fd4 <pmc_mck_set_division+0x28>
  400fb0:	2804      	cmp	r0, #4
  400fb2:	d012      	beq.n	400fda <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400fb4:	2802      	cmp	r0, #2
  400fb6:	bf0c      	ite	eq
  400fb8:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400fbc:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400fbe:	4a08      	ldr	r2, [pc, #32]	; (400fe0 <pmc_mck_set_division+0x34>)
  400fc0:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400fc2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400fc6:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400fc8:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400fca:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fcc:	f013 0f08 	tst.w	r3, #8
  400fd0:	d0fb      	beq.n	400fca <pmc_mck_set_division+0x1e>
}
  400fd2:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400fd4:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400fd8:	e7f1      	b.n	400fbe <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400fda:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400fde:	e7ee      	b.n	400fbe <pmc_mck_set_division+0x12>
  400fe0:	400e0600 	.word	0x400e0600

00400fe4 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400fe4:	4a17      	ldr	r2, [pc, #92]	; (401044 <pmc_switch_mck_to_pllack+0x60>)
  400fe6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400fe8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400fec:	4318      	orrs	r0, r3
  400fee:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400ff0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400ff2:	f013 0f08 	tst.w	r3, #8
  400ff6:	d10a      	bne.n	40100e <pmc_switch_mck_to_pllack+0x2a>
  400ff8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400ffc:	4911      	ldr	r1, [pc, #68]	; (401044 <pmc_switch_mck_to_pllack+0x60>)
  400ffe:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  401000:	f012 0f08 	tst.w	r2, #8
  401004:	d103      	bne.n	40100e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  401006:	3b01      	subs	r3, #1
  401008:	d1f9      	bne.n	400ffe <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40100a:	2001      	movs	r0, #1
  40100c:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  40100e:	4a0d      	ldr	r2, [pc, #52]	; (401044 <pmc_switch_mck_to_pllack+0x60>)
  401010:	6b13      	ldr	r3, [r2, #48]	; 0x30
  401012:	f023 0303 	bic.w	r3, r3, #3
  401016:	f043 0302 	orr.w	r3, r3, #2
  40101a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40101c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40101e:	f013 0f08 	tst.w	r3, #8
  401022:	d10a      	bne.n	40103a <pmc_switch_mck_to_pllack+0x56>
  401024:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  401028:	4906      	ldr	r1, [pc, #24]	; (401044 <pmc_switch_mck_to_pllack+0x60>)
  40102a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40102c:	f012 0f08 	tst.w	r2, #8
  401030:	d105      	bne.n	40103e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  401032:	3b01      	subs	r3, #1
  401034:	d1f9      	bne.n	40102a <pmc_switch_mck_to_pllack+0x46>
			return 1;
  401036:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  401038:	4770      	bx	lr
	return 0;
  40103a:	2000      	movs	r0, #0
  40103c:	4770      	bx	lr
  40103e:	2000      	movs	r0, #0
  401040:	4770      	bx	lr
  401042:	bf00      	nop
  401044:	400e0600 	.word	0x400e0600

00401048 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  401048:	b9a0      	cbnz	r0, 401074 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40104a:	480e      	ldr	r0, [pc, #56]	; (401084 <pmc_switch_mainck_to_xtal+0x3c>)
  40104c:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  40104e:	0209      	lsls	r1, r1, #8
  401050:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  401052:	4a0d      	ldr	r2, [pc, #52]	; (401088 <pmc_switch_mainck_to_xtal+0x40>)
  401054:	401a      	ands	r2, r3
  401056:	4b0d      	ldr	r3, [pc, #52]	; (40108c <pmc_switch_mainck_to_xtal+0x44>)
  401058:	4313      	orrs	r3, r2
  40105a:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40105c:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  40105e:	4602      	mov	r2, r0
  401060:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401062:	f013 0f01 	tst.w	r3, #1
  401066:	d0fb      	beq.n	401060 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401068:	4a06      	ldr	r2, [pc, #24]	; (401084 <pmc_switch_mainck_to_xtal+0x3c>)
  40106a:	6a11      	ldr	r1, [r2, #32]
  40106c:	4b08      	ldr	r3, [pc, #32]	; (401090 <pmc_switch_mainck_to_xtal+0x48>)
  40106e:	430b      	orrs	r3, r1
  401070:	6213      	str	r3, [r2, #32]
  401072:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401074:	4903      	ldr	r1, [pc, #12]	; (401084 <pmc_switch_mainck_to_xtal+0x3c>)
  401076:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401078:	4a06      	ldr	r2, [pc, #24]	; (401094 <pmc_switch_mainck_to_xtal+0x4c>)
  40107a:	401a      	ands	r2, r3
  40107c:	4b06      	ldr	r3, [pc, #24]	; (401098 <pmc_switch_mainck_to_xtal+0x50>)
  40107e:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401080:	620b      	str	r3, [r1, #32]
  401082:	4770      	bx	lr
  401084:	400e0600 	.word	0x400e0600
  401088:	ffc8fffc 	.word	0xffc8fffc
  40108c:	00370001 	.word	0x00370001
  401090:	01370000 	.word	0x01370000
  401094:	fec8fffc 	.word	0xfec8fffc
  401098:	01370002 	.word	0x01370002

0040109c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  40109c:	4b02      	ldr	r3, [pc, #8]	; (4010a8 <pmc_osc_is_ready_mainck+0xc>)
  40109e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4010a0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4010a4:	4770      	bx	lr
  4010a6:	bf00      	nop
  4010a8:	400e0600 	.word	0x400e0600

004010ac <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4010ac:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4010b0:	4b01      	ldr	r3, [pc, #4]	; (4010b8 <pmc_disable_pllack+0xc>)
  4010b2:	629a      	str	r2, [r3, #40]	; 0x28
  4010b4:	4770      	bx	lr
  4010b6:	bf00      	nop
  4010b8:	400e0600 	.word	0x400e0600

004010bc <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4010bc:	4b02      	ldr	r3, [pc, #8]	; (4010c8 <pmc_is_locked_pllack+0xc>)
  4010be:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4010c0:	f000 0002 	and.w	r0, r0, #2
  4010c4:	4770      	bx	lr
  4010c6:	bf00      	nop
  4010c8:	400e0600 	.word	0x400e0600

004010cc <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  4010cc:	283f      	cmp	r0, #63	; 0x3f
  4010ce:	d81e      	bhi.n	40110e <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  4010d0:	281f      	cmp	r0, #31
  4010d2:	d80c      	bhi.n	4010ee <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  4010d4:	4b11      	ldr	r3, [pc, #68]	; (40111c <pmc_enable_periph_clk+0x50>)
  4010d6:	699a      	ldr	r2, [r3, #24]
  4010d8:	2301      	movs	r3, #1
  4010da:	4083      	lsls	r3, r0
  4010dc:	4393      	bics	r3, r2
  4010de:	d018      	beq.n	401112 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  4010e0:	2301      	movs	r3, #1
  4010e2:	fa03 f000 	lsl.w	r0, r3, r0
  4010e6:	4b0d      	ldr	r3, [pc, #52]	; (40111c <pmc_enable_periph_clk+0x50>)
  4010e8:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4010ea:	2000      	movs	r0, #0
  4010ec:	4770      	bx	lr
		ul_id -= 32;
  4010ee:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4010f0:	4b0a      	ldr	r3, [pc, #40]	; (40111c <pmc_enable_periph_clk+0x50>)
  4010f2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4010f6:	2301      	movs	r3, #1
  4010f8:	4083      	lsls	r3, r0
  4010fa:	4393      	bics	r3, r2
  4010fc:	d00b      	beq.n	401116 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4010fe:	2301      	movs	r3, #1
  401100:	fa03 f000 	lsl.w	r0, r3, r0
  401104:	4b05      	ldr	r3, [pc, #20]	; (40111c <pmc_enable_periph_clk+0x50>)
  401106:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40110a:	2000      	movs	r0, #0
  40110c:	4770      	bx	lr
		return 1;
  40110e:	2001      	movs	r0, #1
  401110:	4770      	bx	lr
	return 0;
  401112:	2000      	movs	r0, #0
  401114:	4770      	bx	lr
  401116:	2000      	movs	r0, #0
}
  401118:	4770      	bx	lr
  40111a:	bf00      	nop
  40111c:	400e0600 	.word	0x400e0600

00401120 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  401120:	4770      	bx	lr
	...

00401124 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  401124:	4a10      	ldr	r2, [pc, #64]	; (401168 <pmc_enable_waitmode+0x44>)
  401126:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  401128:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  40112c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  401130:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  401132:	6a11      	ldr	r1, [r2, #32]
  401134:	4b0d      	ldr	r3, [pc, #52]	; (40116c <pmc_enable_waitmode+0x48>)
  401136:	430b      	orrs	r3, r1
  401138:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40113a:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40113c:	f013 0f08 	tst.w	r3, #8
  401140:	d0fb      	beq.n	40113a <pmc_enable_waitmode+0x16>
  401142:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  401146:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  401148:	3b01      	subs	r3, #1
  40114a:	d1fc      	bne.n	401146 <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  40114c:	4a06      	ldr	r2, [pc, #24]	; (401168 <pmc_enable_waitmode+0x44>)
  40114e:	6a13      	ldr	r3, [r2, #32]
  401150:	f013 0f08 	tst.w	r3, #8
  401154:	d0fb      	beq.n	40114e <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  401156:	4a04      	ldr	r2, [pc, #16]	; (401168 <pmc_enable_waitmode+0x44>)
  401158:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  40115a:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  40115e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  401162:	6713      	str	r3, [r2, #112]	; 0x70
  401164:	4770      	bx	lr
  401166:	bf00      	nop
  401168:	400e0600 	.word	0x400e0600
  40116c:	00370004 	.word	0x00370004

00401170 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  401170:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  401174:	1e43      	subs	r3, r0, #1
  401176:	2b04      	cmp	r3, #4
  401178:	f200 8107 	bhi.w	40138a <pmc_sleep+0x21a>
  40117c:	e8df f013 	tbh	[pc, r3, lsl #1]
  401180:	00050005 	.word	0x00050005
  401184:	00150015 	.word	0x00150015
  401188:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  40118a:	4a81      	ldr	r2, [pc, #516]	; (401390 <pmc_sleep+0x220>)
  40118c:	6913      	ldr	r3, [r2, #16]
  40118e:	f023 0304 	bic.w	r3, r3, #4
  401192:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  401194:	2201      	movs	r2, #1
  401196:	4b7f      	ldr	r3, [pc, #508]	; (401394 <pmc_sleep+0x224>)
  401198:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  40119a:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  40119e:	b662      	cpsie	i
  __ASM volatile ("dsb");
  4011a0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  4011a4:	bf30      	wfi
  4011a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4011aa:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  4011ac:	2803      	cmp	r0, #3
  4011ae:	bf0c      	ite	eq
  4011b0:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  4011b2:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  4011b6:	4b78      	ldr	r3, [pc, #480]	; (401398 <pmc_sleep+0x228>)
  4011b8:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  4011ba:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4011bc:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  4011c0:	2200      	movs	r2, #0
  4011c2:	4b74      	ldr	r3, [pc, #464]	; (401394 <pmc_sleep+0x224>)
  4011c4:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  4011c6:	2201      	movs	r2, #1
  4011c8:	4b74      	ldr	r3, [pc, #464]	; (40139c <pmc_sleep+0x22c>)
  4011ca:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  4011cc:	4b74      	ldr	r3, [pc, #464]	; (4013a0 <pmc_sleep+0x230>)
  4011ce:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  4011d0:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  4011d2:	4a74      	ldr	r2, [pc, #464]	; (4013a4 <pmc_sleep+0x234>)
  4011d4:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  4011d8:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  4011da:	4a73      	ldr	r2, [pc, #460]	; (4013a8 <pmc_sleep+0x238>)
  4011dc:	433a      	orrs	r2, r7
  4011de:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  4011e0:	f005 0903 	and.w	r9, r5, #3
  4011e4:	f1b9 0f01 	cmp.w	r9, #1
  4011e8:	f240 8089 	bls.w	4012fe <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  4011ec:	f025 0103 	bic.w	r1, r5, #3
  4011f0:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  4011f4:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4011f6:	461a      	mov	r2, r3
  4011f8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4011fa:	f013 0f08 	tst.w	r3, #8
  4011fe:	d0fb      	beq.n	4011f8 <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  401200:	f011 0f70 	tst.w	r1, #112	; 0x70
  401204:	d008      	beq.n	401218 <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  401206:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  40120a:	4b65      	ldr	r3, [pc, #404]	; (4013a0 <pmc_sleep+0x230>)
  40120c:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40120e:	461a      	mov	r2, r3
  401210:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401212:	f013 0f08 	tst.w	r3, #8
  401216:	d0fb      	beq.n	401210 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  401218:	4b64      	ldr	r3, [pc, #400]	; (4013ac <pmc_sleep+0x23c>)
  40121a:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  40121c:	4a60      	ldr	r2, [pc, #384]	; (4013a0 <pmc_sleep+0x230>)
  40121e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401220:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  401224:	d0fb      	beq.n	40121e <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  401226:	4a5e      	ldr	r2, [pc, #376]	; (4013a0 <pmc_sleep+0x230>)
  401228:	6a11      	ldr	r1, [r2, #32]
  40122a:	4b61      	ldr	r3, [pc, #388]	; (4013b0 <pmc_sleep+0x240>)
  40122c:	400b      	ands	r3, r1
  40122e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401232:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401234:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401236:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40123a:	d0fb      	beq.n	401234 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  40123c:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  401240:	4a58      	ldr	r2, [pc, #352]	; (4013a4 <pmc_sleep+0x234>)
  401242:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  401244:	2c04      	cmp	r4, #4
  401246:	d05c      	beq.n	401302 <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  401248:	4c52      	ldr	r4, [pc, #328]	; (401394 <pmc_sleep+0x224>)
  40124a:	2301      	movs	r3, #1
  40124c:	7023      	strb	r3, [r4, #0]
  40124e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401252:	b662      	cpsie	i

		pmc_enable_waitmode();
  401254:	4b57      	ldr	r3, [pc, #348]	; (4013b4 <pmc_sleep+0x244>)
  401256:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  401258:	b672      	cpsid	i
  40125a:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  40125e:	2300      	movs	r3, #0
  401260:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  401262:	f017 0f02 	tst.w	r7, #2
  401266:	d055      	beq.n	401314 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401268:	4a4d      	ldr	r2, [pc, #308]	; (4013a0 <pmc_sleep+0x230>)
  40126a:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40126c:	4952      	ldr	r1, [pc, #328]	; (4013b8 <pmc_sleep+0x248>)
  40126e:	4019      	ands	r1, r3
  401270:	4b52      	ldr	r3, [pc, #328]	; (4013bc <pmc_sleep+0x24c>)
  401272:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401274:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401276:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  401278:	4b51      	ldr	r3, [pc, #324]	; (4013c0 <pmc_sleep+0x250>)
  40127a:	400b      	ands	r3, r1
  40127c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401280:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  401282:	4b50      	ldr	r3, [pc, #320]	; (4013c4 <pmc_sleep+0x254>)
  401284:	4033      	ands	r3, r6
  401286:	2b00      	cmp	r3, #0
  401288:	d06e      	beq.n	401368 <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  40128a:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  40128e:	4b44      	ldr	r3, [pc, #272]	; (4013a0 <pmc_sleep+0x230>)
  401290:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  401292:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  401294:	f1b9 0f02 	cmp.w	r9, #2
  401298:	d104      	bne.n	4012a4 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  40129a:	4a41      	ldr	r2, [pc, #260]	; (4013a0 <pmc_sleep+0x230>)
  40129c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40129e:	f013 0f02 	tst.w	r3, #2
  4012a2:	d0fb      	beq.n	40129c <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  4012a4:	4a3e      	ldr	r2, [pc, #248]	; (4013a0 <pmc_sleep+0x230>)
  4012a6:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4012a8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  4012ac:	f005 0070 	and.w	r0, r5, #112	; 0x70
  4012b0:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  4012b2:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4012b4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012b6:	f013 0f08 	tst.w	r3, #8
  4012ba:	d0fb      	beq.n	4012b4 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  4012bc:	4b39      	ldr	r3, [pc, #228]	; (4013a4 <pmc_sleep+0x234>)
  4012be:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  4012c2:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  4012c6:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  4012c8:	461a      	mov	r2, r3
  4012ca:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012cc:	f013 0f08 	tst.w	r3, #8
  4012d0:	d0fb      	beq.n	4012ca <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  4012d2:	4a33      	ldr	r2, [pc, #204]	; (4013a0 <pmc_sleep+0x230>)
  4012d4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4012d6:	420b      	tst	r3, r1
  4012d8:	d0fc      	beq.n	4012d4 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  4012da:	2200      	movs	r2, #0
  4012dc:	4b2f      	ldr	r3, [pc, #188]	; (40139c <pmc_sleep+0x22c>)
  4012de:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  4012e0:	4b39      	ldr	r3, [pc, #228]	; (4013c8 <pmc_sleep+0x258>)
  4012e2:	681b      	ldr	r3, [r3, #0]
  4012e4:	b11b      	cbz	r3, 4012ee <pmc_sleep+0x17e>
			callback_clocks_restored();
  4012e6:	4798      	blx	r3
			callback_clocks_restored = NULL;
  4012e8:	2200      	movs	r2, #0
  4012ea:	4b37      	ldr	r3, [pc, #220]	; (4013c8 <pmc_sleep+0x258>)
  4012ec:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  4012ee:	2201      	movs	r2, #1
  4012f0:	4b28      	ldr	r3, [pc, #160]	; (401394 <pmc_sleep+0x224>)
  4012f2:	701a      	strb	r2, [r3, #0]
  4012f4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  4012f8:	b662      	cpsie	i
  4012fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  4012fe:	4629      	mov	r1, r5
  401300:	e77e      	b.n	401200 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401302:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  401306:	6a11      	ldr	r1, [r2, #32]
  401308:	4b30      	ldr	r3, [pc, #192]	; (4013cc <pmc_sleep+0x25c>)
  40130a:	400b      	ands	r3, r1
  40130c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  401310:	6213      	str	r3, [r2, #32]
  401312:	e799      	b.n	401248 <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  401314:	f017 0f01 	tst.w	r7, #1
  401318:	d0b3      	beq.n	401282 <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  40131a:	4b21      	ldr	r3, [pc, #132]	; (4013a0 <pmc_sleep+0x230>)
  40131c:	6a1b      	ldr	r3, [r3, #32]
  40131e:	f013 0f01 	tst.w	r3, #1
  401322:	d10b      	bne.n	40133c <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401324:	491e      	ldr	r1, [pc, #120]	; (4013a0 <pmc_sleep+0x230>)
  401326:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  401328:	4a29      	ldr	r2, [pc, #164]	; (4013d0 <pmc_sleep+0x260>)
  40132a:	401a      	ands	r2, r3
  40132c:	4b29      	ldr	r3, [pc, #164]	; (4013d4 <pmc_sleep+0x264>)
  40132e:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  401330:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  401332:	460a      	mov	r2, r1
  401334:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401336:	f013 0f01 	tst.w	r3, #1
  40133a:	d0fb      	beq.n	401334 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  40133c:	4b18      	ldr	r3, [pc, #96]	; (4013a0 <pmc_sleep+0x230>)
  40133e:	6a1b      	ldr	r3, [r3, #32]
  401340:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401344:	d108      	bne.n	401358 <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  401346:	4a16      	ldr	r2, [pc, #88]	; (4013a0 <pmc_sleep+0x230>)
  401348:	6a11      	ldr	r1, [r2, #32]
  40134a:	4b23      	ldr	r3, [pc, #140]	; (4013d8 <pmc_sleep+0x268>)
  40134c:	430b      	orrs	r3, r1
  40134e:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  401350:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401352:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  401356:	d0fb      	beq.n	401350 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401358:	4a11      	ldr	r2, [pc, #68]	; (4013a0 <pmc_sleep+0x230>)
  40135a:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  40135c:	4b18      	ldr	r3, [pc, #96]	; (4013c0 <pmc_sleep+0x250>)
  40135e:	400b      	ands	r3, r1
  401360:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401364:	6213      	str	r3, [r2, #32]
  401366:	e78c      	b.n	401282 <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  401368:	2100      	movs	r1, #0
  40136a:	e793      	b.n	401294 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  40136c:	4a08      	ldr	r2, [pc, #32]	; (401390 <pmc_sleep+0x220>)
  40136e:	6913      	ldr	r3, [r2, #16]
  401370:	f043 0304 	orr.w	r3, r3, #4
  401374:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  401376:	4a19      	ldr	r2, [pc, #100]	; (4013dc <pmc_sleep+0x26c>)
  401378:	4b19      	ldr	r3, [pc, #100]	; (4013e0 <pmc_sleep+0x270>)
  40137a:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  40137c:	2201      	movs	r2, #1
  40137e:	4b05      	ldr	r3, [pc, #20]	; (401394 <pmc_sleep+0x224>)
  401380:	701a      	strb	r2, [r3, #0]
  401382:	f3bf 8f5f 	dmb	sy
  401386:	b662      	cpsie	i
  __ASM volatile ("wfi");
  401388:	bf30      	wfi
  40138a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40138e:	bf00      	nop
  401390:	e000ed00 	.word	0xe000ed00
  401394:	20400018 	.word	0x20400018
  401398:	00401121 	.word	0x00401121
  40139c:	20400c64 	.word	0x20400c64
  4013a0:	400e0600 	.word	0x400e0600
  4013a4:	400e0c00 	.word	0x400e0c00
  4013a8:	00370008 	.word	0x00370008
  4013ac:	004010ad 	.word	0x004010ad
  4013b0:	fec8ffff 	.word	0xfec8ffff
  4013b4:	00401125 	.word	0x00401125
  4013b8:	fec8fffc 	.word	0xfec8fffc
  4013bc:	01370002 	.word	0x01370002
  4013c0:	ffc8ff87 	.word	0xffc8ff87
  4013c4:	07ff0000 	.word	0x07ff0000
  4013c8:	20400c68 	.word	0x20400c68
  4013cc:	ffc8fffe 	.word	0xffc8fffe
  4013d0:	ffc8fffc 	.word	0xffc8fffc
  4013d4:	00370001 	.word	0x00370001
  4013d8:	01370000 	.word	0x01370000
  4013dc:	a5000004 	.word	0xa5000004
  4013e0:	400e1810 	.word	0x400e1810

004013e4 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4013e4:	e7fe      	b.n	4013e4 <Dummy_Handler>
	...

004013e8 <Reset_Handler>:
{
  4013e8:	b500      	push	{lr}
  4013ea:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  4013ec:	4b25      	ldr	r3, [pc, #148]	; (401484 <Reset_Handler+0x9c>)
  4013ee:	4a26      	ldr	r2, [pc, #152]	; (401488 <Reset_Handler+0xa0>)
  4013f0:	429a      	cmp	r2, r3
  4013f2:	d010      	beq.n	401416 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  4013f4:	4b25      	ldr	r3, [pc, #148]	; (40148c <Reset_Handler+0xa4>)
  4013f6:	4a23      	ldr	r2, [pc, #140]	; (401484 <Reset_Handler+0x9c>)
  4013f8:	429a      	cmp	r2, r3
  4013fa:	d20c      	bcs.n	401416 <Reset_Handler+0x2e>
  4013fc:	3b01      	subs	r3, #1
  4013fe:	1a9b      	subs	r3, r3, r2
  401400:	f023 0303 	bic.w	r3, r3, #3
  401404:	3304      	adds	r3, #4
  401406:	4413      	add	r3, r2
  401408:	491f      	ldr	r1, [pc, #124]	; (401488 <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  40140a:	f851 0b04 	ldr.w	r0, [r1], #4
  40140e:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  401412:	429a      	cmp	r2, r3
  401414:	d1f9      	bne.n	40140a <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  401416:	4b1e      	ldr	r3, [pc, #120]	; (401490 <Reset_Handler+0xa8>)
  401418:	4a1e      	ldr	r2, [pc, #120]	; (401494 <Reset_Handler+0xac>)
  40141a:	429a      	cmp	r2, r3
  40141c:	d20a      	bcs.n	401434 <Reset_Handler+0x4c>
  40141e:	3b01      	subs	r3, #1
  401420:	1a9b      	subs	r3, r3, r2
  401422:	f023 0303 	bic.w	r3, r3, #3
  401426:	3304      	adds	r3, #4
  401428:	4413      	add	r3, r2
                *pDest++ = 0;
  40142a:	2100      	movs	r1, #0
  40142c:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  401430:	4293      	cmp	r3, r2
  401432:	d1fb      	bne.n	40142c <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  401434:	4a18      	ldr	r2, [pc, #96]	; (401498 <Reset_Handler+0xb0>)
  401436:	4b19      	ldr	r3, [pc, #100]	; (40149c <Reset_Handler+0xb4>)
  401438:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  40143c:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  40143e:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  401442:	fab3 f383 	clz	r3, r3
  401446:	095b      	lsrs	r3, r3, #5
  401448:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  40144a:	b672      	cpsid	i
  __ASM volatile ("dmb");
  40144c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  401450:	2200      	movs	r2, #0
  401452:	4b13      	ldr	r3, [pc, #76]	; (4014a0 <Reset_Handler+0xb8>)
  401454:	701a      	strb	r2, [r3, #0]
	return flags;
  401456:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  401458:	4a12      	ldr	r2, [pc, #72]	; (4014a4 <Reset_Handler+0xbc>)
  40145a:	6813      	ldr	r3, [r2, #0]
  40145c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401460:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401462:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  401466:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40146a:	b129      	cbz	r1, 401478 <Reset_Handler+0x90>
		cpu_irq_enable();
  40146c:	2201      	movs	r2, #1
  40146e:	4b0c      	ldr	r3, [pc, #48]	; (4014a0 <Reset_Handler+0xb8>)
  401470:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401472:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  401476:	b662      	cpsie	i
        __libc_init_array();
  401478:	4b0b      	ldr	r3, [pc, #44]	; (4014a8 <Reset_Handler+0xc0>)
  40147a:	4798      	blx	r3
        main();
  40147c:	4b0b      	ldr	r3, [pc, #44]	; (4014ac <Reset_Handler+0xc4>)
  40147e:	4798      	blx	r3
  401480:	e7fe      	b.n	401480 <Reset_Handler+0x98>
  401482:	bf00      	nop
  401484:	20400000 	.word	0x20400000
  401488:	00407104 	.word	0x00407104
  40148c:	204009d0 	.word	0x204009d0
  401490:	20400cd8 	.word	0x20400cd8
  401494:	204009d0 	.word	0x204009d0
  401498:	e000ed00 	.word	0xe000ed00
  40149c:	00400000 	.word	0x00400000
  4014a0:	20400018 	.word	0x20400018
  4014a4:	e000ed88 	.word	0xe000ed88
  4014a8:	00401aed 	.word	0x00401aed
  4014ac:	00401a3d 	.word	0x00401a3d

004014b0 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  4014b0:	4b3b      	ldr	r3, [pc, #236]	; (4015a0 <SystemCoreClockUpdate+0xf0>)
  4014b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014b4:	f003 0303 	and.w	r3, r3, #3
  4014b8:	2b01      	cmp	r3, #1
  4014ba:	d01d      	beq.n	4014f8 <SystemCoreClockUpdate+0x48>
  4014bc:	b183      	cbz	r3, 4014e0 <SystemCoreClockUpdate+0x30>
  4014be:	2b02      	cmp	r3, #2
  4014c0:	d036      	beq.n	401530 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  4014c2:	4b37      	ldr	r3, [pc, #220]	; (4015a0 <SystemCoreClockUpdate+0xf0>)
  4014c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4014c6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4014ca:	2b70      	cmp	r3, #112	; 0x70
  4014cc:	d05f      	beq.n	40158e <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  4014ce:	4b34      	ldr	r3, [pc, #208]	; (4015a0 <SystemCoreClockUpdate+0xf0>)
  4014d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  4014d2:	4934      	ldr	r1, [pc, #208]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  4014d4:	f3c2 1202 	ubfx	r2, r2, #4, #3
  4014d8:	680b      	ldr	r3, [r1, #0]
  4014da:	40d3      	lsrs	r3, r2
  4014dc:	600b      	str	r3, [r1, #0]
  4014de:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  4014e0:	4b31      	ldr	r3, [pc, #196]	; (4015a8 <SystemCoreClockUpdate+0xf8>)
  4014e2:	695b      	ldr	r3, [r3, #20]
  4014e4:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  4014e8:	bf14      	ite	ne
  4014ea:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  4014ee:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  4014f2:	4b2c      	ldr	r3, [pc, #176]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  4014f4:	601a      	str	r2, [r3, #0]
  4014f6:	e7e4      	b.n	4014c2 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4014f8:	4b29      	ldr	r3, [pc, #164]	; (4015a0 <SystemCoreClockUpdate+0xf0>)
  4014fa:	6a1b      	ldr	r3, [r3, #32]
  4014fc:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401500:	d003      	beq.n	40150a <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  401502:	4a2a      	ldr	r2, [pc, #168]	; (4015ac <SystemCoreClockUpdate+0xfc>)
  401504:	4b27      	ldr	r3, [pc, #156]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  401506:	601a      	str	r2, [r3, #0]
  401508:	e7db      	b.n	4014c2 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40150a:	4a29      	ldr	r2, [pc, #164]	; (4015b0 <SystemCoreClockUpdate+0x100>)
  40150c:	4b25      	ldr	r3, [pc, #148]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  40150e:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401510:	4b23      	ldr	r3, [pc, #140]	; (4015a0 <SystemCoreClockUpdate+0xf0>)
  401512:	6a1b      	ldr	r3, [r3, #32]
  401514:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401518:	2b10      	cmp	r3, #16
  40151a:	d005      	beq.n	401528 <SystemCoreClockUpdate+0x78>
  40151c:	2b20      	cmp	r3, #32
  40151e:	d1d0      	bne.n	4014c2 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  401520:	4a22      	ldr	r2, [pc, #136]	; (4015ac <SystemCoreClockUpdate+0xfc>)
  401522:	4b20      	ldr	r3, [pc, #128]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  401524:	601a      	str	r2, [r3, #0]
          break;
  401526:	e7cc      	b.n	4014c2 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  401528:	4a22      	ldr	r2, [pc, #136]	; (4015b4 <SystemCoreClockUpdate+0x104>)
  40152a:	4b1e      	ldr	r3, [pc, #120]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  40152c:	601a      	str	r2, [r3, #0]
          break;
  40152e:	e7c8      	b.n	4014c2 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  401530:	4b1b      	ldr	r3, [pc, #108]	; (4015a0 <SystemCoreClockUpdate+0xf0>)
  401532:	6a1b      	ldr	r3, [r3, #32]
  401534:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  401538:	d016      	beq.n	401568 <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  40153a:	4a1c      	ldr	r2, [pc, #112]	; (4015ac <SystemCoreClockUpdate+0xfc>)
  40153c:	4b19      	ldr	r3, [pc, #100]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  40153e:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  401540:	4b17      	ldr	r3, [pc, #92]	; (4015a0 <SystemCoreClockUpdate+0xf0>)
  401542:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401544:	f003 0303 	and.w	r3, r3, #3
  401548:	2b02      	cmp	r3, #2
  40154a:	d1ba      	bne.n	4014c2 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  40154c:	4a14      	ldr	r2, [pc, #80]	; (4015a0 <SystemCoreClockUpdate+0xf0>)
  40154e:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401550:	6a92      	ldr	r2, [r2, #40]	; 0x28
  401552:	4814      	ldr	r0, [pc, #80]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  401554:	f3c1 410a 	ubfx	r1, r1, #16, #11
  401558:	6803      	ldr	r3, [r0, #0]
  40155a:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  40155e:	b2d2      	uxtb	r2, r2
  401560:	fbb3 f3f2 	udiv	r3, r3, r2
  401564:	6003      	str	r3, [r0, #0]
  401566:	e7ac      	b.n	4014c2 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  401568:	4a11      	ldr	r2, [pc, #68]	; (4015b0 <SystemCoreClockUpdate+0x100>)
  40156a:	4b0e      	ldr	r3, [pc, #56]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  40156c:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  40156e:	4b0c      	ldr	r3, [pc, #48]	; (4015a0 <SystemCoreClockUpdate+0xf0>)
  401570:	6a1b      	ldr	r3, [r3, #32]
  401572:	f003 0370 	and.w	r3, r3, #112	; 0x70
  401576:	2b10      	cmp	r3, #16
  401578:	d005      	beq.n	401586 <SystemCoreClockUpdate+0xd6>
  40157a:	2b20      	cmp	r3, #32
  40157c:	d1e0      	bne.n	401540 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  40157e:	4a0b      	ldr	r2, [pc, #44]	; (4015ac <SystemCoreClockUpdate+0xfc>)
  401580:	4b08      	ldr	r3, [pc, #32]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  401582:	601a      	str	r2, [r3, #0]
          break;
  401584:	e7dc      	b.n	401540 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  401586:	4a0b      	ldr	r2, [pc, #44]	; (4015b4 <SystemCoreClockUpdate+0x104>)
  401588:	4b06      	ldr	r3, [pc, #24]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  40158a:	601a      	str	r2, [r3, #0]
          break;
  40158c:	e7d8      	b.n	401540 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  40158e:	4a05      	ldr	r2, [pc, #20]	; (4015a4 <SystemCoreClockUpdate+0xf4>)
  401590:	6813      	ldr	r3, [r2, #0]
  401592:	4909      	ldr	r1, [pc, #36]	; (4015b8 <SystemCoreClockUpdate+0x108>)
  401594:	fba1 1303 	umull	r1, r3, r1, r3
  401598:	085b      	lsrs	r3, r3, #1
  40159a:	6013      	str	r3, [r2, #0]
  40159c:	4770      	bx	lr
  40159e:	bf00      	nop
  4015a0:	400e0600 	.word	0x400e0600
  4015a4:	2040001c 	.word	0x2040001c
  4015a8:	400e1810 	.word	0x400e1810
  4015ac:	00b71b00 	.word	0x00b71b00
  4015b0:	003d0900 	.word	0x003d0900
  4015b4:	007a1200 	.word	0x007a1200
  4015b8:	aaaaaaab 	.word	0xaaaaaaab

004015bc <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  4015bc:	4b16      	ldr	r3, [pc, #88]	; (401618 <system_init_flash+0x5c>)
  4015be:	4298      	cmp	r0, r3
  4015c0:	d913      	bls.n	4015ea <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  4015c2:	4b16      	ldr	r3, [pc, #88]	; (40161c <system_init_flash+0x60>)
  4015c4:	4298      	cmp	r0, r3
  4015c6:	d915      	bls.n	4015f4 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  4015c8:	4b15      	ldr	r3, [pc, #84]	; (401620 <system_init_flash+0x64>)
  4015ca:	4298      	cmp	r0, r3
  4015cc:	d916      	bls.n	4015fc <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  4015ce:	4b15      	ldr	r3, [pc, #84]	; (401624 <system_init_flash+0x68>)
  4015d0:	4298      	cmp	r0, r3
  4015d2:	d917      	bls.n	401604 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  4015d4:	4b14      	ldr	r3, [pc, #80]	; (401628 <system_init_flash+0x6c>)
  4015d6:	4298      	cmp	r0, r3
  4015d8:	d918      	bls.n	40160c <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  4015da:	4b14      	ldr	r3, [pc, #80]	; (40162c <system_init_flash+0x70>)
  4015dc:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  4015de:	bf94      	ite	ls
  4015e0:	4a13      	ldrls	r2, [pc, #76]	; (401630 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  4015e2:	4a14      	ldrhi	r2, [pc, #80]	; (401634 <system_init_flash+0x78>)
  4015e4:	4b14      	ldr	r3, [pc, #80]	; (401638 <system_init_flash+0x7c>)
  4015e6:	601a      	str	r2, [r3, #0]
  4015e8:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  4015ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4015ee:	4b12      	ldr	r3, [pc, #72]	; (401638 <system_init_flash+0x7c>)
  4015f0:	601a      	str	r2, [r3, #0]
  4015f2:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  4015f4:	4a11      	ldr	r2, [pc, #68]	; (40163c <system_init_flash+0x80>)
  4015f6:	4b10      	ldr	r3, [pc, #64]	; (401638 <system_init_flash+0x7c>)
  4015f8:	601a      	str	r2, [r3, #0]
  4015fa:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4015fc:	4a10      	ldr	r2, [pc, #64]	; (401640 <system_init_flash+0x84>)
  4015fe:	4b0e      	ldr	r3, [pc, #56]	; (401638 <system_init_flash+0x7c>)
  401600:	601a      	str	r2, [r3, #0]
  401602:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  401604:	4a0f      	ldr	r2, [pc, #60]	; (401644 <system_init_flash+0x88>)
  401606:	4b0c      	ldr	r3, [pc, #48]	; (401638 <system_init_flash+0x7c>)
  401608:	601a      	str	r2, [r3, #0]
  40160a:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  40160c:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  401610:	4b09      	ldr	r3, [pc, #36]	; (401638 <system_init_flash+0x7c>)
  401612:	601a      	str	r2, [r3, #0]
  401614:	4770      	bx	lr
  401616:	bf00      	nop
  401618:	015ef3bf 	.word	0x015ef3bf
  40161c:	02bde77f 	.word	0x02bde77f
  401620:	041cdb3f 	.word	0x041cdb3f
  401624:	057bceff 	.word	0x057bceff
  401628:	06dac2bf 	.word	0x06dac2bf
  40162c:	0839b67f 	.word	0x0839b67f
  401630:	04000500 	.word	0x04000500
  401634:	04000600 	.word	0x04000600
  401638:	400e0c00 	.word	0x400e0c00
  40163c:	04000100 	.word	0x04000100
  401640:	04000200 	.word	0x04000200
  401644:	04000300 	.word	0x04000300

00401648 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  401648:	4b0a      	ldr	r3, [pc, #40]	; (401674 <_sbrk+0x2c>)
  40164a:	681b      	ldr	r3, [r3, #0]
  40164c:	b153      	cbz	r3, 401664 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  40164e:	4b09      	ldr	r3, [pc, #36]	; (401674 <_sbrk+0x2c>)
  401650:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  401652:	181a      	adds	r2, r3, r0
  401654:	4908      	ldr	r1, [pc, #32]	; (401678 <_sbrk+0x30>)
  401656:	4291      	cmp	r1, r2
  401658:	db08      	blt.n	40166c <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  40165a:	4610      	mov	r0, r2
  40165c:	4a05      	ldr	r2, [pc, #20]	; (401674 <_sbrk+0x2c>)
  40165e:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401660:	4618      	mov	r0, r3
  401662:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401664:	4a05      	ldr	r2, [pc, #20]	; (40167c <_sbrk+0x34>)
  401666:	4b03      	ldr	r3, [pc, #12]	; (401674 <_sbrk+0x2c>)
  401668:	601a      	str	r2, [r3, #0]
  40166a:	e7f0      	b.n	40164e <_sbrk+0x6>
		return (caddr_t) -1;	
  40166c:	f04f 30ff 	mov.w	r0, #4294967295
}
  401670:	4770      	bx	lr
  401672:	bf00      	nop
  401674:	20400c6c 	.word	0x20400c6c
  401678:	2045fffc 	.word	0x2045fffc
  40167c:	20402ed8 	.word	0x20402ed8

00401680 <SW_Handler>:
void TC_init(Tc * TC, int ID_TC, int TC_CHANNEL, int freq);
void pin_toggle(Pio *pio, uint32_t mask);

static void SW_Handler(void)
{
	SW_flag = true;
  401680:	2201      	movs	r2, #1
  401682:	4b01      	ldr	r3, [pc, #4]	; (401688 <SW_Handler+0x8>)
  401684:	701a      	strb	r2, [r3, #0]
  401686:	4770      	bx	lr
  401688:	20400c71 	.word	0x20400c71

0040168c <CLK_Handler>:
}

static void CLK_Handler(void)
{
	CLK_flag = true;
  40168c:	2201      	movs	r2, #1
  40168e:	4b01      	ldr	r3, [pc, #4]	; (401694 <CLK_Handler+0x8>)
  401690:	701a      	strb	r2, [r3, #0]
  401692:	4770      	bx	lr
  401694:	20400c70 	.word	0x20400c70

00401698 <pin_toggle>:
}

void pin_toggle(Pio *pio, uint32_t mask){
  401698:	b538      	push	{r3, r4, r5, lr}
  40169a:	4604      	mov	r4, r0
  40169c:	460d      	mov	r5, r1
	if(pio_get_output_data_status(pio, mask))
  40169e:	4b06      	ldr	r3, [pc, #24]	; (4016b8 <pin_toggle+0x20>)
  4016a0:	4798      	blx	r3
  4016a2:	b920      	cbnz	r0, 4016ae <pin_toggle+0x16>
	pio_clear(pio, mask);
	else
	pio_set(pio,mask);
  4016a4:	4629      	mov	r1, r5
  4016a6:	4620      	mov	r0, r4
  4016a8:	4b04      	ldr	r3, [pc, #16]	; (4016bc <pin_toggle+0x24>)
  4016aa:	4798      	blx	r3
  4016ac:	bd38      	pop	{r3, r4, r5, pc}
	pio_clear(pio, mask);
  4016ae:	4629      	mov	r1, r5
  4016b0:	4620      	mov	r0, r4
  4016b2:	4b03      	ldr	r3, [pc, #12]	; (4016c0 <pin_toggle+0x28>)
  4016b4:	4798      	blx	r3
  4016b6:	bd38      	pop	{r3, r4, r5, pc}
  4016b8:	00400e3d 	.word	0x00400e3d
  4016bc:	00400cb5 	.word	0x00400cb5
  4016c0:	00400cb9 	.word	0x00400cb9

004016c4 <update_screen>:
}

void update_screen(int hora, int minuto, int segundo) {
  4016c4:	b570      	push	{r4, r5, r6, lr}
  4016c6:	b092      	sub	sp, #72	; 0x48
  4016c8:	4604      	mov	r4, r0
  4016ca:	460d      	mov	r5, r1
  4016cc:	4616      	mov	r6, r2
	gfx_mono_ssd1306_init();
  4016ce:	4b0a      	ldr	r3, [pc, #40]	; (4016f8 <update_screen+0x34>)
  4016d0:	4798      	blx	r3
	char buff[64];
	sprintf(buff, "%02d:%02d:%02d %ds", hora, minuto, segundo, Time_g);
  4016d2:	4b0a      	ldr	r3, [pc, #40]	; (4016fc <update_screen+0x38>)
  4016d4:	681b      	ldr	r3, [r3, #0]
  4016d6:	9301      	str	r3, [sp, #4]
  4016d8:	9600      	str	r6, [sp, #0]
  4016da:	462b      	mov	r3, r5
  4016dc:	4622      	mov	r2, r4
  4016de:	4908      	ldr	r1, [pc, #32]	; (401700 <update_screen+0x3c>)
  4016e0:	a802      	add	r0, sp, #8
  4016e2:	4c08      	ldr	r4, [pc, #32]	; (401704 <update_screen+0x40>)
  4016e4:	47a0      	blx	r4
	gfx_mono_draw_string(buff, 2,16, &sysfont);
  4016e6:	4b08      	ldr	r3, [pc, #32]	; (401708 <update_screen+0x44>)
  4016e8:	2210      	movs	r2, #16
  4016ea:	2102      	movs	r1, #2
  4016ec:	a802      	add	r0, sp, #8
  4016ee:	4c07      	ldr	r4, [pc, #28]	; (40170c <update_screen+0x48>)
  4016f0:	47a0      	blx	r4
}
  4016f2:	b012      	add	sp, #72	; 0x48
  4016f4:	bd70      	pop	{r4, r5, r6, pc}
  4016f6:	bf00      	nop
  4016f8:	004007e5 	.word	0x004007e5
  4016fc:	20400c74 	.word	0x20400c74
  401700:	00406e3c 	.word	0x00406e3c
  401704:	00401bd9 	.word	0x00401bd9
  401708:	2040000c 	.word	0x2040000c
  40170c:	0040074d 	.word	0x0040074d

00401710 <TC0_Handler>:

void TimerInc(uint *Time_g) {
	Time_g++;
}

void TC0_Handler(void){
  401710:	b500      	push	{lr}
  401712:	b083      	sub	sp, #12
	volatile uint32_t ul_dummy;

	ul_dummy = tc_get_status(TC0, 0);
  401714:	2100      	movs	r1, #0
  401716:	4806      	ldr	r0, [pc, #24]	; (401730 <TC0_Handler+0x20>)
  401718:	4b06      	ldr	r3, [pc, #24]	; (401734 <TC0_Handler+0x24>)
  40171a:	4798      	blx	r3
  40171c:	9001      	str	r0, [sp, #4]

	UNUSED(ul_dummy);
  40171e:	9b01      	ldr	r3, [sp, #4]
	
	pin_toggle(LED_PIO, LED_PIN_MASK);
  401720:	2101      	movs	r1, #1
  401722:	4805      	ldr	r0, [pc, #20]	; (401738 <TC0_Handler+0x28>)
  401724:	4b05      	ldr	r3, [pc, #20]	; (40173c <TC0_Handler+0x2c>)
  401726:	4798      	blx	r3
}
  401728:	b003      	add	sp, #12
  40172a:	f85d fb04 	ldr.w	pc, [sp], #4
  40172e:	bf00      	nop
  401730:	4000c000 	.word	0x4000c000
  401734:	004004f5 	.word	0x004004f5
  401738:	400e0e00 	.word	0x400e0e00
  40173c:	00401699 	.word	0x00401699

00401740 <TC1_Handler>:

void TC1_Handler(void){
  401740:	b500      	push	{lr}
  401742:	b083      	sub	sp, #12
	volatile uint32_t ul_dummy;

	ul_dummy = tc_get_status(TC0, 1);
  401744:	2101      	movs	r1, #1
  401746:	4806      	ldr	r0, [pc, #24]	; (401760 <TC1_Handler+0x20>)
  401748:	4b06      	ldr	r3, [pc, #24]	; (401764 <TC1_Handler+0x24>)
  40174a:	4798      	blx	r3
  40174c:	9001      	str	r0, [sp, #4]

	UNUSED(ul_dummy);
  40174e:	9b01      	ldr	r3, [sp, #4]

	pin_toggle(LED2_PIO, LED2_PIN_MASK);
  401750:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  401754:	4804      	ldr	r0, [pc, #16]	; (401768 <TC1_Handler+0x28>)
  401756:	4b05      	ldr	r3, [pc, #20]	; (40176c <TC1_Handler+0x2c>)
  401758:	4798      	blx	r3
}
  40175a:	b003      	add	sp, #12
  40175c:	f85d fb04 	ldr.w	pc, [sp], #4
  401760:	4000c000 	.word	0x4000c000
  401764:	004004f5 	.word	0x004004f5
  401768:	400e1200 	.word	0x400e1200
  40176c:	00401699 	.word	0x00401699

00401770 <TC_init>:
	rtc_clear_status(RTC, RTC_SCCR_CALCLR);
	rtc_clear_status(RTC, RTC_SCCR_TDERRCLR);
	
}

void TC_init(Tc * TC, int ID_TC, int TC_CHANNEL, int freq){
  401770:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  401774:	b085      	sub	sp, #20
  401776:	4606      	mov	r6, r0
  401778:	460c      	mov	r4, r1
  40177a:	4617      	mov	r7, r2
  40177c:	4698      	mov	r8, r3
	uint32_t ul_tcclks;
	uint32_t ul_sysclk = sysclk_get_cpu_hz();

	uint32_t channel = 1;

	pmc_enable_periph_clk(ID_TC);
  40177e:	4608      	mov	r0, r1
  401780:	4b18      	ldr	r3, [pc, #96]	; (4017e4 <TC_init+0x74>)
  401782:	4798      	blx	r3

	tc_find_mck_divisor(freq, ul_sysclk, &ul_div, &ul_tcclks, ul_sysclk);
  401784:	4d18      	ldr	r5, [pc, #96]	; (4017e8 <TC_init+0x78>)
  401786:	9500      	str	r5, [sp, #0]
  401788:	ab02      	add	r3, sp, #8
  40178a:	aa03      	add	r2, sp, #12
  40178c:	4629      	mov	r1, r5
  40178e:	4640      	mov	r0, r8
  401790:	f8df 906c 	ldr.w	r9, [pc, #108]	; 401800 <TC_init+0x90>
  401794:	47c8      	blx	r9
	tc_init(TC, TC_CHANNEL, ul_tcclks | TC_CMR_CPCTRG);
  401796:	9a02      	ldr	r2, [sp, #8]
  401798:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  40179c:	4639      	mov	r1, r7
  40179e:	4630      	mov	r0, r6
  4017a0:	4b12      	ldr	r3, [pc, #72]	; (4017ec <TC_init+0x7c>)
  4017a2:	4798      	blx	r3
	tc_write_rc(TC, TC_CHANNEL, (ul_sysclk / ul_div) / freq);
  4017a4:	9a03      	ldr	r2, [sp, #12]
  4017a6:	fbb5 f2f2 	udiv	r2, r5, r2
  4017aa:	fbb2 f2f8 	udiv	r2, r2, r8
  4017ae:	4639      	mov	r1, r7
  4017b0:	4630      	mov	r0, r6
  4017b2:	4b0f      	ldr	r3, [pc, #60]	; (4017f0 <TC_init+0x80>)
  4017b4:	4798      	blx	r3
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4017b6:	b263      	sxtb	r3, r4
  4017b8:	095b      	lsrs	r3, r3, #5
  4017ba:	f004 041f 	and.w	r4, r4, #31
  4017be:	2201      	movs	r2, #1
  4017c0:	fa02 f404 	lsl.w	r4, r2, r4
  4017c4:	4a0b      	ldr	r2, [pc, #44]	; (4017f4 <TC_init+0x84>)
  4017c6:	f842 4023 	str.w	r4, [r2, r3, lsl #2]

	NVIC_EnableIRQ((IRQn_Type) ID_TC);
	tc_enable_interrupt(TC, TC_CHANNEL, TC_IER_CPCS);
  4017ca:	2210      	movs	r2, #16
  4017cc:	4639      	mov	r1, r7
  4017ce:	4630      	mov	r0, r6
  4017d0:	4b09      	ldr	r3, [pc, #36]	; (4017f8 <TC_init+0x88>)
  4017d2:	4798      	blx	r3

	tc_start(TC, TC_CHANNEL);
  4017d4:	4639      	mov	r1, r7
  4017d6:	4630      	mov	r0, r6
  4017d8:	4b08      	ldr	r3, [pc, #32]	; (4017fc <TC_init+0x8c>)
  4017da:	4798      	blx	r3
}
  4017dc:	b005      	add	sp, #20
  4017de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  4017e2:	bf00      	nop
  4017e4:	004010cd 	.word	0x004010cd
  4017e8:	11e1a300 	.word	0x11e1a300
  4017ec:	004004bb 	.word	0x004004bb
  4017f0:	004004e5 	.word	0x004004e5
  4017f4:	e000e100 	.word	0xe000e100
  4017f8:	004004ed 	.word	0x004004ed
  4017fc:	004004d5 	.word	0x004004d5
  401800:	004004fd 	.word	0x004004fd

00401804 <RTC_Handler>:
{
  401804:	b530      	push	{r4, r5, lr}
  401806:	b085      	sub	sp, #20
	uint32_t ul_status = rtc_get_status(RTC);
  401808:	4d2b      	ldr	r5, [pc, #172]	; (4018b8 <RTC_Handler+0xb4>)
  40180a:	4628      	mov	r0, r5
  40180c:	4b2b      	ldr	r3, [pc, #172]	; (4018bc <RTC_Handler+0xb8>)
  40180e:	4798      	blx	r3
  401810:	4604      	mov	r4, r0
	rtc_get_time(RTC, &hora, &minuto , &segundo);
  401812:	ab01      	add	r3, sp, #4
  401814:	aa02      	add	r2, sp, #8
  401816:	a903      	add	r1, sp, #12
  401818:	4628      	mov	r0, r5
  40181a:	4d29      	ldr	r5, [pc, #164]	; (4018c0 <RTC_Handler+0xbc>)
  40181c:	47a8      	blx	r5
	if ((ul_status & RTC_SR_ALARM) == RTC_SR_ALARM) {
  40181e:	f014 0f02 	tst.w	r4, #2
  401822:	d123      	bne.n	40186c <RTC_Handler+0x68>
	if ((ul_status & RTC_SR_SEC) == RTC_SR_SEC) {
  401824:	f014 0f04 	tst.w	r4, #4
  401828:	d010      	beq.n	40184c <RTC_Handler+0x48>
		if(SW_flag == true & Time_g == 0) {
  40182a:	4b26      	ldr	r3, [pc, #152]	; (4018c4 <RTC_Handler+0xc0>)
  40182c:	781b      	ldrb	r3, [r3, #0]
  40182e:	b2db      	uxtb	r3, r3
  401830:	4a25      	ldr	r2, [pc, #148]	; (4018c8 <RTC_Handler+0xc4>)
  401832:	6812      	ldr	r2, [r2, #0]
  401834:	2b01      	cmp	r3, #1
  401836:	d100      	bne.n	40183a <RTC_Handler+0x36>
  401838:	b302      	cbz	r2, 40187c <RTC_Handler+0x78>
		if(SW_flag == true) {
  40183a:	4b22      	ldr	r3, [pc, #136]	; (4018c4 <RTC_Handler+0xc0>)
  40183c:	781b      	ldrb	r3, [r3, #0]
  40183e:	b2db      	uxtb	r3, r3
  401840:	2b01      	cmp	r3, #1
  401842:	d020      	beq.n	401886 <RTC_Handler+0x82>
		rtc_clear_status(RTC, RTC_SCCR_SECCLR);
  401844:	2104      	movs	r1, #4
  401846:	481c      	ldr	r0, [pc, #112]	; (4018b8 <RTC_Handler+0xb4>)
  401848:	4b20      	ldr	r3, [pc, #128]	; (4018cc <RTC_Handler+0xc8>)
  40184a:	4798      	blx	r3
	rtc_clear_status(RTC, RTC_SCCR_ACKCLR);
  40184c:	4d1a      	ldr	r5, [pc, #104]	; (4018b8 <RTC_Handler+0xb4>)
  40184e:	2101      	movs	r1, #1
  401850:	4628      	mov	r0, r5
  401852:	4c1e      	ldr	r4, [pc, #120]	; (4018cc <RTC_Handler+0xc8>)
  401854:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TIMCLR);
  401856:	2108      	movs	r1, #8
  401858:	4628      	mov	r0, r5
  40185a:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_CALCLR);
  40185c:	2110      	movs	r1, #16
  40185e:	4628      	mov	r0, r5
  401860:	47a0      	blx	r4
	rtc_clear_status(RTC, RTC_SCCR_TDERRCLR);
  401862:	2120      	movs	r1, #32
  401864:	4628      	mov	r0, r5
  401866:	47a0      	blx	r4
}
  401868:	b005      	add	sp, #20
  40186a:	bd30      	pop	{r4, r5, pc}
		rtc_clear_status(RTC, RTC_SCCR_ALRCLR);
  40186c:	2102      	movs	r1, #2
  40186e:	4812      	ldr	r0, [pc, #72]	; (4018b8 <RTC_Handler+0xb4>)
  401870:	4b16      	ldr	r3, [pc, #88]	; (4018cc <RTC_Handler+0xc8>)
  401872:	4798      	blx	r3
		SW_flag = false;
  401874:	2200      	movs	r2, #0
  401876:	4b13      	ldr	r3, [pc, #76]	; (4018c4 <RTC_Handler+0xc0>)
  401878:	701a      	strb	r2, [r3, #0]
  40187a:	e7d3      	b.n	401824 <RTC_Handler+0x20>
			tc_stop(TC0, 0);
  40187c:	2100      	movs	r1, #0
  40187e:	4814      	ldr	r0, [pc, #80]	; (4018d0 <RTC_Handler+0xcc>)
  401880:	4b14      	ldr	r3, [pc, #80]	; (4018d4 <RTC_Handler+0xd0>)
  401882:	4798      	blx	r3
  401884:	e7d9      	b.n	40183a <RTC_Handler+0x36>
			tc_start(TC0, 1);
  401886:	2101      	movs	r1, #1
  401888:	4811      	ldr	r0, [pc, #68]	; (4018d0 <RTC_Handler+0xcc>)
  40188a:	4b13      	ldr	r3, [pc, #76]	; (4018d8 <RTC_Handler+0xd4>)
  40188c:	4798      	blx	r3
			if (Time_g == 0 ) {
  40188e:	4b0e      	ldr	r3, [pc, #56]	; (4018c8 <RTC_Handler+0xc4>)
  401890:	681b      	ldr	r3, [r3, #0]
  401892:	b113      	cbz	r3, 40189a <RTC_Handler+0x96>
				TimerDec(Time_g);
  401894:	4b0c      	ldr	r3, [pc, #48]	; (4018c8 <RTC_Handler+0xc4>)
  401896:	681b      	ldr	r3, [r3, #0]
  401898:	e7d4      	b.n	401844 <RTC_Handler+0x40>
				TC_init(TC0, ID_TC0, 0, 6);
  40189a:	4c0d      	ldr	r4, [pc, #52]	; (4018d0 <RTC_Handler+0xcc>)
  40189c:	2306      	movs	r3, #6
  40189e:	2200      	movs	r2, #0
  4018a0:	2117      	movs	r1, #23
  4018a2:	4620      	mov	r0, r4
  4018a4:	4d0d      	ldr	r5, [pc, #52]	; (4018dc <RTC_Handler+0xd8>)
  4018a6:	47a8      	blx	r5
				tc_stop(TC0, 1);
  4018a8:	2101      	movs	r1, #1
  4018aa:	4620      	mov	r0, r4
  4018ac:	4b09      	ldr	r3, [pc, #36]	; (4018d4 <RTC_Handler+0xd0>)
  4018ae:	4798      	blx	r3
				terminado_g = true;
  4018b0:	2201      	movs	r2, #1
  4018b2:	4b0b      	ldr	r3, [pc, #44]	; (4018e0 <RTC_Handler+0xdc>)
  4018b4:	601a      	str	r2, [r3, #0]
  4018b6:	e7c5      	b.n	401844 <RTC_Handler+0x40>
  4018b8:	400e1860 	.word	0x400e1860
  4018bc:	00400369 	.word	0x00400369
  4018c0:	004001c7 	.word	0x004001c7
  4018c4:	20400c71 	.word	0x20400c71
  4018c8:	20400c74 	.word	0x20400c74
  4018cc:	0040036d 	.word	0x0040036d
  4018d0:	4000c000 	.word	0x4000c000
  4018d4:	004004dd 	.word	0x004004dd
  4018d8:	004004d5 	.word	0x004004d5
  4018dc:	00401771 	.word	0x00401771
  4018e0:	20400c78 	.word	0x20400c78

004018e4 <init>:

void init(int estado)
{
  4018e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4018e8:	b083      	sub	sp, #12
  4018ea:	4683      	mov	fp, r0
	board_init();
  4018ec:	4b3f      	ldr	r3, [pc, #252]	; (4019ec <init+0x108>)
  4018ee:	4798      	blx	r3
	sysclk_init();
  4018f0:	4b3f      	ldr	r3, [pc, #252]	; (4019f0 <init+0x10c>)
  4018f2:	4798      	blx	r3
	delay_init();
	
	
	WDT->WDT_MR = WDT_MR_WDDIS;
  4018f4:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  4018f8:	4b3e      	ldr	r3, [pc, #248]	; (4019f4 <init+0x110>)
  4018fa:	605a      	str	r2, [r3, #4]
	
	pmc_enable_periph_clk(CLK_PIO_ID);
  4018fc:	200a      	movs	r0, #10
  4018fe:	4f3e      	ldr	r7, [pc, #248]	; (4019f8 <init+0x114>)
  401900:	47b8      	blx	r7
	pio_set_input(CLK_PIO, CLK_PIO_IDX_MASK, PIO_DEBOUNCE);
  401902:	2208      	movs	r2, #8
  401904:	2104      	movs	r1, #4
  401906:	483d      	ldr	r0, [pc, #244]	; (4019fc <init+0x118>)
  401908:	f8df a118 	ldr.w	sl, [pc, #280]	; 401a24 <init+0x140>
  40190c:	47d0      	blx	sl
	
	pio_enable_interrupt(CLK_PIO, CLK_PIO_IDX_MASK);
  40190e:	2104      	movs	r1, #4
  401910:	483a      	ldr	r0, [pc, #232]	; (4019fc <init+0x118>)
  401912:	f8df 9114 	ldr.w	r9, [pc, #276]	; 401a28 <init+0x144>
  401916:	47c8      	blx	r9
	pio_handler_set(CLK_PIO, CLK_PIO_ID, CLK_PIO_IDX_MASK, PIO_IT_FALL_EDGE, CLK_Handler);
  401918:	4b39      	ldr	r3, [pc, #228]	; (401a00 <init+0x11c>)
  40191a:	9300      	str	r3, [sp, #0]
  40191c:	2350      	movs	r3, #80	; 0x50
  40191e:	2204      	movs	r2, #4
  401920:	210a      	movs	r1, #10
  401922:	4836      	ldr	r0, [pc, #216]	; (4019fc <init+0x118>)
  401924:	4c37      	ldr	r4, [pc, #220]	; (401a04 <init+0x120>)
  401926:	47a0      	blx	r4
  401928:	4c37      	ldr	r4, [pc, #220]	; (401a08 <init+0x124>)
  40192a:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40192e:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  401930:	2540      	movs	r5, #64	; 0x40
  401932:	f884 530a 	strb.w	r5, [r4, #778]	; 0x30a
	
	NVIC_EnableIRQ(CLK_PIO_ID);
	NVIC_SetPriority(CLK_PIO_ID, 2);
	
	//LED
	pmc_enable_periph_clk(LED_PIO_ID);
  401936:	200a      	movs	r0, #10
  401938:	47b8      	blx	r7
	pio_set_output(LED_PIO, LED_PIN_MASK, estado, 0, 0 );
  40193a:	2600      	movs	r6, #0
  40193c:	9600      	str	r6, [sp, #0]
  40193e:	4633      	mov	r3, r6
  401940:	465a      	mov	r2, fp
  401942:	2101      	movs	r1, #1
  401944:	482d      	ldr	r0, [pc, #180]	; (4019fc <init+0x118>)
  401946:	f8df 80e4 	ldr.w	r8, [pc, #228]	; 401a2c <init+0x148>
  40194a:	47c0      	blx	r8
	
	pmc_enable_periph_clk(LED2_PIO_ID);
  40194c:	200c      	movs	r0, #12
  40194e:	47b8      	blx	r7
	pio_set_output(LED2_PIO, LED2_PIN_MASK, estado, 0, 0 );
  401950:	9600      	str	r6, [sp, #0]
  401952:	4633      	mov	r3, r6
  401954:	465a      	mov	r2, fp
  401956:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
  40195a:	482c      	ldr	r0, [pc, #176]	; (401a0c <init+0x128>)
  40195c:	47c0      	blx	r8
	
	//RTC
	pmc_enable_periph_clk(ID_RTC);
  40195e:	2002      	movs	r0, #2
  401960:	47b8      	blx	r7
	rtc_set_hour_mode(RTC, 0);
  401962:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 401a30 <init+0x14c>
  401966:	4631      	mov	r1, r6
  401968:	4640      	mov	r0, r8
  40196a:	4b29      	ldr	r3, [pc, #164]	; (401a10 <init+0x12c>)
  40196c:	4798      	blx	r3
	rtc_set_date(RTC, YEAR, MOUNT, DAY, WEEK);
  40196e:	2328      	movs	r3, #40	; 0x28
  401970:	9300      	str	r3, [sp, #0]
  401972:	231e      	movs	r3, #30
  401974:	2209      	movs	r2, #9
  401976:	f240 71e3 	movw	r1, #2019	; 0x7e3
  40197a:	4640      	mov	r0, r8
  40197c:	f8df b0b4 	ldr.w	fp, [pc, #180]	; 401a34 <init+0x150>
  401980:	47d8      	blx	fp
	rtc_set_time(RTC, HOUR, MINUTE, SECOND);
  401982:	232d      	movs	r3, #45	; 0x2d
  401984:	2234      	movs	r2, #52	; 0x34
  401986:	2110      	movs	r1, #16
  401988:	4640      	mov	r0, r8
  40198a:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 401a38 <init+0x154>
  40198e:	47d8      	blx	fp
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
  401990:	2104      	movs	r1, #4
  401992:	f8c4 1080 	str.w	r1, [r4, #128]	; 0x80
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
  401996:	f8c4 1180 	str.w	r1, [r4, #384]	; 0x180
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40199a:	f884 6302 	strb.w	r6, [r4, #770]	; 0x302
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  40199e:	6021      	str	r1, [r4, #0]
	NVIC_DisableIRQ(RTC_IRQn);
	NVIC_ClearPendingIRQ(RTC_IRQn);
	NVIC_SetPriority(RTC_IRQn, 0);
	NVIC_EnableIRQ(RTC_IRQn);

	rtc_enable_interrupt(RTC,  RTC_IER_SECEN);
  4019a0:	4640      	mov	r0, r8
  4019a2:	4b1c      	ldr	r3, [pc, #112]	; (401a14 <init+0x130>)
  4019a4:	4798      	blx	r3
	
	TC_init(TC0, ID_TC1, 1, 1);
  4019a6:	2301      	movs	r3, #1
  4019a8:	461a      	mov	r2, r3
  4019aa:	2118      	movs	r1, #24
  4019ac:	481a      	ldr	r0, [pc, #104]	; (401a18 <init+0x134>)
  4019ae:	4e1b      	ldr	r6, [pc, #108]	; (401a1c <init+0x138>)
  4019b0:	47b0      	blx	r6
	
	pmc_enable_periph_clk(SW_PIO_ID);
  4019b2:	200a      	movs	r0, #10
  4019b4:	47b8      	blx	r7
	pio_set_input(SW_PIO, SW_PIO_IDX_MASK, PIO_PULLUP | PIO_DEBOUNCE);
  4019b6:	2209      	movs	r2, #9
  4019b8:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  4019bc:	480f      	ldr	r0, [pc, #60]	; (4019fc <init+0x118>)
  4019be:	47d0      	blx	sl
	
	pio_enable_interrupt(SW_PIO, SW_PIO_IDX_MASK);
  4019c0:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  4019c4:	480d      	ldr	r0, [pc, #52]	; (4019fc <init+0x118>)
  4019c6:	47c8      	blx	r9
	pio_handler_set(SW_PIO, SW_PIO_ID, SW_PIO_IDX_MASK, PIO_IT_FALL_EDGE, SW_Handler);
  4019c8:	4b15      	ldr	r3, [pc, #84]	; (401a20 <init+0x13c>)
  4019ca:	9300      	str	r3, [sp, #0]
  4019cc:	2350      	movs	r3, #80	; 0x50
  4019ce:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  4019d2:	210a      	movs	r1, #10
  4019d4:	4809      	ldr	r0, [pc, #36]	; (4019fc <init+0x118>)
  4019d6:	4e0b      	ldr	r6, [pc, #44]	; (401a04 <init+0x120>)
  4019d8:	47b0      	blx	r6
  4019da:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4019de:	6023      	str	r3, [r4, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4019e0:	f884 530a 	strb.w	r5, [r4, #778]	; 0x30a
	
	NVIC_EnableIRQ(SW_PIO_ID);
	NVIC_SetPriority(SW_PIO_ID, 2);
}
  4019e4:	b003      	add	sp, #12
  4019e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4019ea:	bf00      	nop
  4019ec:	00400b75 	.word	0x00400b75
  4019f0:	00400b05 	.word	0x00400b05
  4019f4:	400e1850 	.word	0x400e1850
  4019f8:	004010cd 	.word	0x004010cd
  4019fc:	400e0e00 	.word	0x400e0e00
  401a00:	0040168d 	.word	0x0040168d
  401a04:	00400ed9 	.word	0x00400ed9
  401a08:	e000e100 	.word	0xe000e100
  401a0c:	400e1200 	.word	0x400e1200
  401a10:	004001ad 	.word	0x004001ad
  401a14:	004001c3 	.word	0x004001c3
  401a18:	4000c000 	.word	0x4000c000
  401a1c:	00401771 	.word	0x00401771
  401a20:	00401681 	.word	0x00401681
  401a24:	00400d4f 	.word	0x00400d4f
  401a28:	00400e7b 	.word	0x00400e7b
  401a2c:	00400d85 	.word	0x00400d85
  401a30:	400e1860 	.word	0x400e1860
  401a34:	004002b1 	.word	0x004002b1
  401a38:	00400221 	.word	0x00400221

00401a3c <main>:

int main (void)
{
  401a3c:	b500      	push	{lr}
  401a3e:	b085      	sub	sp, #20
	
	init(1);
  401a40:	2001      	movs	r0, #1
  401a42:	4b1f      	ldr	r3, [pc, #124]	; (401ac0 <main+0x84>)
  401a44:	4798      	blx	r3
	tc_stop(TC0, 1);
  401a46:	2101      	movs	r1, #1
  401a48:	481e      	ldr	r0, [pc, #120]	; (401ac4 <main+0x88>)
  401a4a:	4b1f      	ldr	r3, [pc, #124]	; (401ac8 <main+0x8c>)
  401a4c:	4798      	blx	r3
	
	SW_flag = false;
  401a4e:	2300      	movs	r3, #0
  401a50:	4a1e      	ldr	r2, [pc, #120]	; (401acc <main+0x90>)
  401a52:	7013      	strb	r3, [r2, #0]
	CLK_flag = false;
  401a54:	4a1e      	ldr	r2, [pc, #120]	; (401ad0 <main+0x94>)
  401a56:	7013      	strb	r3, [r2, #0]
		unsigned int hora;
		unsigned int minuto;
		unsigned int segundo;
		

		rtc_get_time(RTC, &hora, &minuto , &segundo);
  401a58:	4e1e      	ldr	r6, [pc, #120]	; (401ad4 <main+0x98>)
  401a5a:	4d1f      	ldr	r5, [pc, #124]	; (401ad8 <main+0x9c>)
		update_screen(hora, minuto, segundo);
		if(CLK_flag == true) {
				TimerInc(Time_g);
  401a5c:	4c1f      	ldr	r4, [pc, #124]	; (401adc <main+0xa0>)
  401a5e:	e00f      	b.n	401a80 <main+0x44>
  401a60:	6823      	ldr	r3, [r4, #0]
			CLK_flag = false;
  401a62:	2200      	movs	r2, #0
  401a64:	4b1a      	ldr	r3, [pc, #104]	; (401ad0 <main+0x94>)
  401a66:	701a      	strb	r2, [r3, #0]
  401a68:	e019      	b.n	401a9e <main+0x62>
		}
		if(Time_g > 60) {
			Time_g = 60;
		}
		if(Time_g == -1) {
  401a6a:	6823      	ldr	r3, [r4, #0]
  401a6c:	f1b3 3fff 	cmp.w	r3, #4294967295
  401a70:	d01b      	beq.n	401aaa <main+0x6e>
			Time_g = 0;
			SW_flag = false;
		}
		if(terminado_g == true)
  401a72:	4b1b      	ldr	r3, [pc, #108]	; (401ae0 <main+0xa4>)
  401a74:	681b      	ldr	r3, [r3, #0]
  401a76:	2b01      	cmp	r3, #1
  401a78:	d01c      	beq.n	401ab4 <main+0x78>
			tc_stop(TC0, 0);
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  401a7a:	2002      	movs	r0, #2
  401a7c:	4b19      	ldr	r3, [pc, #100]	; (401ae4 <main+0xa8>)
  401a7e:	4798      	blx	r3
		rtc_get_time(RTC, &hora, &minuto , &segundo);
  401a80:	ab03      	add	r3, sp, #12
  401a82:	aa02      	add	r2, sp, #8
  401a84:	a901      	add	r1, sp, #4
  401a86:	4630      	mov	r0, r6
  401a88:	47a8      	blx	r5
		update_screen(hora, minuto, segundo);
  401a8a:	9a03      	ldr	r2, [sp, #12]
  401a8c:	9902      	ldr	r1, [sp, #8]
  401a8e:	9801      	ldr	r0, [sp, #4]
  401a90:	4b15      	ldr	r3, [pc, #84]	; (401ae8 <main+0xac>)
  401a92:	4798      	blx	r3
		if(CLK_flag == true) {
  401a94:	4b0e      	ldr	r3, [pc, #56]	; (401ad0 <main+0x94>)
  401a96:	781b      	ldrb	r3, [r3, #0]
  401a98:	b2db      	uxtb	r3, r3
  401a9a:	2b01      	cmp	r3, #1
  401a9c:	d0e0      	beq.n	401a60 <main+0x24>
		if(Time_g > 60) {
  401a9e:	6823      	ldr	r3, [r4, #0]
  401aa0:	2b3c      	cmp	r3, #60	; 0x3c
  401aa2:	dde2      	ble.n	401a6a <main+0x2e>
			Time_g = 60;
  401aa4:	233c      	movs	r3, #60	; 0x3c
  401aa6:	6023      	str	r3, [r4, #0]
  401aa8:	e7df      	b.n	401a6a <main+0x2e>
			Time_g = 0;
  401aaa:	2300      	movs	r3, #0
  401aac:	6023      	str	r3, [r4, #0]
			SW_flag = false;
  401aae:	4a07      	ldr	r2, [pc, #28]	; (401acc <main+0x90>)
  401ab0:	7013      	strb	r3, [r2, #0]
  401ab2:	e7de      	b.n	401a72 <main+0x36>
			tc_stop(TC0, 0);
  401ab4:	2100      	movs	r1, #0
  401ab6:	4803      	ldr	r0, [pc, #12]	; (401ac4 <main+0x88>)
  401ab8:	4b03      	ldr	r3, [pc, #12]	; (401ac8 <main+0x8c>)
  401aba:	4798      	blx	r3
  401abc:	e7dd      	b.n	401a7a <main+0x3e>
  401abe:	bf00      	nop
  401ac0:	004018e5 	.word	0x004018e5
  401ac4:	4000c000 	.word	0x4000c000
  401ac8:	004004dd 	.word	0x004004dd
  401acc:	20400c71 	.word	0x20400c71
  401ad0:	20400c70 	.word	0x20400c70
  401ad4:	400e1860 	.word	0x400e1860
  401ad8:	004001c7 	.word	0x004001c7
  401adc:	20400c74 	.word	0x20400c74
  401ae0:	20400c78 	.word	0x20400c78
  401ae4:	00401171 	.word	0x00401171
  401ae8:	004016c5 	.word	0x004016c5

00401aec <__libc_init_array>:
  401aec:	b570      	push	{r4, r5, r6, lr}
  401aee:	4e0f      	ldr	r6, [pc, #60]	; (401b2c <__libc_init_array+0x40>)
  401af0:	4d0f      	ldr	r5, [pc, #60]	; (401b30 <__libc_init_array+0x44>)
  401af2:	1b76      	subs	r6, r6, r5
  401af4:	10b6      	asrs	r6, r6, #2
  401af6:	bf18      	it	ne
  401af8:	2400      	movne	r4, #0
  401afa:	d005      	beq.n	401b08 <__libc_init_array+0x1c>
  401afc:	3401      	adds	r4, #1
  401afe:	f855 3b04 	ldr.w	r3, [r5], #4
  401b02:	4798      	blx	r3
  401b04:	42a6      	cmp	r6, r4
  401b06:	d1f9      	bne.n	401afc <__libc_init_array+0x10>
  401b08:	4e0a      	ldr	r6, [pc, #40]	; (401b34 <__libc_init_array+0x48>)
  401b0a:	4d0b      	ldr	r5, [pc, #44]	; (401b38 <__libc_init_array+0x4c>)
  401b0c:	1b76      	subs	r6, r6, r5
  401b0e:	f005 fae3 	bl	4070d8 <_init>
  401b12:	10b6      	asrs	r6, r6, #2
  401b14:	bf18      	it	ne
  401b16:	2400      	movne	r4, #0
  401b18:	d006      	beq.n	401b28 <__libc_init_array+0x3c>
  401b1a:	3401      	adds	r4, #1
  401b1c:	f855 3b04 	ldr.w	r3, [r5], #4
  401b20:	4798      	blx	r3
  401b22:	42a6      	cmp	r6, r4
  401b24:	d1f9      	bne.n	401b1a <__libc_init_array+0x2e>
  401b26:	bd70      	pop	{r4, r5, r6, pc}
  401b28:	bd70      	pop	{r4, r5, r6, pc}
  401b2a:	bf00      	nop
  401b2c:	004070e4 	.word	0x004070e4
  401b30:	004070e4 	.word	0x004070e4
  401b34:	004070ec 	.word	0x004070ec
  401b38:	004070e4 	.word	0x004070e4

00401b3c <memset>:
  401b3c:	b470      	push	{r4, r5, r6}
  401b3e:	0786      	lsls	r6, r0, #30
  401b40:	d046      	beq.n	401bd0 <memset+0x94>
  401b42:	1e54      	subs	r4, r2, #1
  401b44:	2a00      	cmp	r2, #0
  401b46:	d041      	beq.n	401bcc <memset+0x90>
  401b48:	b2ca      	uxtb	r2, r1
  401b4a:	4603      	mov	r3, r0
  401b4c:	e002      	b.n	401b54 <memset+0x18>
  401b4e:	f114 34ff 	adds.w	r4, r4, #4294967295
  401b52:	d33b      	bcc.n	401bcc <memset+0x90>
  401b54:	f803 2b01 	strb.w	r2, [r3], #1
  401b58:	079d      	lsls	r5, r3, #30
  401b5a:	d1f8      	bne.n	401b4e <memset+0x12>
  401b5c:	2c03      	cmp	r4, #3
  401b5e:	d92e      	bls.n	401bbe <memset+0x82>
  401b60:	b2cd      	uxtb	r5, r1
  401b62:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401b66:	2c0f      	cmp	r4, #15
  401b68:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401b6c:	d919      	bls.n	401ba2 <memset+0x66>
  401b6e:	f103 0210 	add.w	r2, r3, #16
  401b72:	4626      	mov	r6, r4
  401b74:	3e10      	subs	r6, #16
  401b76:	2e0f      	cmp	r6, #15
  401b78:	f842 5c10 	str.w	r5, [r2, #-16]
  401b7c:	f842 5c0c 	str.w	r5, [r2, #-12]
  401b80:	f842 5c08 	str.w	r5, [r2, #-8]
  401b84:	f842 5c04 	str.w	r5, [r2, #-4]
  401b88:	f102 0210 	add.w	r2, r2, #16
  401b8c:	d8f2      	bhi.n	401b74 <memset+0x38>
  401b8e:	f1a4 0210 	sub.w	r2, r4, #16
  401b92:	f022 020f 	bic.w	r2, r2, #15
  401b96:	f004 040f 	and.w	r4, r4, #15
  401b9a:	3210      	adds	r2, #16
  401b9c:	2c03      	cmp	r4, #3
  401b9e:	4413      	add	r3, r2
  401ba0:	d90d      	bls.n	401bbe <memset+0x82>
  401ba2:	461e      	mov	r6, r3
  401ba4:	4622      	mov	r2, r4
  401ba6:	3a04      	subs	r2, #4
  401ba8:	2a03      	cmp	r2, #3
  401baa:	f846 5b04 	str.w	r5, [r6], #4
  401bae:	d8fa      	bhi.n	401ba6 <memset+0x6a>
  401bb0:	1f22      	subs	r2, r4, #4
  401bb2:	f022 0203 	bic.w	r2, r2, #3
  401bb6:	3204      	adds	r2, #4
  401bb8:	4413      	add	r3, r2
  401bba:	f004 0403 	and.w	r4, r4, #3
  401bbe:	b12c      	cbz	r4, 401bcc <memset+0x90>
  401bc0:	b2c9      	uxtb	r1, r1
  401bc2:	441c      	add	r4, r3
  401bc4:	f803 1b01 	strb.w	r1, [r3], #1
  401bc8:	429c      	cmp	r4, r3
  401bca:	d1fb      	bne.n	401bc4 <memset+0x88>
  401bcc:	bc70      	pop	{r4, r5, r6}
  401bce:	4770      	bx	lr
  401bd0:	4614      	mov	r4, r2
  401bd2:	4603      	mov	r3, r0
  401bd4:	e7c2      	b.n	401b5c <memset+0x20>
  401bd6:	bf00      	nop

00401bd8 <sprintf>:
  401bd8:	b40e      	push	{r1, r2, r3}
  401bda:	b5f0      	push	{r4, r5, r6, r7, lr}
  401bdc:	b09c      	sub	sp, #112	; 0x70
  401bde:	ab21      	add	r3, sp, #132	; 0x84
  401be0:	490f      	ldr	r1, [pc, #60]	; (401c20 <sprintf+0x48>)
  401be2:	f853 2b04 	ldr.w	r2, [r3], #4
  401be6:	9301      	str	r3, [sp, #4]
  401be8:	4605      	mov	r5, r0
  401bea:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401bee:	6808      	ldr	r0, [r1, #0]
  401bf0:	9502      	str	r5, [sp, #8]
  401bf2:	f44f 7702 	mov.w	r7, #520	; 0x208
  401bf6:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401bfa:	a902      	add	r1, sp, #8
  401bfc:	9506      	str	r5, [sp, #24]
  401bfe:	f8ad 7014 	strh.w	r7, [sp, #20]
  401c02:	9404      	str	r4, [sp, #16]
  401c04:	9407      	str	r4, [sp, #28]
  401c06:	f8ad 6016 	strh.w	r6, [sp, #22]
  401c0a:	f000 f80b 	bl	401c24 <_svfprintf_r>
  401c0e:	9b02      	ldr	r3, [sp, #8]
  401c10:	2200      	movs	r2, #0
  401c12:	701a      	strb	r2, [r3, #0]
  401c14:	b01c      	add	sp, #112	; 0x70
  401c16:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401c1a:	b003      	add	sp, #12
  401c1c:	4770      	bx	lr
  401c1e:	bf00      	nop
  401c20:	20400020 	.word	0x20400020

00401c24 <_svfprintf_r>:
  401c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401c28:	b0c3      	sub	sp, #268	; 0x10c
  401c2a:	460c      	mov	r4, r1
  401c2c:	910b      	str	r1, [sp, #44]	; 0x2c
  401c2e:	4692      	mov	sl, r2
  401c30:	930f      	str	r3, [sp, #60]	; 0x3c
  401c32:	900c      	str	r0, [sp, #48]	; 0x30
  401c34:	f002 fa0c 	bl	404050 <_localeconv_r>
  401c38:	6803      	ldr	r3, [r0, #0]
  401c3a:	931a      	str	r3, [sp, #104]	; 0x68
  401c3c:	4618      	mov	r0, r3
  401c3e:	f003 f8df 	bl	404e00 <strlen>
  401c42:	89a3      	ldrh	r3, [r4, #12]
  401c44:	9019      	str	r0, [sp, #100]	; 0x64
  401c46:	0619      	lsls	r1, r3, #24
  401c48:	d503      	bpl.n	401c52 <_svfprintf_r+0x2e>
  401c4a:	6923      	ldr	r3, [r4, #16]
  401c4c:	2b00      	cmp	r3, #0
  401c4e:	f001 8003 	beq.w	402c58 <_svfprintf_r+0x1034>
  401c52:	2300      	movs	r3, #0
  401c54:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401c58:	9313      	str	r3, [sp, #76]	; 0x4c
  401c5a:	9315      	str	r3, [sp, #84]	; 0x54
  401c5c:	9314      	str	r3, [sp, #80]	; 0x50
  401c5e:	9327      	str	r3, [sp, #156]	; 0x9c
  401c60:	9326      	str	r3, [sp, #152]	; 0x98
  401c62:	9318      	str	r3, [sp, #96]	; 0x60
  401c64:	931b      	str	r3, [sp, #108]	; 0x6c
  401c66:	9309      	str	r3, [sp, #36]	; 0x24
  401c68:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401c6c:	46c8      	mov	r8, r9
  401c6e:	9316      	str	r3, [sp, #88]	; 0x58
  401c70:	9317      	str	r3, [sp, #92]	; 0x5c
  401c72:	f89a 3000 	ldrb.w	r3, [sl]
  401c76:	4654      	mov	r4, sl
  401c78:	b1e3      	cbz	r3, 401cb4 <_svfprintf_r+0x90>
  401c7a:	2b25      	cmp	r3, #37	; 0x25
  401c7c:	d102      	bne.n	401c84 <_svfprintf_r+0x60>
  401c7e:	e019      	b.n	401cb4 <_svfprintf_r+0x90>
  401c80:	2b25      	cmp	r3, #37	; 0x25
  401c82:	d003      	beq.n	401c8c <_svfprintf_r+0x68>
  401c84:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401c88:	2b00      	cmp	r3, #0
  401c8a:	d1f9      	bne.n	401c80 <_svfprintf_r+0x5c>
  401c8c:	eba4 050a 	sub.w	r5, r4, sl
  401c90:	b185      	cbz	r5, 401cb4 <_svfprintf_r+0x90>
  401c92:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401c94:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401c96:	f8c8 a000 	str.w	sl, [r8]
  401c9a:	3301      	adds	r3, #1
  401c9c:	442a      	add	r2, r5
  401c9e:	2b07      	cmp	r3, #7
  401ca0:	f8c8 5004 	str.w	r5, [r8, #4]
  401ca4:	9227      	str	r2, [sp, #156]	; 0x9c
  401ca6:	9326      	str	r3, [sp, #152]	; 0x98
  401ca8:	dc7f      	bgt.n	401daa <_svfprintf_r+0x186>
  401caa:	f108 0808 	add.w	r8, r8, #8
  401cae:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401cb0:	442b      	add	r3, r5
  401cb2:	9309      	str	r3, [sp, #36]	; 0x24
  401cb4:	7823      	ldrb	r3, [r4, #0]
  401cb6:	2b00      	cmp	r3, #0
  401cb8:	d07f      	beq.n	401dba <_svfprintf_r+0x196>
  401cba:	2300      	movs	r3, #0
  401cbc:	461a      	mov	r2, r3
  401cbe:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401cc2:	4619      	mov	r1, r3
  401cc4:	930d      	str	r3, [sp, #52]	; 0x34
  401cc6:	469b      	mov	fp, r3
  401cc8:	f04f 30ff 	mov.w	r0, #4294967295
  401ccc:	7863      	ldrb	r3, [r4, #1]
  401cce:	900a      	str	r0, [sp, #40]	; 0x28
  401cd0:	f104 0a01 	add.w	sl, r4, #1
  401cd4:	f10a 0a01 	add.w	sl, sl, #1
  401cd8:	f1a3 0020 	sub.w	r0, r3, #32
  401cdc:	2858      	cmp	r0, #88	; 0x58
  401cde:	f200 83c1 	bhi.w	402464 <_svfprintf_r+0x840>
  401ce2:	e8df f010 	tbh	[pc, r0, lsl #1]
  401ce6:	0238      	.short	0x0238
  401ce8:	03bf03bf 	.word	0x03bf03bf
  401cec:	03bf0240 	.word	0x03bf0240
  401cf0:	03bf03bf 	.word	0x03bf03bf
  401cf4:	03bf03bf 	.word	0x03bf03bf
  401cf8:	024503bf 	.word	0x024503bf
  401cfc:	03bf0203 	.word	0x03bf0203
  401d00:	026b005d 	.word	0x026b005d
  401d04:	028603bf 	.word	0x028603bf
  401d08:	039d039d 	.word	0x039d039d
  401d0c:	039d039d 	.word	0x039d039d
  401d10:	039d039d 	.word	0x039d039d
  401d14:	039d039d 	.word	0x039d039d
  401d18:	03bf039d 	.word	0x03bf039d
  401d1c:	03bf03bf 	.word	0x03bf03bf
  401d20:	03bf03bf 	.word	0x03bf03bf
  401d24:	03bf03bf 	.word	0x03bf03bf
  401d28:	03bf03bf 	.word	0x03bf03bf
  401d2c:	033703bf 	.word	0x033703bf
  401d30:	03bf0357 	.word	0x03bf0357
  401d34:	03bf0357 	.word	0x03bf0357
  401d38:	03bf03bf 	.word	0x03bf03bf
  401d3c:	039803bf 	.word	0x039803bf
  401d40:	03bf03bf 	.word	0x03bf03bf
  401d44:	03bf03ad 	.word	0x03bf03ad
  401d48:	03bf03bf 	.word	0x03bf03bf
  401d4c:	03bf03bf 	.word	0x03bf03bf
  401d50:	03bf0259 	.word	0x03bf0259
  401d54:	031e03bf 	.word	0x031e03bf
  401d58:	03bf03bf 	.word	0x03bf03bf
  401d5c:	03bf03bf 	.word	0x03bf03bf
  401d60:	03bf03bf 	.word	0x03bf03bf
  401d64:	03bf03bf 	.word	0x03bf03bf
  401d68:	03bf03bf 	.word	0x03bf03bf
  401d6c:	02db02c6 	.word	0x02db02c6
  401d70:	03570357 	.word	0x03570357
  401d74:	028b0357 	.word	0x028b0357
  401d78:	03bf02db 	.word	0x03bf02db
  401d7c:	029003bf 	.word	0x029003bf
  401d80:	029d03bf 	.word	0x029d03bf
  401d84:	02b401cc 	.word	0x02b401cc
  401d88:	03bf0208 	.word	0x03bf0208
  401d8c:	03bf01e1 	.word	0x03bf01e1
  401d90:	03bf007e 	.word	0x03bf007e
  401d94:	020d03bf 	.word	0x020d03bf
  401d98:	980d      	ldr	r0, [sp, #52]	; 0x34
  401d9a:	930f      	str	r3, [sp, #60]	; 0x3c
  401d9c:	4240      	negs	r0, r0
  401d9e:	900d      	str	r0, [sp, #52]	; 0x34
  401da0:	f04b 0b04 	orr.w	fp, fp, #4
  401da4:	f89a 3000 	ldrb.w	r3, [sl]
  401da8:	e794      	b.n	401cd4 <_svfprintf_r+0xb0>
  401daa:	aa25      	add	r2, sp, #148	; 0x94
  401dac:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401dae:	980c      	ldr	r0, [sp, #48]	; 0x30
  401db0:	f003 f894 	bl	404edc <__ssprint_r>
  401db4:	b940      	cbnz	r0, 401dc8 <_svfprintf_r+0x1a4>
  401db6:	46c8      	mov	r8, r9
  401db8:	e779      	b.n	401cae <_svfprintf_r+0x8a>
  401dba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401dbc:	b123      	cbz	r3, 401dc8 <_svfprintf_r+0x1a4>
  401dbe:	980c      	ldr	r0, [sp, #48]	; 0x30
  401dc0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401dc2:	aa25      	add	r2, sp, #148	; 0x94
  401dc4:	f003 f88a 	bl	404edc <__ssprint_r>
  401dc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401dca:	899b      	ldrh	r3, [r3, #12]
  401dcc:	f013 0f40 	tst.w	r3, #64	; 0x40
  401dd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401dd2:	bf18      	it	ne
  401dd4:	f04f 33ff 	movne.w	r3, #4294967295
  401dd8:	9309      	str	r3, [sp, #36]	; 0x24
  401dda:	9809      	ldr	r0, [sp, #36]	; 0x24
  401ddc:	b043      	add	sp, #268	; 0x10c
  401dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401de2:	f01b 0f20 	tst.w	fp, #32
  401de6:	9311      	str	r3, [sp, #68]	; 0x44
  401de8:	f040 81dd 	bne.w	4021a6 <_svfprintf_r+0x582>
  401dec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401dee:	f01b 0f10 	tst.w	fp, #16
  401df2:	4613      	mov	r3, r2
  401df4:	f040 856e 	bne.w	4028d4 <_svfprintf_r+0xcb0>
  401df8:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401dfc:	f000 856a 	beq.w	4028d4 <_svfprintf_r+0xcb0>
  401e00:	8814      	ldrh	r4, [r2, #0]
  401e02:	3204      	adds	r2, #4
  401e04:	2500      	movs	r5, #0
  401e06:	2301      	movs	r3, #1
  401e08:	920f      	str	r2, [sp, #60]	; 0x3c
  401e0a:	2700      	movs	r7, #0
  401e0c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401e10:	990a      	ldr	r1, [sp, #40]	; 0x28
  401e12:	1c4a      	adds	r2, r1, #1
  401e14:	f000 8265 	beq.w	4022e2 <_svfprintf_r+0x6be>
  401e18:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401e1c:	9207      	str	r2, [sp, #28]
  401e1e:	ea54 0205 	orrs.w	r2, r4, r5
  401e22:	f040 8264 	bne.w	4022ee <_svfprintf_r+0x6ca>
  401e26:	2900      	cmp	r1, #0
  401e28:	f040 843c 	bne.w	4026a4 <_svfprintf_r+0xa80>
  401e2c:	2b00      	cmp	r3, #0
  401e2e:	f040 84d7 	bne.w	4027e0 <_svfprintf_r+0xbbc>
  401e32:	f01b 0301 	ands.w	r3, fp, #1
  401e36:	930e      	str	r3, [sp, #56]	; 0x38
  401e38:	f000 8604 	beq.w	402a44 <_svfprintf_r+0xe20>
  401e3c:	ae42      	add	r6, sp, #264	; 0x108
  401e3e:	2330      	movs	r3, #48	; 0x30
  401e40:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401e44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401e46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401e48:	4293      	cmp	r3, r2
  401e4a:	bfb8      	it	lt
  401e4c:	4613      	movlt	r3, r2
  401e4e:	9308      	str	r3, [sp, #32]
  401e50:	2300      	movs	r3, #0
  401e52:	9312      	str	r3, [sp, #72]	; 0x48
  401e54:	b117      	cbz	r7, 401e5c <_svfprintf_r+0x238>
  401e56:	9b08      	ldr	r3, [sp, #32]
  401e58:	3301      	adds	r3, #1
  401e5a:	9308      	str	r3, [sp, #32]
  401e5c:	9b07      	ldr	r3, [sp, #28]
  401e5e:	f013 0302 	ands.w	r3, r3, #2
  401e62:	9310      	str	r3, [sp, #64]	; 0x40
  401e64:	d002      	beq.n	401e6c <_svfprintf_r+0x248>
  401e66:	9b08      	ldr	r3, [sp, #32]
  401e68:	3302      	adds	r3, #2
  401e6a:	9308      	str	r3, [sp, #32]
  401e6c:	9b07      	ldr	r3, [sp, #28]
  401e6e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401e72:	f040 830e 	bne.w	402492 <_svfprintf_r+0x86e>
  401e76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401e78:	9a08      	ldr	r2, [sp, #32]
  401e7a:	eba3 0b02 	sub.w	fp, r3, r2
  401e7e:	f1bb 0f00 	cmp.w	fp, #0
  401e82:	f340 8306 	ble.w	402492 <_svfprintf_r+0x86e>
  401e86:	f1bb 0f10 	cmp.w	fp, #16
  401e8a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401e8c:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401e8e:	dd29      	ble.n	401ee4 <_svfprintf_r+0x2c0>
  401e90:	4643      	mov	r3, r8
  401e92:	4621      	mov	r1, r4
  401e94:	46a8      	mov	r8, r5
  401e96:	2710      	movs	r7, #16
  401e98:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401e9a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401e9c:	e006      	b.n	401eac <_svfprintf_r+0x288>
  401e9e:	f1ab 0b10 	sub.w	fp, fp, #16
  401ea2:	f1bb 0f10 	cmp.w	fp, #16
  401ea6:	f103 0308 	add.w	r3, r3, #8
  401eaa:	dd18      	ble.n	401ede <_svfprintf_r+0x2ba>
  401eac:	3201      	adds	r2, #1
  401eae:	48b7      	ldr	r0, [pc, #732]	; (40218c <_svfprintf_r+0x568>)
  401eb0:	9226      	str	r2, [sp, #152]	; 0x98
  401eb2:	3110      	adds	r1, #16
  401eb4:	2a07      	cmp	r2, #7
  401eb6:	9127      	str	r1, [sp, #156]	; 0x9c
  401eb8:	e883 0081 	stmia.w	r3, {r0, r7}
  401ebc:	ddef      	ble.n	401e9e <_svfprintf_r+0x27a>
  401ebe:	aa25      	add	r2, sp, #148	; 0x94
  401ec0:	4629      	mov	r1, r5
  401ec2:	4620      	mov	r0, r4
  401ec4:	f003 f80a 	bl	404edc <__ssprint_r>
  401ec8:	2800      	cmp	r0, #0
  401eca:	f47f af7d 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  401ece:	f1ab 0b10 	sub.w	fp, fp, #16
  401ed2:	f1bb 0f10 	cmp.w	fp, #16
  401ed6:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401ed8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401eda:	464b      	mov	r3, r9
  401edc:	dce6      	bgt.n	401eac <_svfprintf_r+0x288>
  401ede:	4645      	mov	r5, r8
  401ee0:	460c      	mov	r4, r1
  401ee2:	4698      	mov	r8, r3
  401ee4:	3201      	adds	r2, #1
  401ee6:	4ba9      	ldr	r3, [pc, #676]	; (40218c <_svfprintf_r+0x568>)
  401ee8:	9226      	str	r2, [sp, #152]	; 0x98
  401eea:	445c      	add	r4, fp
  401eec:	2a07      	cmp	r2, #7
  401eee:	9427      	str	r4, [sp, #156]	; 0x9c
  401ef0:	e888 0808 	stmia.w	r8, {r3, fp}
  401ef4:	f300 8498 	bgt.w	402828 <_svfprintf_r+0xc04>
  401ef8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401efc:	f108 0808 	add.w	r8, r8, #8
  401f00:	b177      	cbz	r7, 401f20 <_svfprintf_r+0x2fc>
  401f02:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f04:	3301      	adds	r3, #1
  401f06:	3401      	adds	r4, #1
  401f08:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  401f0c:	2201      	movs	r2, #1
  401f0e:	2b07      	cmp	r3, #7
  401f10:	9427      	str	r4, [sp, #156]	; 0x9c
  401f12:	9326      	str	r3, [sp, #152]	; 0x98
  401f14:	e888 0006 	stmia.w	r8, {r1, r2}
  401f18:	f300 83db 	bgt.w	4026d2 <_svfprintf_r+0xaae>
  401f1c:	f108 0808 	add.w	r8, r8, #8
  401f20:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401f22:	b16b      	cbz	r3, 401f40 <_svfprintf_r+0x31c>
  401f24:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f26:	3301      	adds	r3, #1
  401f28:	3402      	adds	r4, #2
  401f2a:	a91e      	add	r1, sp, #120	; 0x78
  401f2c:	2202      	movs	r2, #2
  401f2e:	2b07      	cmp	r3, #7
  401f30:	9427      	str	r4, [sp, #156]	; 0x9c
  401f32:	9326      	str	r3, [sp, #152]	; 0x98
  401f34:	e888 0006 	stmia.w	r8, {r1, r2}
  401f38:	f300 83d6 	bgt.w	4026e8 <_svfprintf_r+0xac4>
  401f3c:	f108 0808 	add.w	r8, r8, #8
  401f40:	2d80      	cmp	r5, #128	; 0x80
  401f42:	f000 8315 	beq.w	402570 <_svfprintf_r+0x94c>
  401f46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401f48:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401f4a:	1a9f      	subs	r7, r3, r2
  401f4c:	2f00      	cmp	r7, #0
  401f4e:	dd36      	ble.n	401fbe <_svfprintf_r+0x39a>
  401f50:	2f10      	cmp	r7, #16
  401f52:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f54:	4d8e      	ldr	r5, [pc, #568]	; (402190 <_svfprintf_r+0x56c>)
  401f56:	dd27      	ble.n	401fa8 <_svfprintf_r+0x384>
  401f58:	4642      	mov	r2, r8
  401f5a:	4621      	mov	r1, r4
  401f5c:	46b0      	mov	r8, r6
  401f5e:	f04f 0b10 	mov.w	fp, #16
  401f62:	462e      	mov	r6, r5
  401f64:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401f66:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401f68:	e004      	b.n	401f74 <_svfprintf_r+0x350>
  401f6a:	3f10      	subs	r7, #16
  401f6c:	2f10      	cmp	r7, #16
  401f6e:	f102 0208 	add.w	r2, r2, #8
  401f72:	dd15      	ble.n	401fa0 <_svfprintf_r+0x37c>
  401f74:	3301      	adds	r3, #1
  401f76:	3110      	adds	r1, #16
  401f78:	2b07      	cmp	r3, #7
  401f7a:	9127      	str	r1, [sp, #156]	; 0x9c
  401f7c:	9326      	str	r3, [sp, #152]	; 0x98
  401f7e:	e882 0840 	stmia.w	r2, {r6, fp}
  401f82:	ddf2      	ble.n	401f6a <_svfprintf_r+0x346>
  401f84:	aa25      	add	r2, sp, #148	; 0x94
  401f86:	4629      	mov	r1, r5
  401f88:	4620      	mov	r0, r4
  401f8a:	f002 ffa7 	bl	404edc <__ssprint_r>
  401f8e:	2800      	cmp	r0, #0
  401f90:	f47f af1a 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  401f94:	3f10      	subs	r7, #16
  401f96:	2f10      	cmp	r7, #16
  401f98:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f9c:	464a      	mov	r2, r9
  401f9e:	dce9      	bgt.n	401f74 <_svfprintf_r+0x350>
  401fa0:	4635      	mov	r5, r6
  401fa2:	460c      	mov	r4, r1
  401fa4:	4646      	mov	r6, r8
  401fa6:	4690      	mov	r8, r2
  401fa8:	3301      	adds	r3, #1
  401faa:	443c      	add	r4, r7
  401fac:	2b07      	cmp	r3, #7
  401fae:	9427      	str	r4, [sp, #156]	; 0x9c
  401fb0:	9326      	str	r3, [sp, #152]	; 0x98
  401fb2:	e888 00a0 	stmia.w	r8, {r5, r7}
  401fb6:	f300 8381 	bgt.w	4026bc <_svfprintf_r+0xa98>
  401fba:	f108 0808 	add.w	r8, r8, #8
  401fbe:	9b07      	ldr	r3, [sp, #28]
  401fc0:	05df      	lsls	r7, r3, #23
  401fc2:	f100 8268 	bmi.w	402496 <_svfprintf_r+0x872>
  401fc6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401fc8:	990e      	ldr	r1, [sp, #56]	; 0x38
  401fca:	f8c8 6000 	str.w	r6, [r8]
  401fce:	3301      	adds	r3, #1
  401fd0:	440c      	add	r4, r1
  401fd2:	2b07      	cmp	r3, #7
  401fd4:	9427      	str	r4, [sp, #156]	; 0x9c
  401fd6:	f8c8 1004 	str.w	r1, [r8, #4]
  401fda:	9326      	str	r3, [sp, #152]	; 0x98
  401fdc:	f300 834d 	bgt.w	40267a <_svfprintf_r+0xa56>
  401fe0:	f108 0808 	add.w	r8, r8, #8
  401fe4:	9b07      	ldr	r3, [sp, #28]
  401fe6:	075b      	lsls	r3, r3, #29
  401fe8:	d53a      	bpl.n	402060 <_svfprintf_r+0x43c>
  401fea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401fec:	9a08      	ldr	r2, [sp, #32]
  401fee:	1a9d      	subs	r5, r3, r2
  401ff0:	2d00      	cmp	r5, #0
  401ff2:	dd35      	ble.n	402060 <_svfprintf_r+0x43c>
  401ff4:	2d10      	cmp	r5, #16
  401ff6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401ff8:	dd20      	ble.n	40203c <_svfprintf_r+0x418>
  401ffa:	2610      	movs	r6, #16
  401ffc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  401ffe:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  402002:	e004      	b.n	40200e <_svfprintf_r+0x3ea>
  402004:	3d10      	subs	r5, #16
  402006:	2d10      	cmp	r5, #16
  402008:	f108 0808 	add.w	r8, r8, #8
  40200c:	dd16      	ble.n	40203c <_svfprintf_r+0x418>
  40200e:	3301      	adds	r3, #1
  402010:	4a5e      	ldr	r2, [pc, #376]	; (40218c <_svfprintf_r+0x568>)
  402012:	9326      	str	r3, [sp, #152]	; 0x98
  402014:	3410      	adds	r4, #16
  402016:	2b07      	cmp	r3, #7
  402018:	9427      	str	r4, [sp, #156]	; 0x9c
  40201a:	e888 0044 	stmia.w	r8, {r2, r6}
  40201e:	ddf1      	ble.n	402004 <_svfprintf_r+0x3e0>
  402020:	aa25      	add	r2, sp, #148	; 0x94
  402022:	4659      	mov	r1, fp
  402024:	4638      	mov	r0, r7
  402026:	f002 ff59 	bl	404edc <__ssprint_r>
  40202a:	2800      	cmp	r0, #0
  40202c:	f47f aecc 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402030:	3d10      	subs	r5, #16
  402032:	2d10      	cmp	r5, #16
  402034:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402036:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402038:	46c8      	mov	r8, r9
  40203a:	dce8      	bgt.n	40200e <_svfprintf_r+0x3ea>
  40203c:	3301      	adds	r3, #1
  40203e:	4a53      	ldr	r2, [pc, #332]	; (40218c <_svfprintf_r+0x568>)
  402040:	9326      	str	r3, [sp, #152]	; 0x98
  402042:	442c      	add	r4, r5
  402044:	2b07      	cmp	r3, #7
  402046:	9427      	str	r4, [sp, #156]	; 0x9c
  402048:	e888 0024 	stmia.w	r8, {r2, r5}
  40204c:	dd08      	ble.n	402060 <_svfprintf_r+0x43c>
  40204e:	aa25      	add	r2, sp, #148	; 0x94
  402050:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402052:	980c      	ldr	r0, [sp, #48]	; 0x30
  402054:	f002 ff42 	bl	404edc <__ssprint_r>
  402058:	2800      	cmp	r0, #0
  40205a:	f47f aeb5 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  40205e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402060:	9b09      	ldr	r3, [sp, #36]	; 0x24
  402062:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  402064:	9908      	ldr	r1, [sp, #32]
  402066:	428a      	cmp	r2, r1
  402068:	bfac      	ite	ge
  40206a:	189b      	addge	r3, r3, r2
  40206c:	185b      	addlt	r3, r3, r1
  40206e:	9309      	str	r3, [sp, #36]	; 0x24
  402070:	2c00      	cmp	r4, #0
  402072:	f040 830d 	bne.w	402690 <_svfprintf_r+0xa6c>
  402076:	2300      	movs	r3, #0
  402078:	9326      	str	r3, [sp, #152]	; 0x98
  40207a:	46c8      	mov	r8, r9
  40207c:	e5f9      	b.n	401c72 <_svfprintf_r+0x4e>
  40207e:	9311      	str	r3, [sp, #68]	; 0x44
  402080:	f01b 0320 	ands.w	r3, fp, #32
  402084:	f040 81e3 	bne.w	40244e <_svfprintf_r+0x82a>
  402088:	f01b 0210 	ands.w	r2, fp, #16
  40208c:	f040 842e 	bne.w	4028ec <_svfprintf_r+0xcc8>
  402090:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  402094:	f000 842a 	beq.w	4028ec <_svfprintf_r+0xcc8>
  402098:	990f      	ldr	r1, [sp, #60]	; 0x3c
  40209a:	4613      	mov	r3, r2
  40209c:	460a      	mov	r2, r1
  40209e:	3204      	adds	r2, #4
  4020a0:	880c      	ldrh	r4, [r1, #0]
  4020a2:	920f      	str	r2, [sp, #60]	; 0x3c
  4020a4:	2500      	movs	r5, #0
  4020a6:	e6b0      	b.n	401e0a <_svfprintf_r+0x1e6>
  4020a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4020aa:	9311      	str	r3, [sp, #68]	; 0x44
  4020ac:	6816      	ldr	r6, [r2, #0]
  4020ae:	2400      	movs	r4, #0
  4020b0:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  4020b4:	1d15      	adds	r5, r2, #4
  4020b6:	2e00      	cmp	r6, #0
  4020b8:	f000 86a7 	beq.w	402e0a <_svfprintf_r+0x11e6>
  4020bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4020be:	1c53      	adds	r3, r2, #1
  4020c0:	f000 8609 	beq.w	402cd6 <_svfprintf_r+0x10b2>
  4020c4:	4621      	mov	r1, r4
  4020c6:	4630      	mov	r0, r6
  4020c8:	f002 fa8a 	bl	4045e0 <memchr>
  4020cc:	2800      	cmp	r0, #0
  4020ce:	f000 86e1 	beq.w	402e94 <_svfprintf_r+0x1270>
  4020d2:	1b83      	subs	r3, r0, r6
  4020d4:	930e      	str	r3, [sp, #56]	; 0x38
  4020d6:	940a      	str	r4, [sp, #40]	; 0x28
  4020d8:	950f      	str	r5, [sp, #60]	; 0x3c
  4020da:	f8cd b01c 	str.w	fp, [sp, #28]
  4020de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4020e2:	9308      	str	r3, [sp, #32]
  4020e4:	9412      	str	r4, [sp, #72]	; 0x48
  4020e6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4020ea:	e6b3      	b.n	401e54 <_svfprintf_r+0x230>
  4020ec:	f89a 3000 	ldrb.w	r3, [sl]
  4020f0:	2201      	movs	r2, #1
  4020f2:	212b      	movs	r1, #43	; 0x2b
  4020f4:	e5ee      	b.n	401cd4 <_svfprintf_r+0xb0>
  4020f6:	f04b 0b20 	orr.w	fp, fp, #32
  4020fa:	f89a 3000 	ldrb.w	r3, [sl]
  4020fe:	e5e9      	b.n	401cd4 <_svfprintf_r+0xb0>
  402100:	9311      	str	r3, [sp, #68]	; 0x44
  402102:	2a00      	cmp	r2, #0
  402104:	f040 8795 	bne.w	403032 <_svfprintf_r+0x140e>
  402108:	4b22      	ldr	r3, [pc, #136]	; (402194 <_svfprintf_r+0x570>)
  40210a:	9318      	str	r3, [sp, #96]	; 0x60
  40210c:	f01b 0f20 	tst.w	fp, #32
  402110:	f040 8111 	bne.w	402336 <_svfprintf_r+0x712>
  402114:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402116:	f01b 0f10 	tst.w	fp, #16
  40211a:	4613      	mov	r3, r2
  40211c:	f040 83e1 	bne.w	4028e2 <_svfprintf_r+0xcbe>
  402120:	f01b 0f40 	tst.w	fp, #64	; 0x40
  402124:	f000 83dd 	beq.w	4028e2 <_svfprintf_r+0xcbe>
  402128:	3304      	adds	r3, #4
  40212a:	8814      	ldrh	r4, [r2, #0]
  40212c:	930f      	str	r3, [sp, #60]	; 0x3c
  40212e:	2500      	movs	r5, #0
  402130:	f01b 0f01 	tst.w	fp, #1
  402134:	f000 810c 	beq.w	402350 <_svfprintf_r+0x72c>
  402138:	ea54 0305 	orrs.w	r3, r4, r5
  40213c:	f000 8108 	beq.w	402350 <_svfprintf_r+0x72c>
  402140:	2330      	movs	r3, #48	; 0x30
  402142:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  402146:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40214a:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  40214e:	f04b 0b02 	orr.w	fp, fp, #2
  402152:	2302      	movs	r3, #2
  402154:	e659      	b.n	401e0a <_svfprintf_r+0x1e6>
  402156:	f89a 3000 	ldrb.w	r3, [sl]
  40215a:	2900      	cmp	r1, #0
  40215c:	f47f adba 	bne.w	401cd4 <_svfprintf_r+0xb0>
  402160:	2201      	movs	r2, #1
  402162:	2120      	movs	r1, #32
  402164:	e5b6      	b.n	401cd4 <_svfprintf_r+0xb0>
  402166:	f04b 0b01 	orr.w	fp, fp, #1
  40216a:	f89a 3000 	ldrb.w	r3, [sl]
  40216e:	e5b1      	b.n	401cd4 <_svfprintf_r+0xb0>
  402170:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402172:	6823      	ldr	r3, [r4, #0]
  402174:	930d      	str	r3, [sp, #52]	; 0x34
  402176:	4618      	mov	r0, r3
  402178:	2800      	cmp	r0, #0
  40217a:	4623      	mov	r3, r4
  40217c:	f103 0304 	add.w	r3, r3, #4
  402180:	f6ff ae0a 	blt.w	401d98 <_svfprintf_r+0x174>
  402184:	930f      	str	r3, [sp, #60]	; 0x3c
  402186:	f89a 3000 	ldrb.w	r3, [sl]
  40218a:	e5a3      	b.n	401cd4 <_svfprintf_r+0xb0>
  40218c:	00406e98 	.word	0x00406e98
  402190:	00406ea8 	.word	0x00406ea8
  402194:	00406e78 	.word	0x00406e78
  402198:	f04b 0b10 	orr.w	fp, fp, #16
  40219c:	f01b 0f20 	tst.w	fp, #32
  4021a0:	9311      	str	r3, [sp, #68]	; 0x44
  4021a2:	f43f ae23 	beq.w	401dec <_svfprintf_r+0x1c8>
  4021a6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  4021a8:	3507      	adds	r5, #7
  4021aa:	f025 0307 	bic.w	r3, r5, #7
  4021ae:	f103 0208 	add.w	r2, r3, #8
  4021b2:	e9d3 4500 	ldrd	r4, r5, [r3]
  4021b6:	920f      	str	r2, [sp, #60]	; 0x3c
  4021b8:	2301      	movs	r3, #1
  4021ba:	e626      	b.n	401e0a <_svfprintf_r+0x1e6>
  4021bc:	f89a 3000 	ldrb.w	r3, [sl]
  4021c0:	2b2a      	cmp	r3, #42	; 0x2a
  4021c2:	f10a 0401 	add.w	r4, sl, #1
  4021c6:	f000 8727 	beq.w	403018 <_svfprintf_r+0x13f4>
  4021ca:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4021ce:	2809      	cmp	r0, #9
  4021d0:	46a2      	mov	sl, r4
  4021d2:	f200 86ad 	bhi.w	402f30 <_svfprintf_r+0x130c>
  4021d6:	2300      	movs	r3, #0
  4021d8:	461c      	mov	r4, r3
  4021da:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4021de:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4021e2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4021e6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4021ea:	2809      	cmp	r0, #9
  4021ec:	d9f5      	bls.n	4021da <_svfprintf_r+0x5b6>
  4021ee:	940a      	str	r4, [sp, #40]	; 0x28
  4021f0:	e572      	b.n	401cd8 <_svfprintf_r+0xb4>
  4021f2:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4021f6:	f89a 3000 	ldrb.w	r3, [sl]
  4021fa:	e56b      	b.n	401cd4 <_svfprintf_r+0xb0>
  4021fc:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  402200:	f89a 3000 	ldrb.w	r3, [sl]
  402204:	e566      	b.n	401cd4 <_svfprintf_r+0xb0>
  402206:	f89a 3000 	ldrb.w	r3, [sl]
  40220a:	2b6c      	cmp	r3, #108	; 0x6c
  40220c:	bf03      	ittte	eq
  40220e:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  402212:	f04b 0b20 	orreq.w	fp, fp, #32
  402216:	f10a 0a01 	addeq.w	sl, sl, #1
  40221a:	f04b 0b10 	orrne.w	fp, fp, #16
  40221e:	e559      	b.n	401cd4 <_svfprintf_r+0xb0>
  402220:	2a00      	cmp	r2, #0
  402222:	f040 8711 	bne.w	403048 <_svfprintf_r+0x1424>
  402226:	f01b 0f20 	tst.w	fp, #32
  40222a:	f040 84f9 	bne.w	402c20 <_svfprintf_r+0xffc>
  40222e:	f01b 0f10 	tst.w	fp, #16
  402232:	f040 84ac 	bne.w	402b8e <_svfprintf_r+0xf6a>
  402236:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40223a:	f000 84a8 	beq.w	402b8e <_svfprintf_r+0xf6a>
  40223e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402240:	6813      	ldr	r3, [r2, #0]
  402242:	3204      	adds	r2, #4
  402244:	920f      	str	r2, [sp, #60]	; 0x3c
  402246:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40224a:	801a      	strh	r2, [r3, #0]
  40224c:	e511      	b.n	401c72 <_svfprintf_r+0x4e>
  40224e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402250:	4bb3      	ldr	r3, [pc, #716]	; (402520 <_svfprintf_r+0x8fc>)
  402252:	680c      	ldr	r4, [r1, #0]
  402254:	9318      	str	r3, [sp, #96]	; 0x60
  402256:	2230      	movs	r2, #48	; 0x30
  402258:	2378      	movs	r3, #120	; 0x78
  40225a:	3104      	adds	r1, #4
  40225c:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402260:	9311      	str	r3, [sp, #68]	; 0x44
  402262:	f04b 0b02 	orr.w	fp, fp, #2
  402266:	910f      	str	r1, [sp, #60]	; 0x3c
  402268:	2500      	movs	r5, #0
  40226a:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  40226e:	2302      	movs	r3, #2
  402270:	e5cb      	b.n	401e0a <_svfprintf_r+0x1e6>
  402272:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402274:	9311      	str	r3, [sp, #68]	; 0x44
  402276:	680a      	ldr	r2, [r1, #0]
  402278:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  40227c:	2300      	movs	r3, #0
  40227e:	460a      	mov	r2, r1
  402280:	461f      	mov	r7, r3
  402282:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402286:	3204      	adds	r2, #4
  402288:	2301      	movs	r3, #1
  40228a:	9308      	str	r3, [sp, #32]
  40228c:	f8cd b01c 	str.w	fp, [sp, #28]
  402290:	970a      	str	r7, [sp, #40]	; 0x28
  402292:	9712      	str	r7, [sp, #72]	; 0x48
  402294:	920f      	str	r2, [sp, #60]	; 0x3c
  402296:	930e      	str	r3, [sp, #56]	; 0x38
  402298:	ae28      	add	r6, sp, #160	; 0xa0
  40229a:	e5df      	b.n	401e5c <_svfprintf_r+0x238>
  40229c:	9311      	str	r3, [sp, #68]	; 0x44
  40229e:	2a00      	cmp	r2, #0
  4022a0:	f040 86ea 	bne.w	403078 <_svfprintf_r+0x1454>
  4022a4:	f01b 0f20 	tst.w	fp, #32
  4022a8:	d15d      	bne.n	402366 <_svfprintf_r+0x742>
  4022aa:	f01b 0f10 	tst.w	fp, #16
  4022ae:	f040 8308 	bne.w	4028c2 <_svfprintf_r+0xc9e>
  4022b2:	f01b 0f40 	tst.w	fp, #64	; 0x40
  4022b6:	f000 8304 	beq.w	4028c2 <_svfprintf_r+0xc9e>
  4022ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4022bc:	f9b1 4000 	ldrsh.w	r4, [r1]
  4022c0:	3104      	adds	r1, #4
  4022c2:	17e5      	asrs	r5, r4, #31
  4022c4:	4622      	mov	r2, r4
  4022c6:	462b      	mov	r3, r5
  4022c8:	910f      	str	r1, [sp, #60]	; 0x3c
  4022ca:	2a00      	cmp	r2, #0
  4022cc:	f173 0300 	sbcs.w	r3, r3, #0
  4022d0:	db58      	blt.n	402384 <_svfprintf_r+0x760>
  4022d2:	990a      	ldr	r1, [sp, #40]	; 0x28
  4022d4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4022d8:	1c4a      	adds	r2, r1, #1
  4022da:	f04f 0301 	mov.w	r3, #1
  4022de:	f47f ad9b 	bne.w	401e18 <_svfprintf_r+0x1f4>
  4022e2:	ea54 0205 	orrs.w	r2, r4, r5
  4022e6:	f000 81df 	beq.w	4026a8 <_svfprintf_r+0xa84>
  4022ea:	f8cd b01c 	str.w	fp, [sp, #28]
  4022ee:	2b01      	cmp	r3, #1
  4022f0:	f000 827b 	beq.w	4027ea <_svfprintf_r+0xbc6>
  4022f4:	2b02      	cmp	r3, #2
  4022f6:	f040 8206 	bne.w	402706 <_svfprintf_r+0xae2>
  4022fa:	9818      	ldr	r0, [sp, #96]	; 0x60
  4022fc:	464e      	mov	r6, r9
  4022fe:	0923      	lsrs	r3, r4, #4
  402300:	f004 010f 	and.w	r1, r4, #15
  402304:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  402308:	092a      	lsrs	r2, r5, #4
  40230a:	461c      	mov	r4, r3
  40230c:	4615      	mov	r5, r2
  40230e:	5c43      	ldrb	r3, [r0, r1]
  402310:	f806 3d01 	strb.w	r3, [r6, #-1]!
  402314:	ea54 0305 	orrs.w	r3, r4, r5
  402318:	d1f1      	bne.n	4022fe <_svfprintf_r+0x6da>
  40231a:	eba9 0306 	sub.w	r3, r9, r6
  40231e:	930e      	str	r3, [sp, #56]	; 0x38
  402320:	e590      	b.n	401e44 <_svfprintf_r+0x220>
  402322:	9311      	str	r3, [sp, #68]	; 0x44
  402324:	2a00      	cmp	r2, #0
  402326:	f040 86a3 	bne.w	403070 <_svfprintf_r+0x144c>
  40232a:	4b7e      	ldr	r3, [pc, #504]	; (402524 <_svfprintf_r+0x900>)
  40232c:	9318      	str	r3, [sp, #96]	; 0x60
  40232e:	f01b 0f20 	tst.w	fp, #32
  402332:	f43f aeef 	beq.w	402114 <_svfprintf_r+0x4f0>
  402336:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402338:	3507      	adds	r5, #7
  40233a:	f025 0307 	bic.w	r3, r5, #7
  40233e:	f103 0208 	add.w	r2, r3, #8
  402342:	f01b 0f01 	tst.w	fp, #1
  402346:	920f      	str	r2, [sp, #60]	; 0x3c
  402348:	e9d3 4500 	ldrd	r4, r5, [r3]
  40234c:	f47f aef4 	bne.w	402138 <_svfprintf_r+0x514>
  402350:	2302      	movs	r3, #2
  402352:	e55a      	b.n	401e0a <_svfprintf_r+0x1e6>
  402354:	9311      	str	r3, [sp, #68]	; 0x44
  402356:	2a00      	cmp	r2, #0
  402358:	f040 8686 	bne.w	403068 <_svfprintf_r+0x1444>
  40235c:	f04b 0b10 	orr.w	fp, fp, #16
  402360:	f01b 0f20 	tst.w	fp, #32
  402364:	d0a1      	beq.n	4022aa <_svfprintf_r+0x686>
  402366:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402368:	3507      	adds	r5, #7
  40236a:	f025 0507 	bic.w	r5, r5, #7
  40236e:	e9d5 2300 	ldrd	r2, r3, [r5]
  402372:	2a00      	cmp	r2, #0
  402374:	f105 0108 	add.w	r1, r5, #8
  402378:	461d      	mov	r5, r3
  40237a:	f173 0300 	sbcs.w	r3, r3, #0
  40237e:	910f      	str	r1, [sp, #60]	; 0x3c
  402380:	4614      	mov	r4, r2
  402382:	daa6      	bge.n	4022d2 <_svfprintf_r+0x6ae>
  402384:	272d      	movs	r7, #45	; 0x2d
  402386:	4264      	negs	r4, r4
  402388:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  40238c:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402390:	2301      	movs	r3, #1
  402392:	e53d      	b.n	401e10 <_svfprintf_r+0x1ec>
  402394:	9311      	str	r3, [sp, #68]	; 0x44
  402396:	2a00      	cmp	r2, #0
  402398:	f040 8662 	bne.w	403060 <_svfprintf_r+0x143c>
  40239c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40239e:	3507      	adds	r5, #7
  4023a0:	f025 0307 	bic.w	r3, r5, #7
  4023a4:	f103 0208 	add.w	r2, r3, #8
  4023a8:	920f      	str	r2, [sp, #60]	; 0x3c
  4023aa:	681a      	ldr	r2, [r3, #0]
  4023ac:	9215      	str	r2, [sp, #84]	; 0x54
  4023ae:	685b      	ldr	r3, [r3, #4]
  4023b0:	9314      	str	r3, [sp, #80]	; 0x50
  4023b2:	9b14      	ldr	r3, [sp, #80]	; 0x50
  4023b4:	9d15      	ldr	r5, [sp, #84]	; 0x54
  4023b6:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  4023ba:	4628      	mov	r0, r5
  4023bc:	4621      	mov	r1, r4
  4023be:	f04f 32ff 	mov.w	r2, #4294967295
  4023c2:	4b59      	ldr	r3, [pc, #356]	; (402528 <_svfprintf_r+0x904>)
  4023c4:	f003 fe50 	bl	406068 <__aeabi_dcmpun>
  4023c8:	2800      	cmp	r0, #0
  4023ca:	f040 834a 	bne.w	402a62 <_svfprintf_r+0xe3e>
  4023ce:	4628      	mov	r0, r5
  4023d0:	4621      	mov	r1, r4
  4023d2:	f04f 32ff 	mov.w	r2, #4294967295
  4023d6:	4b54      	ldr	r3, [pc, #336]	; (402528 <_svfprintf_r+0x904>)
  4023d8:	f003 fe28 	bl	40602c <__aeabi_dcmple>
  4023dc:	2800      	cmp	r0, #0
  4023de:	f040 8340 	bne.w	402a62 <_svfprintf_r+0xe3e>
  4023e2:	a815      	add	r0, sp, #84	; 0x54
  4023e4:	c80d      	ldmia	r0, {r0, r2, r3}
  4023e6:	9914      	ldr	r1, [sp, #80]	; 0x50
  4023e8:	f003 fe16 	bl	406018 <__aeabi_dcmplt>
  4023ec:	2800      	cmp	r0, #0
  4023ee:	f040 8530 	bne.w	402e52 <_svfprintf_r+0x122e>
  4023f2:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4023f6:	4e4d      	ldr	r6, [pc, #308]	; (40252c <_svfprintf_r+0x908>)
  4023f8:	4b4d      	ldr	r3, [pc, #308]	; (402530 <_svfprintf_r+0x90c>)
  4023fa:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  4023fe:	9007      	str	r0, [sp, #28]
  402400:	9811      	ldr	r0, [sp, #68]	; 0x44
  402402:	2203      	movs	r2, #3
  402404:	2100      	movs	r1, #0
  402406:	9208      	str	r2, [sp, #32]
  402408:	910a      	str	r1, [sp, #40]	; 0x28
  40240a:	2847      	cmp	r0, #71	; 0x47
  40240c:	bfd8      	it	le
  40240e:	461e      	movle	r6, r3
  402410:	920e      	str	r2, [sp, #56]	; 0x38
  402412:	9112      	str	r1, [sp, #72]	; 0x48
  402414:	e51e      	b.n	401e54 <_svfprintf_r+0x230>
  402416:	f04b 0b08 	orr.w	fp, fp, #8
  40241a:	f89a 3000 	ldrb.w	r3, [sl]
  40241e:	e459      	b.n	401cd4 <_svfprintf_r+0xb0>
  402420:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402424:	2300      	movs	r3, #0
  402426:	461c      	mov	r4, r3
  402428:	f81a 3b01 	ldrb.w	r3, [sl], #1
  40242c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402430:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402434:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  402438:	2809      	cmp	r0, #9
  40243a:	d9f5      	bls.n	402428 <_svfprintf_r+0x804>
  40243c:	940d      	str	r4, [sp, #52]	; 0x34
  40243e:	e44b      	b.n	401cd8 <_svfprintf_r+0xb4>
  402440:	f04b 0b10 	orr.w	fp, fp, #16
  402444:	9311      	str	r3, [sp, #68]	; 0x44
  402446:	f01b 0320 	ands.w	r3, fp, #32
  40244a:	f43f ae1d 	beq.w	402088 <_svfprintf_r+0x464>
  40244e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402450:	3507      	adds	r5, #7
  402452:	f025 0307 	bic.w	r3, r5, #7
  402456:	f103 0208 	add.w	r2, r3, #8
  40245a:	e9d3 4500 	ldrd	r4, r5, [r3]
  40245e:	920f      	str	r2, [sp, #60]	; 0x3c
  402460:	2300      	movs	r3, #0
  402462:	e4d2      	b.n	401e0a <_svfprintf_r+0x1e6>
  402464:	9311      	str	r3, [sp, #68]	; 0x44
  402466:	2a00      	cmp	r2, #0
  402468:	f040 85e7 	bne.w	40303a <_svfprintf_r+0x1416>
  40246c:	9a11      	ldr	r2, [sp, #68]	; 0x44
  40246e:	2a00      	cmp	r2, #0
  402470:	f43f aca3 	beq.w	401dba <_svfprintf_r+0x196>
  402474:	2300      	movs	r3, #0
  402476:	2101      	movs	r1, #1
  402478:	461f      	mov	r7, r3
  40247a:	9108      	str	r1, [sp, #32]
  40247c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402480:	f8cd b01c 	str.w	fp, [sp, #28]
  402484:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  402488:	930a      	str	r3, [sp, #40]	; 0x28
  40248a:	9312      	str	r3, [sp, #72]	; 0x48
  40248c:	910e      	str	r1, [sp, #56]	; 0x38
  40248e:	ae28      	add	r6, sp, #160	; 0xa0
  402490:	e4e4      	b.n	401e5c <_svfprintf_r+0x238>
  402492:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402494:	e534      	b.n	401f00 <_svfprintf_r+0x2dc>
  402496:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402498:	2b65      	cmp	r3, #101	; 0x65
  40249a:	f340 80a7 	ble.w	4025ec <_svfprintf_r+0x9c8>
  40249e:	a815      	add	r0, sp, #84	; 0x54
  4024a0:	c80d      	ldmia	r0, {r0, r2, r3}
  4024a2:	9914      	ldr	r1, [sp, #80]	; 0x50
  4024a4:	f003 fdae 	bl	406004 <__aeabi_dcmpeq>
  4024a8:	2800      	cmp	r0, #0
  4024aa:	f000 8150 	beq.w	40274e <_svfprintf_r+0xb2a>
  4024ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024b0:	4a20      	ldr	r2, [pc, #128]	; (402534 <_svfprintf_r+0x910>)
  4024b2:	f8c8 2000 	str.w	r2, [r8]
  4024b6:	3301      	adds	r3, #1
  4024b8:	3401      	adds	r4, #1
  4024ba:	2201      	movs	r2, #1
  4024bc:	2b07      	cmp	r3, #7
  4024be:	9427      	str	r4, [sp, #156]	; 0x9c
  4024c0:	9326      	str	r3, [sp, #152]	; 0x98
  4024c2:	f8c8 2004 	str.w	r2, [r8, #4]
  4024c6:	f300 836a 	bgt.w	402b9e <_svfprintf_r+0xf7a>
  4024ca:	f108 0808 	add.w	r8, r8, #8
  4024ce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4024d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4024d2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4024d4:	4293      	cmp	r3, r2
  4024d6:	db03      	blt.n	4024e0 <_svfprintf_r+0x8bc>
  4024d8:	9b07      	ldr	r3, [sp, #28]
  4024da:	07dd      	lsls	r5, r3, #31
  4024dc:	f57f ad82 	bpl.w	401fe4 <_svfprintf_r+0x3c0>
  4024e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4024e2:	9919      	ldr	r1, [sp, #100]	; 0x64
  4024e4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4024e6:	f8c8 2000 	str.w	r2, [r8]
  4024ea:	3301      	adds	r3, #1
  4024ec:	440c      	add	r4, r1
  4024ee:	2b07      	cmp	r3, #7
  4024f0:	f8c8 1004 	str.w	r1, [r8, #4]
  4024f4:	9427      	str	r4, [sp, #156]	; 0x9c
  4024f6:	9326      	str	r3, [sp, #152]	; 0x98
  4024f8:	f300 839e 	bgt.w	402c38 <_svfprintf_r+0x1014>
  4024fc:	f108 0808 	add.w	r8, r8, #8
  402500:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402502:	1e5e      	subs	r6, r3, #1
  402504:	2e00      	cmp	r6, #0
  402506:	f77f ad6d 	ble.w	401fe4 <_svfprintf_r+0x3c0>
  40250a:	2e10      	cmp	r6, #16
  40250c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40250e:	4d0a      	ldr	r5, [pc, #40]	; (402538 <_svfprintf_r+0x914>)
  402510:	f340 81f5 	ble.w	4028fe <_svfprintf_r+0xcda>
  402514:	4622      	mov	r2, r4
  402516:	2710      	movs	r7, #16
  402518:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40251c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40251e:	e013      	b.n	402548 <_svfprintf_r+0x924>
  402520:	00406e78 	.word	0x00406e78
  402524:	00406e64 	.word	0x00406e64
  402528:	7fefffff 	.word	0x7fefffff
  40252c:	00406e58 	.word	0x00406e58
  402530:	00406e54 	.word	0x00406e54
  402534:	00406e94 	.word	0x00406e94
  402538:	00406ea8 	.word	0x00406ea8
  40253c:	f108 0808 	add.w	r8, r8, #8
  402540:	3e10      	subs	r6, #16
  402542:	2e10      	cmp	r6, #16
  402544:	f340 81da 	ble.w	4028fc <_svfprintf_r+0xcd8>
  402548:	3301      	adds	r3, #1
  40254a:	3210      	adds	r2, #16
  40254c:	2b07      	cmp	r3, #7
  40254e:	9227      	str	r2, [sp, #156]	; 0x9c
  402550:	9326      	str	r3, [sp, #152]	; 0x98
  402552:	e888 00a0 	stmia.w	r8, {r5, r7}
  402556:	ddf1      	ble.n	40253c <_svfprintf_r+0x918>
  402558:	aa25      	add	r2, sp, #148	; 0x94
  40255a:	4621      	mov	r1, r4
  40255c:	4658      	mov	r0, fp
  40255e:	f002 fcbd 	bl	404edc <__ssprint_r>
  402562:	2800      	cmp	r0, #0
  402564:	f47f ac30 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402568:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40256a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40256c:	46c8      	mov	r8, r9
  40256e:	e7e7      	b.n	402540 <_svfprintf_r+0x91c>
  402570:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402572:	9a08      	ldr	r2, [sp, #32]
  402574:	1a9f      	subs	r7, r3, r2
  402576:	2f00      	cmp	r7, #0
  402578:	f77f ace5 	ble.w	401f46 <_svfprintf_r+0x322>
  40257c:	2f10      	cmp	r7, #16
  40257e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402580:	4db6      	ldr	r5, [pc, #728]	; (40285c <_svfprintf_r+0xc38>)
  402582:	dd27      	ble.n	4025d4 <_svfprintf_r+0x9b0>
  402584:	4642      	mov	r2, r8
  402586:	4621      	mov	r1, r4
  402588:	46b0      	mov	r8, r6
  40258a:	f04f 0b10 	mov.w	fp, #16
  40258e:	462e      	mov	r6, r5
  402590:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402592:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402594:	e004      	b.n	4025a0 <_svfprintf_r+0x97c>
  402596:	3f10      	subs	r7, #16
  402598:	2f10      	cmp	r7, #16
  40259a:	f102 0208 	add.w	r2, r2, #8
  40259e:	dd15      	ble.n	4025cc <_svfprintf_r+0x9a8>
  4025a0:	3301      	adds	r3, #1
  4025a2:	3110      	adds	r1, #16
  4025a4:	2b07      	cmp	r3, #7
  4025a6:	9127      	str	r1, [sp, #156]	; 0x9c
  4025a8:	9326      	str	r3, [sp, #152]	; 0x98
  4025aa:	e882 0840 	stmia.w	r2, {r6, fp}
  4025ae:	ddf2      	ble.n	402596 <_svfprintf_r+0x972>
  4025b0:	aa25      	add	r2, sp, #148	; 0x94
  4025b2:	4629      	mov	r1, r5
  4025b4:	4620      	mov	r0, r4
  4025b6:	f002 fc91 	bl	404edc <__ssprint_r>
  4025ba:	2800      	cmp	r0, #0
  4025bc:	f47f ac04 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  4025c0:	3f10      	subs	r7, #16
  4025c2:	2f10      	cmp	r7, #16
  4025c4:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4025c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4025c8:	464a      	mov	r2, r9
  4025ca:	dce9      	bgt.n	4025a0 <_svfprintf_r+0x97c>
  4025cc:	4635      	mov	r5, r6
  4025ce:	460c      	mov	r4, r1
  4025d0:	4646      	mov	r6, r8
  4025d2:	4690      	mov	r8, r2
  4025d4:	3301      	adds	r3, #1
  4025d6:	443c      	add	r4, r7
  4025d8:	2b07      	cmp	r3, #7
  4025da:	9427      	str	r4, [sp, #156]	; 0x9c
  4025dc:	9326      	str	r3, [sp, #152]	; 0x98
  4025de:	e888 00a0 	stmia.w	r8, {r5, r7}
  4025e2:	f300 8232 	bgt.w	402a4a <_svfprintf_r+0xe26>
  4025e6:	f108 0808 	add.w	r8, r8, #8
  4025ea:	e4ac      	b.n	401f46 <_svfprintf_r+0x322>
  4025ec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4025ee:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4025f0:	2b01      	cmp	r3, #1
  4025f2:	f340 81fe 	ble.w	4029f2 <_svfprintf_r+0xdce>
  4025f6:	3701      	adds	r7, #1
  4025f8:	3401      	adds	r4, #1
  4025fa:	2301      	movs	r3, #1
  4025fc:	2f07      	cmp	r7, #7
  4025fe:	9427      	str	r4, [sp, #156]	; 0x9c
  402600:	9726      	str	r7, [sp, #152]	; 0x98
  402602:	f8c8 6000 	str.w	r6, [r8]
  402606:	f8c8 3004 	str.w	r3, [r8, #4]
  40260a:	f300 8203 	bgt.w	402a14 <_svfprintf_r+0xdf0>
  40260e:	f108 0808 	add.w	r8, r8, #8
  402612:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402614:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  402616:	f8c8 3000 	str.w	r3, [r8]
  40261a:	3701      	adds	r7, #1
  40261c:	4414      	add	r4, r2
  40261e:	2f07      	cmp	r7, #7
  402620:	9427      	str	r4, [sp, #156]	; 0x9c
  402622:	9726      	str	r7, [sp, #152]	; 0x98
  402624:	f8c8 2004 	str.w	r2, [r8, #4]
  402628:	f300 8200 	bgt.w	402a2c <_svfprintf_r+0xe08>
  40262c:	f108 0808 	add.w	r8, r8, #8
  402630:	a815      	add	r0, sp, #84	; 0x54
  402632:	c80d      	ldmia	r0, {r0, r2, r3}
  402634:	9914      	ldr	r1, [sp, #80]	; 0x50
  402636:	f003 fce5 	bl	406004 <__aeabi_dcmpeq>
  40263a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40263c:	2800      	cmp	r0, #0
  40263e:	f040 8101 	bne.w	402844 <_svfprintf_r+0xc20>
  402642:	3b01      	subs	r3, #1
  402644:	3701      	adds	r7, #1
  402646:	3601      	adds	r6, #1
  402648:	441c      	add	r4, r3
  40264a:	2f07      	cmp	r7, #7
  40264c:	9726      	str	r7, [sp, #152]	; 0x98
  40264e:	9427      	str	r4, [sp, #156]	; 0x9c
  402650:	f8c8 6000 	str.w	r6, [r8]
  402654:	f8c8 3004 	str.w	r3, [r8, #4]
  402658:	f300 8127 	bgt.w	4028aa <_svfprintf_r+0xc86>
  40265c:	f108 0808 	add.w	r8, r8, #8
  402660:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402662:	f8c8 2004 	str.w	r2, [r8, #4]
  402666:	3701      	adds	r7, #1
  402668:	4414      	add	r4, r2
  40266a:	ab21      	add	r3, sp, #132	; 0x84
  40266c:	2f07      	cmp	r7, #7
  40266e:	9427      	str	r4, [sp, #156]	; 0x9c
  402670:	9726      	str	r7, [sp, #152]	; 0x98
  402672:	f8c8 3000 	str.w	r3, [r8]
  402676:	f77f acb3 	ble.w	401fe0 <_svfprintf_r+0x3bc>
  40267a:	aa25      	add	r2, sp, #148	; 0x94
  40267c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40267e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402680:	f002 fc2c 	bl	404edc <__ssprint_r>
  402684:	2800      	cmp	r0, #0
  402686:	f47f ab9f 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  40268a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40268c:	46c8      	mov	r8, r9
  40268e:	e4a9      	b.n	401fe4 <_svfprintf_r+0x3c0>
  402690:	aa25      	add	r2, sp, #148	; 0x94
  402692:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402694:	980c      	ldr	r0, [sp, #48]	; 0x30
  402696:	f002 fc21 	bl	404edc <__ssprint_r>
  40269a:	2800      	cmp	r0, #0
  40269c:	f43f aceb 	beq.w	402076 <_svfprintf_r+0x452>
  4026a0:	f7ff bb92 	b.w	401dc8 <_svfprintf_r+0x1a4>
  4026a4:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4026a8:	2b01      	cmp	r3, #1
  4026aa:	f000 8134 	beq.w	402916 <_svfprintf_r+0xcf2>
  4026ae:	2b02      	cmp	r3, #2
  4026b0:	d125      	bne.n	4026fe <_svfprintf_r+0xada>
  4026b2:	f8cd b01c 	str.w	fp, [sp, #28]
  4026b6:	2400      	movs	r4, #0
  4026b8:	2500      	movs	r5, #0
  4026ba:	e61e      	b.n	4022fa <_svfprintf_r+0x6d6>
  4026bc:	aa25      	add	r2, sp, #148	; 0x94
  4026be:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4026c0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4026c2:	f002 fc0b 	bl	404edc <__ssprint_r>
  4026c6:	2800      	cmp	r0, #0
  4026c8:	f47f ab7e 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  4026cc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026ce:	46c8      	mov	r8, r9
  4026d0:	e475      	b.n	401fbe <_svfprintf_r+0x39a>
  4026d2:	aa25      	add	r2, sp, #148	; 0x94
  4026d4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4026d6:	980c      	ldr	r0, [sp, #48]	; 0x30
  4026d8:	f002 fc00 	bl	404edc <__ssprint_r>
  4026dc:	2800      	cmp	r0, #0
  4026de:	f47f ab73 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  4026e2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026e4:	46c8      	mov	r8, r9
  4026e6:	e41b      	b.n	401f20 <_svfprintf_r+0x2fc>
  4026e8:	aa25      	add	r2, sp, #148	; 0x94
  4026ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4026ec:	980c      	ldr	r0, [sp, #48]	; 0x30
  4026ee:	f002 fbf5 	bl	404edc <__ssprint_r>
  4026f2:	2800      	cmp	r0, #0
  4026f4:	f47f ab68 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  4026f8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4026fa:	46c8      	mov	r8, r9
  4026fc:	e420      	b.n	401f40 <_svfprintf_r+0x31c>
  4026fe:	f8cd b01c 	str.w	fp, [sp, #28]
  402702:	2400      	movs	r4, #0
  402704:	2500      	movs	r5, #0
  402706:	4649      	mov	r1, r9
  402708:	e000      	b.n	40270c <_svfprintf_r+0xae8>
  40270a:	4631      	mov	r1, r6
  40270c:	08e2      	lsrs	r2, r4, #3
  40270e:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  402712:	08e8      	lsrs	r0, r5, #3
  402714:	f004 0307 	and.w	r3, r4, #7
  402718:	4605      	mov	r5, r0
  40271a:	4614      	mov	r4, r2
  40271c:	3330      	adds	r3, #48	; 0x30
  40271e:	ea54 0205 	orrs.w	r2, r4, r5
  402722:	f801 3c01 	strb.w	r3, [r1, #-1]
  402726:	f101 36ff 	add.w	r6, r1, #4294967295
  40272a:	d1ee      	bne.n	40270a <_svfprintf_r+0xae6>
  40272c:	9a07      	ldr	r2, [sp, #28]
  40272e:	07d2      	lsls	r2, r2, #31
  402730:	f57f adf3 	bpl.w	40231a <_svfprintf_r+0x6f6>
  402734:	2b30      	cmp	r3, #48	; 0x30
  402736:	f43f adf0 	beq.w	40231a <_svfprintf_r+0x6f6>
  40273a:	3902      	subs	r1, #2
  40273c:	2330      	movs	r3, #48	; 0x30
  40273e:	f806 3c01 	strb.w	r3, [r6, #-1]
  402742:	eba9 0301 	sub.w	r3, r9, r1
  402746:	930e      	str	r3, [sp, #56]	; 0x38
  402748:	460e      	mov	r6, r1
  40274a:	f7ff bb7b 	b.w	401e44 <_svfprintf_r+0x220>
  40274e:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402750:	2900      	cmp	r1, #0
  402752:	f340 822e 	ble.w	402bb2 <_svfprintf_r+0xf8e>
  402756:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402758:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40275a:	4293      	cmp	r3, r2
  40275c:	bfa8      	it	ge
  40275e:	4613      	movge	r3, r2
  402760:	2b00      	cmp	r3, #0
  402762:	461f      	mov	r7, r3
  402764:	dd0d      	ble.n	402782 <_svfprintf_r+0xb5e>
  402766:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402768:	f8c8 6000 	str.w	r6, [r8]
  40276c:	3301      	adds	r3, #1
  40276e:	443c      	add	r4, r7
  402770:	2b07      	cmp	r3, #7
  402772:	9427      	str	r4, [sp, #156]	; 0x9c
  402774:	f8c8 7004 	str.w	r7, [r8, #4]
  402778:	9326      	str	r3, [sp, #152]	; 0x98
  40277a:	f300 831f 	bgt.w	402dbc <_svfprintf_r+0x1198>
  40277e:	f108 0808 	add.w	r8, r8, #8
  402782:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402784:	2f00      	cmp	r7, #0
  402786:	bfa8      	it	ge
  402788:	1bdb      	subge	r3, r3, r7
  40278a:	2b00      	cmp	r3, #0
  40278c:	461f      	mov	r7, r3
  40278e:	f340 80d6 	ble.w	40293e <_svfprintf_r+0xd1a>
  402792:	2f10      	cmp	r7, #16
  402794:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402796:	4d31      	ldr	r5, [pc, #196]	; (40285c <_svfprintf_r+0xc38>)
  402798:	f340 81ed 	ble.w	402b76 <_svfprintf_r+0xf52>
  40279c:	4642      	mov	r2, r8
  40279e:	4621      	mov	r1, r4
  4027a0:	46b0      	mov	r8, r6
  4027a2:	f04f 0b10 	mov.w	fp, #16
  4027a6:	462e      	mov	r6, r5
  4027a8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4027aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  4027ac:	e004      	b.n	4027b8 <_svfprintf_r+0xb94>
  4027ae:	3208      	adds	r2, #8
  4027b0:	3f10      	subs	r7, #16
  4027b2:	2f10      	cmp	r7, #16
  4027b4:	f340 81db 	ble.w	402b6e <_svfprintf_r+0xf4a>
  4027b8:	3301      	adds	r3, #1
  4027ba:	3110      	adds	r1, #16
  4027bc:	2b07      	cmp	r3, #7
  4027be:	9127      	str	r1, [sp, #156]	; 0x9c
  4027c0:	9326      	str	r3, [sp, #152]	; 0x98
  4027c2:	e882 0840 	stmia.w	r2, {r6, fp}
  4027c6:	ddf2      	ble.n	4027ae <_svfprintf_r+0xb8a>
  4027c8:	aa25      	add	r2, sp, #148	; 0x94
  4027ca:	4629      	mov	r1, r5
  4027cc:	4620      	mov	r0, r4
  4027ce:	f002 fb85 	bl	404edc <__ssprint_r>
  4027d2:	2800      	cmp	r0, #0
  4027d4:	f47f aaf8 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  4027d8:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4027da:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4027dc:	464a      	mov	r2, r9
  4027de:	e7e7      	b.n	4027b0 <_svfprintf_r+0xb8c>
  4027e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4027e2:	930e      	str	r3, [sp, #56]	; 0x38
  4027e4:	464e      	mov	r6, r9
  4027e6:	f7ff bb2d 	b.w	401e44 <_svfprintf_r+0x220>
  4027ea:	2d00      	cmp	r5, #0
  4027ec:	bf08      	it	eq
  4027ee:	2c0a      	cmpeq	r4, #10
  4027f0:	f0c0 808f 	bcc.w	402912 <_svfprintf_r+0xcee>
  4027f4:	464e      	mov	r6, r9
  4027f6:	4620      	mov	r0, r4
  4027f8:	4629      	mov	r1, r5
  4027fa:	220a      	movs	r2, #10
  4027fc:	2300      	movs	r3, #0
  4027fe:	f003 fc71 	bl	4060e4 <__aeabi_uldivmod>
  402802:	3230      	adds	r2, #48	; 0x30
  402804:	f806 2d01 	strb.w	r2, [r6, #-1]!
  402808:	4620      	mov	r0, r4
  40280a:	4629      	mov	r1, r5
  40280c:	2300      	movs	r3, #0
  40280e:	220a      	movs	r2, #10
  402810:	f003 fc68 	bl	4060e4 <__aeabi_uldivmod>
  402814:	4604      	mov	r4, r0
  402816:	460d      	mov	r5, r1
  402818:	ea54 0305 	orrs.w	r3, r4, r5
  40281c:	d1eb      	bne.n	4027f6 <_svfprintf_r+0xbd2>
  40281e:	eba9 0306 	sub.w	r3, r9, r6
  402822:	930e      	str	r3, [sp, #56]	; 0x38
  402824:	f7ff bb0e 	b.w	401e44 <_svfprintf_r+0x220>
  402828:	aa25      	add	r2, sp, #148	; 0x94
  40282a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40282c:	980c      	ldr	r0, [sp, #48]	; 0x30
  40282e:	f002 fb55 	bl	404edc <__ssprint_r>
  402832:	2800      	cmp	r0, #0
  402834:	f47f aac8 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402838:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  40283c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40283e:	46c8      	mov	r8, r9
  402840:	f7ff bb5e 	b.w	401f00 <_svfprintf_r+0x2dc>
  402844:	1e5e      	subs	r6, r3, #1
  402846:	2e00      	cmp	r6, #0
  402848:	f77f af0a 	ble.w	402660 <_svfprintf_r+0xa3c>
  40284c:	2e10      	cmp	r6, #16
  40284e:	4d03      	ldr	r5, [pc, #12]	; (40285c <_svfprintf_r+0xc38>)
  402850:	dd22      	ble.n	402898 <_svfprintf_r+0xc74>
  402852:	4622      	mov	r2, r4
  402854:	f04f 0b10 	mov.w	fp, #16
  402858:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40285a:	e006      	b.n	40286a <_svfprintf_r+0xc46>
  40285c:	00406ea8 	.word	0x00406ea8
  402860:	3e10      	subs	r6, #16
  402862:	2e10      	cmp	r6, #16
  402864:	f108 0808 	add.w	r8, r8, #8
  402868:	dd15      	ble.n	402896 <_svfprintf_r+0xc72>
  40286a:	3701      	adds	r7, #1
  40286c:	3210      	adds	r2, #16
  40286e:	2f07      	cmp	r7, #7
  402870:	9227      	str	r2, [sp, #156]	; 0x9c
  402872:	9726      	str	r7, [sp, #152]	; 0x98
  402874:	e888 0820 	stmia.w	r8, {r5, fp}
  402878:	ddf2      	ble.n	402860 <_svfprintf_r+0xc3c>
  40287a:	aa25      	add	r2, sp, #148	; 0x94
  40287c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40287e:	4620      	mov	r0, r4
  402880:	f002 fb2c 	bl	404edc <__ssprint_r>
  402884:	2800      	cmp	r0, #0
  402886:	f47f aa9f 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  40288a:	3e10      	subs	r6, #16
  40288c:	2e10      	cmp	r6, #16
  40288e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402890:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402892:	46c8      	mov	r8, r9
  402894:	dce9      	bgt.n	40286a <_svfprintf_r+0xc46>
  402896:	4614      	mov	r4, r2
  402898:	3701      	adds	r7, #1
  40289a:	4434      	add	r4, r6
  40289c:	2f07      	cmp	r7, #7
  40289e:	9427      	str	r4, [sp, #156]	; 0x9c
  4028a0:	9726      	str	r7, [sp, #152]	; 0x98
  4028a2:	e888 0060 	stmia.w	r8, {r5, r6}
  4028a6:	f77f aed9 	ble.w	40265c <_svfprintf_r+0xa38>
  4028aa:	aa25      	add	r2, sp, #148	; 0x94
  4028ac:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028ae:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028b0:	f002 fb14 	bl	404edc <__ssprint_r>
  4028b4:	2800      	cmp	r0, #0
  4028b6:	f47f aa87 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  4028ba:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028bc:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4028be:	46c8      	mov	r8, r9
  4028c0:	e6ce      	b.n	402660 <_svfprintf_r+0xa3c>
  4028c2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4028c4:	6814      	ldr	r4, [r2, #0]
  4028c6:	4613      	mov	r3, r2
  4028c8:	3304      	adds	r3, #4
  4028ca:	17e5      	asrs	r5, r4, #31
  4028cc:	930f      	str	r3, [sp, #60]	; 0x3c
  4028ce:	4622      	mov	r2, r4
  4028d0:	462b      	mov	r3, r5
  4028d2:	e4fa      	b.n	4022ca <_svfprintf_r+0x6a6>
  4028d4:	3204      	adds	r2, #4
  4028d6:	681c      	ldr	r4, [r3, #0]
  4028d8:	920f      	str	r2, [sp, #60]	; 0x3c
  4028da:	2301      	movs	r3, #1
  4028dc:	2500      	movs	r5, #0
  4028de:	f7ff ba94 	b.w	401e0a <_svfprintf_r+0x1e6>
  4028e2:	681c      	ldr	r4, [r3, #0]
  4028e4:	3304      	adds	r3, #4
  4028e6:	930f      	str	r3, [sp, #60]	; 0x3c
  4028e8:	2500      	movs	r5, #0
  4028ea:	e421      	b.n	402130 <_svfprintf_r+0x50c>
  4028ec:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4028ee:	460a      	mov	r2, r1
  4028f0:	3204      	adds	r2, #4
  4028f2:	680c      	ldr	r4, [r1, #0]
  4028f4:	920f      	str	r2, [sp, #60]	; 0x3c
  4028f6:	2500      	movs	r5, #0
  4028f8:	f7ff ba87 	b.w	401e0a <_svfprintf_r+0x1e6>
  4028fc:	4614      	mov	r4, r2
  4028fe:	3301      	adds	r3, #1
  402900:	4434      	add	r4, r6
  402902:	2b07      	cmp	r3, #7
  402904:	9427      	str	r4, [sp, #156]	; 0x9c
  402906:	9326      	str	r3, [sp, #152]	; 0x98
  402908:	e888 0060 	stmia.w	r8, {r5, r6}
  40290c:	f77f ab68 	ble.w	401fe0 <_svfprintf_r+0x3bc>
  402910:	e6b3      	b.n	40267a <_svfprintf_r+0xa56>
  402912:	f8dd b01c 	ldr.w	fp, [sp, #28]
  402916:	f8cd b01c 	str.w	fp, [sp, #28]
  40291a:	ae42      	add	r6, sp, #264	; 0x108
  40291c:	3430      	adds	r4, #48	; 0x30
  40291e:	2301      	movs	r3, #1
  402920:	f806 4d41 	strb.w	r4, [r6, #-65]!
  402924:	930e      	str	r3, [sp, #56]	; 0x38
  402926:	f7ff ba8d 	b.w	401e44 <_svfprintf_r+0x220>
  40292a:	aa25      	add	r2, sp, #148	; 0x94
  40292c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40292e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402930:	f002 fad4 	bl	404edc <__ssprint_r>
  402934:	2800      	cmp	r0, #0
  402936:	f47f aa47 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  40293a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  40293c:	46c8      	mov	r8, r9
  40293e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402940:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402942:	429a      	cmp	r2, r3
  402944:	db44      	blt.n	4029d0 <_svfprintf_r+0xdac>
  402946:	9b07      	ldr	r3, [sp, #28]
  402948:	07d9      	lsls	r1, r3, #31
  40294a:	d441      	bmi.n	4029d0 <_svfprintf_r+0xdac>
  40294c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  40294e:	9812      	ldr	r0, [sp, #72]	; 0x48
  402950:	1a9a      	subs	r2, r3, r2
  402952:	1a1d      	subs	r5, r3, r0
  402954:	4295      	cmp	r5, r2
  402956:	bfa8      	it	ge
  402958:	4615      	movge	r5, r2
  40295a:	2d00      	cmp	r5, #0
  40295c:	dd0e      	ble.n	40297c <_svfprintf_r+0xd58>
  40295e:	9926      	ldr	r1, [sp, #152]	; 0x98
  402960:	f8c8 5004 	str.w	r5, [r8, #4]
  402964:	3101      	adds	r1, #1
  402966:	4406      	add	r6, r0
  402968:	442c      	add	r4, r5
  40296a:	2907      	cmp	r1, #7
  40296c:	f8c8 6000 	str.w	r6, [r8]
  402970:	9427      	str	r4, [sp, #156]	; 0x9c
  402972:	9126      	str	r1, [sp, #152]	; 0x98
  402974:	f300 823b 	bgt.w	402dee <_svfprintf_r+0x11ca>
  402978:	f108 0808 	add.w	r8, r8, #8
  40297c:	2d00      	cmp	r5, #0
  40297e:	bfac      	ite	ge
  402980:	1b56      	subge	r6, r2, r5
  402982:	4616      	movlt	r6, r2
  402984:	2e00      	cmp	r6, #0
  402986:	f77f ab2d 	ble.w	401fe4 <_svfprintf_r+0x3c0>
  40298a:	2e10      	cmp	r6, #16
  40298c:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40298e:	4db0      	ldr	r5, [pc, #704]	; (402c50 <_svfprintf_r+0x102c>)
  402990:	ddb5      	ble.n	4028fe <_svfprintf_r+0xcda>
  402992:	4622      	mov	r2, r4
  402994:	2710      	movs	r7, #16
  402996:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40299a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  40299c:	e004      	b.n	4029a8 <_svfprintf_r+0xd84>
  40299e:	f108 0808 	add.w	r8, r8, #8
  4029a2:	3e10      	subs	r6, #16
  4029a4:	2e10      	cmp	r6, #16
  4029a6:	dda9      	ble.n	4028fc <_svfprintf_r+0xcd8>
  4029a8:	3301      	adds	r3, #1
  4029aa:	3210      	adds	r2, #16
  4029ac:	2b07      	cmp	r3, #7
  4029ae:	9227      	str	r2, [sp, #156]	; 0x9c
  4029b0:	9326      	str	r3, [sp, #152]	; 0x98
  4029b2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4029b6:	ddf2      	ble.n	40299e <_svfprintf_r+0xd7a>
  4029b8:	aa25      	add	r2, sp, #148	; 0x94
  4029ba:	4621      	mov	r1, r4
  4029bc:	4658      	mov	r0, fp
  4029be:	f002 fa8d 	bl	404edc <__ssprint_r>
  4029c2:	2800      	cmp	r0, #0
  4029c4:	f47f aa00 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  4029c8:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  4029ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029cc:	46c8      	mov	r8, r9
  4029ce:	e7e8      	b.n	4029a2 <_svfprintf_r+0xd7e>
  4029d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4029d2:	9819      	ldr	r0, [sp, #100]	; 0x64
  4029d4:	991a      	ldr	r1, [sp, #104]	; 0x68
  4029d6:	f8c8 1000 	str.w	r1, [r8]
  4029da:	3301      	adds	r3, #1
  4029dc:	4404      	add	r4, r0
  4029de:	2b07      	cmp	r3, #7
  4029e0:	9427      	str	r4, [sp, #156]	; 0x9c
  4029e2:	f8c8 0004 	str.w	r0, [r8, #4]
  4029e6:	9326      	str	r3, [sp, #152]	; 0x98
  4029e8:	f300 81f5 	bgt.w	402dd6 <_svfprintf_r+0x11b2>
  4029ec:	f108 0808 	add.w	r8, r8, #8
  4029f0:	e7ac      	b.n	40294c <_svfprintf_r+0xd28>
  4029f2:	9b07      	ldr	r3, [sp, #28]
  4029f4:	07da      	lsls	r2, r3, #31
  4029f6:	f53f adfe 	bmi.w	4025f6 <_svfprintf_r+0x9d2>
  4029fa:	3701      	adds	r7, #1
  4029fc:	3401      	adds	r4, #1
  4029fe:	2301      	movs	r3, #1
  402a00:	2f07      	cmp	r7, #7
  402a02:	9427      	str	r4, [sp, #156]	; 0x9c
  402a04:	9726      	str	r7, [sp, #152]	; 0x98
  402a06:	f8c8 6000 	str.w	r6, [r8]
  402a0a:	f8c8 3004 	str.w	r3, [r8, #4]
  402a0e:	f77f ae25 	ble.w	40265c <_svfprintf_r+0xa38>
  402a12:	e74a      	b.n	4028aa <_svfprintf_r+0xc86>
  402a14:	aa25      	add	r2, sp, #148	; 0x94
  402a16:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a18:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a1a:	f002 fa5f 	bl	404edc <__ssprint_r>
  402a1e:	2800      	cmp	r0, #0
  402a20:	f47f a9d2 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402a24:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a26:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a28:	46c8      	mov	r8, r9
  402a2a:	e5f2      	b.n	402612 <_svfprintf_r+0x9ee>
  402a2c:	aa25      	add	r2, sp, #148	; 0x94
  402a2e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a30:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a32:	f002 fa53 	bl	404edc <__ssprint_r>
  402a36:	2800      	cmp	r0, #0
  402a38:	f47f a9c6 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402a3c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a3e:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402a40:	46c8      	mov	r8, r9
  402a42:	e5f5      	b.n	402630 <_svfprintf_r+0xa0c>
  402a44:	464e      	mov	r6, r9
  402a46:	f7ff b9fd 	b.w	401e44 <_svfprintf_r+0x220>
  402a4a:	aa25      	add	r2, sp, #148	; 0x94
  402a4c:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a4e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a50:	f002 fa44 	bl	404edc <__ssprint_r>
  402a54:	2800      	cmp	r0, #0
  402a56:	f47f a9b7 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402a5a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402a5c:	46c8      	mov	r8, r9
  402a5e:	f7ff ba72 	b.w	401f46 <_svfprintf_r+0x322>
  402a62:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402a64:	4622      	mov	r2, r4
  402a66:	4620      	mov	r0, r4
  402a68:	9c14      	ldr	r4, [sp, #80]	; 0x50
  402a6a:	4623      	mov	r3, r4
  402a6c:	4621      	mov	r1, r4
  402a6e:	f003 fafb 	bl	406068 <__aeabi_dcmpun>
  402a72:	2800      	cmp	r0, #0
  402a74:	f040 8286 	bne.w	402f84 <_svfprintf_r+0x1360>
  402a78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402a7a:	3301      	adds	r3, #1
  402a7c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402a7e:	f023 0320 	bic.w	r3, r3, #32
  402a82:	930e      	str	r3, [sp, #56]	; 0x38
  402a84:	f000 81e2 	beq.w	402e4c <_svfprintf_r+0x1228>
  402a88:	2b47      	cmp	r3, #71	; 0x47
  402a8a:	f000 811e 	beq.w	402cca <_svfprintf_r+0x10a6>
  402a8e:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402a92:	9307      	str	r3, [sp, #28]
  402a94:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402a96:	1e1f      	subs	r7, r3, #0
  402a98:	9b15      	ldr	r3, [sp, #84]	; 0x54
  402a9a:	9308      	str	r3, [sp, #32]
  402a9c:	bfbb      	ittet	lt
  402a9e:	463b      	movlt	r3, r7
  402aa0:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402aa4:	2300      	movge	r3, #0
  402aa6:	232d      	movlt	r3, #45	; 0x2d
  402aa8:	9310      	str	r3, [sp, #64]	; 0x40
  402aaa:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402aac:	2b66      	cmp	r3, #102	; 0x66
  402aae:	f000 81bb 	beq.w	402e28 <_svfprintf_r+0x1204>
  402ab2:	2b46      	cmp	r3, #70	; 0x46
  402ab4:	f000 80df 	beq.w	402c76 <_svfprintf_r+0x1052>
  402ab8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402aba:	9a08      	ldr	r2, [sp, #32]
  402abc:	2b45      	cmp	r3, #69	; 0x45
  402abe:	bf0c      	ite	eq
  402ac0:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402ac2:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402ac4:	a823      	add	r0, sp, #140	; 0x8c
  402ac6:	a920      	add	r1, sp, #128	; 0x80
  402ac8:	bf08      	it	eq
  402aca:	1c5d      	addeq	r5, r3, #1
  402acc:	9004      	str	r0, [sp, #16]
  402ace:	9103      	str	r1, [sp, #12]
  402ad0:	a81f      	add	r0, sp, #124	; 0x7c
  402ad2:	2102      	movs	r1, #2
  402ad4:	463b      	mov	r3, r7
  402ad6:	9002      	str	r0, [sp, #8]
  402ad8:	9501      	str	r5, [sp, #4]
  402ada:	9100      	str	r1, [sp, #0]
  402adc:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ade:	f000 fb73 	bl	4031c8 <_dtoa_r>
  402ae2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402ae4:	2b67      	cmp	r3, #103	; 0x67
  402ae6:	4606      	mov	r6, r0
  402ae8:	f040 81e0 	bne.w	402eac <_svfprintf_r+0x1288>
  402aec:	f01b 0f01 	tst.w	fp, #1
  402af0:	f000 8246 	beq.w	402f80 <_svfprintf_r+0x135c>
  402af4:	1974      	adds	r4, r6, r5
  402af6:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402af8:	9808      	ldr	r0, [sp, #32]
  402afa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402afc:	4639      	mov	r1, r7
  402afe:	f003 fa81 	bl	406004 <__aeabi_dcmpeq>
  402b02:	2800      	cmp	r0, #0
  402b04:	f040 8165 	bne.w	402dd2 <_svfprintf_r+0x11ae>
  402b08:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402b0a:	42a3      	cmp	r3, r4
  402b0c:	d206      	bcs.n	402b1c <_svfprintf_r+0xef8>
  402b0e:	2130      	movs	r1, #48	; 0x30
  402b10:	1c5a      	adds	r2, r3, #1
  402b12:	9223      	str	r2, [sp, #140]	; 0x8c
  402b14:	7019      	strb	r1, [r3, #0]
  402b16:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402b18:	429c      	cmp	r4, r3
  402b1a:	d8f9      	bhi.n	402b10 <_svfprintf_r+0xeec>
  402b1c:	1b9b      	subs	r3, r3, r6
  402b1e:	9313      	str	r3, [sp, #76]	; 0x4c
  402b20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402b22:	2b47      	cmp	r3, #71	; 0x47
  402b24:	f000 80e9 	beq.w	402cfa <_svfprintf_r+0x10d6>
  402b28:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402b2a:	2b65      	cmp	r3, #101	; 0x65
  402b2c:	f340 81cd 	ble.w	402eca <_svfprintf_r+0x12a6>
  402b30:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402b32:	2b66      	cmp	r3, #102	; 0x66
  402b34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402b36:	9312      	str	r3, [sp, #72]	; 0x48
  402b38:	f000 819e 	beq.w	402e78 <_svfprintf_r+0x1254>
  402b3c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402b3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402b40:	4619      	mov	r1, r3
  402b42:	4291      	cmp	r1, r2
  402b44:	f300 818a 	bgt.w	402e5c <_svfprintf_r+0x1238>
  402b48:	f01b 0f01 	tst.w	fp, #1
  402b4c:	f040 8213 	bne.w	402f76 <_svfprintf_r+0x1352>
  402b50:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402b54:	9308      	str	r3, [sp, #32]
  402b56:	2367      	movs	r3, #103	; 0x67
  402b58:	920e      	str	r2, [sp, #56]	; 0x38
  402b5a:	9311      	str	r3, [sp, #68]	; 0x44
  402b5c:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402b5e:	2b00      	cmp	r3, #0
  402b60:	f040 80c4 	bne.w	402cec <_svfprintf_r+0x10c8>
  402b64:	930a      	str	r3, [sp, #40]	; 0x28
  402b66:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402b6a:	f7ff b973 	b.w	401e54 <_svfprintf_r+0x230>
  402b6e:	4635      	mov	r5, r6
  402b70:	460c      	mov	r4, r1
  402b72:	4646      	mov	r6, r8
  402b74:	4690      	mov	r8, r2
  402b76:	3301      	adds	r3, #1
  402b78:	443c      	add	r4, r7
  402b7a:	2b07      	cmp	r3, #7
  402b7c:	9427      	str	r4, [sp, #156]	; 0x9c
  402b7e:	9326      	str	r3, [sp, #152]	; 0x98
  402b80:	e888 00a0 	stmia.w	r8, {r5, r7}
  402b84:	f73f aed1 	bgt.w	40292a <_svfprintf_r+0xd06>
  402b88:	f108 0808 	add.w	r8, r8, #8
  402b8c:	e6d7      	b.n	40293e <_svfprintf_r+0xd1a>
  402b8e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402b90:	6813      	ldr	r3, [r2, #0]
  402b92:	3204      	adds	r2, #4
  402b94:	920f      	str	r2, [sp, #60]	; 0x3c
  402b96:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402b98:	601a      	str	r2, [r3, #0]
  402b9a:	f7ff b86a 	b.w	401c72 <_svfprintf_r+0x4e>
  402b9e:	aa25      	add	r2, sp, #148	; 0x94
  402ba0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402ba2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ba4:	f002 f99a 	bl	404edc <__ssprint_r>
  402ba8:	2800      	cmp	r0, #0
  402baa:	f47f a90d 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402bae:	46c8      	mov	r8, r9
  402bb0:	e48d      	b.n	4024ce <_svfprintf_r+0x8aa>
  402bb2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402bb4:	4a27      	ldr	r2, [pc, #156]	; (402c54 <_svfprintf_r+0x1030>)
  402bb6:	f8c8 2000 	str.w	r2, [r8]
  402bba:	3301      	adds	r3, #1
  402bbc:	3401      	adds	r4, #1
  402bbe:	2201      	movs	r2, #1
  402bc0:	2b07      	cmp	r3, #7
  402bc2:	9427      	str	r4, [sp, #156]	; 0x9c
  402bc4:	9326      	str	r3, [sp, #152]	; 0x98
  402bc6:	f8c8 2004 	str.w	r2, [r8, #4]
  402bca:	dc72      	bgt.n	402cb2 <_svfprintf_r+0x108e>
  402bcc:	f108 0808 	add.w	r8, r8, #8
  402bd0:	b929      	cbnz	r1, 402bde <_svfprintf_r+0xfba>
  402bd2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402bd4:	b91b      	cbnz	r3, 402bde <_svfprintf_r+0xfba>
  402bd6:	9b07      	ldr	r3, [sp, #28]
  402bd8:	07d8      	lsls	r0, r3, #31
  402bda:	f57f aa03 	bpl.w	401fe4 <_svfprintf_r+0x3c0>
  402bde:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402be0:	9819      	ldr	r0, [sp, #100]	; 0x64
  402be2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402be4:	f8c8 2000 	str.w	r2, [r8]
  402be8:	3301      	adds	r3, #1
  402bea:	4602      	mov	r2, r0
  402bec:	4422      	add	r2, r4
  402bee:	2b07      	cmp	r3, #7
  402bf0:	9227      	str	r2, [sp, #156]	; 0x9c
  402bf2:	f8c8 0004 	str.w	r0, [r8, #4]
  402bf6:	9326      	str	r3, [sp, #152]	; 0x98
  402bf8:	f300 818d 	bgt.w	402f16 <_svfprintf_r+0x12f2>
  402bfc:	f108 0808 	add.w	r8, r8, #8
  402c00:	2900      	cmp	r1, #0
  402c02:	f2c0 8165 	blt.w	402ed0 <_svfprintf_r+0x12ac>
  402c06:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402c08:	f8c8 6000 	str.w	r6, [r8]
  402c0c:	3301      	adds	r3, #1
  402c0e:	188c      	adds	r4, r1, r2
  402c10:	2b07      	cmp	r3, #7
  402c12:	9427      	str	r4, [sp, #156]	; 0x9c
  402c14:	9326      	str	r3, [sp, #152]	; 0x98
  402c16:	f8c8 1004 	str.w	r1, [r8, #4]
  402c1a:	f77f a9e1 	ble.w	401fe0 <_svfprintf_r+0x3bc>
  402c1e:	e52c      	b.n	40267a <_svfprintf_r+0xa56>
  402c20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402c22:	9909      	ldr	r1, [sp, #36]	; 0x24
  402c24:	6813      	ldr	r3, [r2, #0]
  402c26:	17cd      	asrs	r5, r1, #31
  402c28:	4608      	mov	r0, r1
  402c2a:	3204      	adds	r2, #4
  402c2c:	4629      	mov	r1, r5
  402c2e:	920f      	str	r2, [sp, #60]	; 0x3c
  402c30:	e9c3 0100 	strd	r0, r1, [r3]
  402c34:	f7ff b81d 	b.w	401c72 <_svfprintf_r+0x4e>
  402c38:	aa25      	add	r2, sp, #148	; 0x94
  402c3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c3c:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c3e:	f002 f94d 	bl	404edc <__ssprint_r>
  402c42:	2800      	cmp	r0, #0
  402c44:	f47f a8c0 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402c48:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402c4a:	46c8      	mov	r8, r9
  402c4c:	e458      	b.n	402500 <_svfprintf_r+0x8dc>
  402c4e:	bf00      	nop
  402c50:	00406ea8 	.word	0x00406ea8
  402c54:	00406e94 	.word	0x00406e94
  402c58:	2140      	movs	r1, #64	; 0x40
  402c5a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c5c:	f001 fa0a 	bl	404074 <_malloc_r>
  402c60:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402c62:	6010      	str	r0, [r2, #0]
  402c64:	6110      	str	r0, [r2, #16]
  402c66:	2800      	cmp	r0, #0
  402c68:	f000 81f2 	beq.w	403050 <_svfprintf_r+0x142c>
  402c6c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402c6e:	2340      	movs	r3, #64	; 0x40
  402c70:	6153      	str	r3, [r2, #20]
  402c72:	f7fe bfee 	b.w	401c52 <_svfprintf_r+0x2e>
  402c76:	a823      	add	r0, sp, #140	; 0x8c
  402c78:	a920      	add	r1, sp, #128	; 0x80
  402c7a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402c7c:	9004      	str	r0, [sp, #16]
  402c7e:	9103      	str	r1, [sp, #12]
  402c80:	a81f      	add	r0, sp, #124	; 0x7c
  402c82:	2103      	movs	r1, #3
  402c84:	9002      	str	r0, [sp, #8]
  402c86:	9a08      	ldr	r2, [sp, #32]
  402c88:	9401      	str	r4, [sp, #4]
  402c8a:	463b      	mov	r3, r7
  402c8c:	9100      	str	r1, [sp, #0]
  402c8e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c90:	f000 fa9a 	bl	4031c8 <_dtoa_r>
  402c94:	4625      	mov	r5, r4
  402c96:	4606      	mov	r6, r0
  402c98:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402c9a:	2b46      	cmp	r3, #70	; 0x46
  402c9c:	eb06 0405 	add.w	r4, r6, r5
  402ca0:	f47f af29 	bne.w	402af6 <_svfprintf_r+0xed2>
  402ca4:	7833      	ldrb	r3, [r6, #0]
  402ca6:	2b30      	cmp	r3, #48	; 0x30
  402ca8:	f000 8178 	beq.w	402f9c <_svfprintf_r+0x1378>
  402cac:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402cae:	442c      	add	r4, r5
  402cb0:	e721      	b.n	402af6 <_svfprintf_r+0xed2>
  402cb2:	aa25      	add	r2, sp, #148	; 0x94
  402cb4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cb6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cb8:	f002 f910 	bl	404edc <__ssprint_r>
  402cbc:	2800      	cmp	r0, #0
  402cbe:	f47f a883 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402cc2:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402cc4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cc6:	46c8      	mov	r8, r9
  402cc8:	e782      	b.n	402bd0 <_svfprintf_r+0xfac>
  402cca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402ccc:	2b00      	cmp	r3, #0
  402cce:	bf08      	it	eq
  402cd0:	2301      	moveq	r3, #1
  402cd2:	930a      	str	r3, [sp, #40]	; 0x28
  402cd4:	e6db      	b.n	402a8e <_svfprintf_r+0xe6a>
  402cd6:	4630      	mov	r0, r6
  402cd8:	940a      	str	r4, [sp, #40]	; 0x28
  402cda:	f002 f891 	bl	404e00 <strlen>
  402cde:	950f      	str	r5, [sp, #60]	; 0x3c
  402ce0:	900e      	str	r0, [sp, #56]	; 0x38
  402ce2:	f8cd b01c 	str.w	fp, [sp, #28]
  402ce6:	4603      	mov	r3, r0
  402ce8:	f7ff b9f9 	b.w	4020de <_svfprintf_r+0x4ba>
  402cec:	272d      	movs	r7, #45	; 0x2d
  402cee:	2300      	movs	r3, #0
  402cf0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402cf4:	930a      	str	r3, [sp, #40]	; 0x28
  402cf6:	f7ff b8ae 	b.w	401e56 <_svfprintf_r+0x232>
  402cfa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402cfc:	9312      	str	r3, [sp, #72]	; 0x48
  402cfe:	461a      	mov	r2, r3
  402d00:	3303      	adds	r3, #3
  402d02:	db04      	blt.n	402d0e <_svfprintf_r+0x10ea>
  402d04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402d06:	4619      	mov	r1, r3
  402d08:	4291      	cmp	r1, r2
  402d0a:	f6bf af17 	bge.w	402b3c <_svfprintf_r+0xf18>
  402d0e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d10:	3b02      	subs	r3, #2
  402d12:	9311      	str	r3, [sp, #68]	; 0x44
  402d14:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402d18:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402d1c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402d1e:	3b01      	subs	r3, #1
  402d20:	2b00      	cmp	r3, #0
  402d22:	931f      	str	r3, [sp, #124]	; 0x7c
  402d24:	bfbd      	ittte	lt
  402d26:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402d28:	f1c3 0301 	rsblt	r3, r3, #1
  402d2c:	222d      	movlt	r2, #45	; 0x2d
  402d2e:	222b      	movge	r2, #43	; 0x2b
  402d30:	2b09      	cmp	r3, #9
  402d32:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402d36:	f340 8116 	ble.w	402f66 <_svfprintf_r+0x1342>
  402d3a:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402d3e:	4620      	mov	r0, r4
  402d40:	4dab      	ldr	r5, [pc, #684]	; (402ff0 <_svfprintf_r+0x13cc>)
  402d42:	e000      	b.n	402d46 <_svfprintf_r+0x1122>
  402d44:	4610      	mov	r0, r2
  402d46:	fb85 1203 	smull	r1, r2, r5, r3
  402d4a:	17d9      	asrs	r1, r3, #31
  402d4c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402d50:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402d54:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402d58:	3230      	adds	r2, #48	; 0x30
  402d5a:	2909      	cmp	r1, #9
  402d5c:	f800 2c01 	strb.w	r2, [r0, #-1]
  402d60:	460b      	mov	r3, r1
  402d62:	f100 32ff 	add.w	r2, r0, #4294967295
  402d66:	dced      	bgt.n	402d44 <_svfprintf_r+0x1120>
  402d68:	3330      	adds	r3, #48	; 0x30
  402d6a:	3802      	subs	r0, #2
  402d6c:	b2d9      	uxtb	r1, r3
  402d6e:	4284      	cmp	r4, r0
  402d70:	f802 1c01 	strb.w	r1, [r2, #-1]
  402d74:	f240 8165 	bls.w	403042 <_svfprintf_r+0x141e>
  402d78:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402d7c:	4613      	mov	r3, r2
  402d7e:	e001      	b.n	402d84 <_svfprintf_r+0x1160>
  402d80:	f813 1b01 	ldrb.w	r1, [r3], #1
  402d84:	f800 1b01 	strb.w	r1, [r0], #1
  402d88:	42a3      	cmp	r3, r4
  402d8a:	d1f9      	bne.n	402d80 <_svfprintf_r+0x115c>
  402d8c:	3301      	adds	r3, #1
  402d8e:	1a9b      	subs	r3, r3, r2
  402d90:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402d94:	4413      	add	r3, r2
  402d96:	aa21      	add	r2, sp, #132	; 0x84
  402d98:	1a9b      	subs	r3, r3, r2
  402d9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402d9c:	931b      	str	r3, [sp, #108]	; 0x6c
  402d9e:	2a01      	cmp	r2, #1
  402da0:	4413      	add	r3, r2
  402da2:	930e      	str	r3, [sp, #56]	; 0x38
  402da4:	f340 8119 	ble.w	402fda <_svfprintf_r+0x13b6>
  402da8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402daa:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402dac:	4413      	add	r3, r2
  402dae:	930e      	str	r3, [sp, #56]	; 0x38
  402db0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402db4:	9308      	str	r3, [sp, #32]
  402db6:	2300      	movs	r3, #0
  402db8:	9312      	str	r3, [sp, #72]	; 0x48
  402dba:	e6cf      	b.n	402b5c <_svfprintf_r+0xf38>
  402dbc:	aa25      	add	r2, sp, #148	; 0x94
  402dbe:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dc0:	980c      	ldr	r0, [sp, #48]	; 0x30
  402dc2:	f002 f88b 	bl	404edc <__ssprint_r>
  402dc6:	2800      	cmp	r0, #0
  402dc8:	f47e affe 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402dcc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dce:	46c8      	mov	r8, r9
  402dd0:	e4d7      	b.n	402782 <_svfprintf_r+0xb5e>
  402dd2:	4623      	mov	r3, r4
  402dd4:	e6a2      	b.n	402b1c <_svfprintf_r+0xef8>
  402dd6:	aa25      	add	r2, sp, #148	; 0x94
  402dd8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dda:	980c      	ldr	r0, [sp, #48]	; 0x30
  402ddc:	f002 f87e 	bl	404edc <__ssprint_r>
  402de0:	2800      	cmp	r0, #0
  402de2:	f47e aff1 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402de6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402de8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402dea:	46c8      	mov	r8, r9
  402dec:	e5ae      	b.n	40294c <_svfprintf_r+0xd28>
  402dee:	aa25      	add	r2, sp, #148	; 0x94
  402df0:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402df2:	980c      	ldr	r0, [sp, #48]	; 0x30
  402df4:	f002 f872 	bl	404edc <__ssprint_r>
  402df8:	2800      	cmp	r0, #0
  402dfa:	f47e afe5 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402dfe:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402e00:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e02:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402e04:	1a9a      	subs	r2, r3, r2
  402e06:	46c8      	mov	r8, r9
  402e08:	e5b8      	b.n	40297c <_svfprintf_r+0xd58>
  402e0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e0c:	9612      	str	r6, [sp, #72]	; 0x48
  402e0e:	2b06      	cmp	r3, #6
  402e10:	bf28      	it	cs
  402e12:	2306      	movcs	r3, #6
  402e14:	960a      	str	r6, [sp, #40]	; 0x28
  402e16:	4637      	mov	r7, r6
  402e18:	9308      	str	r3, [sp, #32]
  402e1a:	950f      	str	r5, [sp, #60]	; 0x3c
  402e1c:	f8cd b01c 	str.w	fp, [sp, #28]
  402e20:	930e      	str	r3, [sp, #56]	; 0x38
  402e22:	4e74      	ldr	r6, [pc, #464]	; (402ff4 <_svfprintf_r+0x13d0>)
  402e24:	f7ff b816 	b.w	401e54 <_svfprintf_r+0x230>
  402e28:	a823      	add	r0, sp, #140	; 0x8c
  402e2a:	a920      	add	r1, sp, #128	; 0x80
  402e2c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402e2e:	9004      	str	r0, [sp, #16]
  402e30:	9103      	str	r1, [sp, #12]
  402e32:	a81f      	add	r0, sp, #124	; 0x7c
  402e34:	2103      	movs	r1, #3
  402e36:	9002      	str	r0, [sp, #8]
  402e38:	9a08      	ldr	r2, [sp, #32]
  402e3a:	9501      	str	r5, [sp, #4]
  402e3c:	463b      	mov	r3, r7
  402e3e:	9100      	str	r1, [sp, #0]
  402e40:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e42:	f000 f9c1 	bl	4031c8 <_dtoa_r>
  402e46:	4606      	mov	r6, r0
  402e48:	1944      	adds	r4, r0, r5
  402e4a:	e72b      	b.n	402ca4 <_svfprintf_r+0x1080>
  402e4c:	2306      	movs	r3, #6
  402e4e:	930a      	str	r3, [sp, #40]	; 0x28
  402e50:	e61d      	b.n	402a8e <_svfprintf_r+0xe6a>
  402e52:	272d      	movs	r7, #45	; 0x2d
  402e54:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402e58:	f7ff bacd 	b.w	4023f6 <_svfprintf_r+0x7d2>
  402e5c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402e5e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402e60:	4413      	add	r3, r2
  402e62:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402e64:	930e      	str	r3, [sp, #56]	; 0x38
  402e66:	2a00      	cmp	r2, #0
  402e68:	f340 80b0 	ble.w	402fcc <_svfprintf_r+0x13a8>
  402e6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402e70:	9308      	str	r3, [sp, #32]
  402e72:	2367      	movs	r3, #103	; 0x67
  402e74:	9311      	str	r3, [sp, #68]	; 0x44
  402e76:	e671      	b.n	402b5c <_svfprintf_r+0xf38>
  402e78:	2b00      	cmp	r3, #0
  402e7a:	f340 80c3 	ble.w	403004 <_svfprintf_r+0x13e0>
  402e7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402e80:	2a00      	cmp	r2, #0
  402e82:	f040 8099 	bne.w	402fb8 <_svfprintf_r+0x1394>
  402e86:	f01b 0f01 	tst.w	fp, #1
  402e8a:	f040 8095 	bne.w	402fb8 <_svfprintf_r+0x1394>
  402e8e:	9308      	str	r3, [sp, #32]
  402e90:	930e      	str	r3, [sp, #56]	; 0x38
  402e92:	e663      	b.n	402b5c <_svfprintf_r+0xf38>
  402e94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402e96:	9308      	str	r3, [sp, #32]
  402e98:	930e      	str	r3, [sp, #56]	; 0x38
  402e9a:	900a      	str	r0, [sp, #40]	; 0x28
  402e9c:	950f      	str	r5, [sp, #60]	; 0x3c
  402e9e:	f8cd b01c 	str.w	fp, [sp, #28]
  402ea2:	9012      	str	r0, [sp, #72]	; 0x48
  402ea4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402ea8:	f7fe bfd4 	b.w	401e54 <_svfprintf_r+0x230>
  402eac:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402eae:	2b47      	cmp	r3, #71	; 0x47
  402eb0:	f47f ae20 	bne.w	402af4 <_svfprintf_r+0xed0>
  402eb4:	f01b 0f01 	tst.w	fp, #1
  402eb8:	f47f aeee 	bne.w	402c98 <_svfprintf_r+0x1074>
  402ebc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402ebe:	1b9b      	subs	r3, r3, r6
  402ec0:	9313      	str	r3, [sp, #76]	; 0x4c
  402ec2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402ec4:	2b47      	cmp	r3, #71	; 0x47
  402ec6:	f43f af18 	beq.w	402cfa <_svfprintf_r+0x10d6>
  402eca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402ecc:	9312      	str	r3, [sp, #72]	; 0x48
  402ece:	e721      	b.n	402d14 <_svfprintf_r+0x10f0>
  402ed0:	424f      	negs	r7, r1
  402ed2:	3110      	adds	r1, #16
  402ed4:	4d48      	ldr	r5, [pc, #288]	; (402ff8 <_svfprintf_r+0x13d4>)
  402ed6:	da2f      	bge.n	402f38 <_svfprintf_r+0x1314>
  402ed8:	2410      	movs	r4, #16
  402eda:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402ede:	e004      	b.n	402eea <_svfprintf_r+0x12c6>
  402ee0:	f108 0808 	add.w	r8, r8, #8
  402ee4:	3f10      	subs	r7, #16
  402ee6:	2f10      	cmp	r7, #16
  402ee8:	dd26      	ble.n	402f38 <_svfprintf_r+0x1314>
  402eea:	3301      	adds	r3, #1
  402eec:	3210      	adds	r2, #16
  402eee:	2b07      	cmp	r3, #7
  402ef0:	9227      	str	r2, [sp, #156]	; 0x9c
  402ef2:	9326      	str	r3, [sp, #152]	; 0x98
  402ef4:	f8c8 5000 	str.w	r5, [r8]
  402ef8:	f8c8 4004 	str.w	r4, [r8, #4]
  402efc:	ddf0      	ble.n	402ee0 <_svfprintf_r+0x12bc>
  402efe:	aa25      	add	r2, sp, #148	; 0x94
  402f00:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f02:	4658      	mov	r0, fp
  402f04:	f001 ffea 	bl	404edc <__ssprint_r>
  402f08:	2800      	cmp	r0, #0
  402f0a:	f47e af5d 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402f0e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402f10:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f12:	46c8      	mov	r8, r9
  402f14:	e7e6      	b.n	402ee4 <_svfprintf_r+0x12c0>
  402f16:	aa25      	add	r2, sp, #148	; 0x94
  402f18:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f1a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f1c:	f001 ffde 	bl	404edc <__ssprint_r>
  402f20:	2800      	cmp	r0, #0
  402f22:	f47e af51 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402f26:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402f28:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402f2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f2c:	46c8      	mov	r8, r9
  402f2e:	e667      	b.n	402c00 <_svfprintf_r+0xfdc>
  402f30:	2000      	movs	r0, #0
  402f32:	900a      	str	r0, [sp, #40]	; 0x28
  402f34:	f7fe bed0 	b.w	401cd8 <_svfprintf_r+0xb4>
  402f38:	3301      	adds	r3, #1
  402f3a:	443a      	add	r2, r7
  402f3c:	2b07      	cmp	r3, #7
  402f3e:	e888 00a0 	stmia.w	r8, {r5, r7}
  402f42:	9227      	str	r2, [sp, #156]	; 0x9c
  402f44:	9326      	str	r3, [sp, #152]	; 0x98
  402f46:	f108 0808 	add.w	r8, r8, #8
  402f4a:	f77f ae5c 	ble.w	402c06 <_svfprintf_r+0xfe2>
  402f4e:	aa25      	add	r2, sp, #148	; 0x94
  402f50:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402f52:	980c      	ldr	r0, [sp, #48]	; 0x30
  402f54:	f001 ffc2 	bl	404edc <__ssprint_r>
  402f58:	2800      	cmp	r0, #0
  402f5a:	f47e af35 	bne.w	401dc8 <_svfprintf_r+0x1a4>
  402f5e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402f60:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402f62:	46c8      	mov	r8, r9
  402f64:	e64f      	b.n	402c06 <_svfprintf_r+0xfe2>
  402f66:	3330      	adds	r3, #48	; 0x30
  402f68:	2230      	movs	r2, #48	; 0x30
  402f6a:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  402f6e:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  402f72:	ab22      	add	r3, sp, #136	; 0x88
  402f74:	e70f      	b.n	402d96 <_svfprintf_r+0x1172>
  402f76:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402f78:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402f7a:	4413      	add	r3, r2
  402f7c:	930e      	str	r3, [sp, #56]	; 0x38
  402f7e:	e775      	b.n	402e6c <_svfprintf_r+0x1248>
  402f80:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402f82:	e5cb      	b.n	402b1c <_svfprintf_r+0xef8>
  402f84:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402f86:	4e1d      	ldr	r6, [pc, #116]	; (402ffc <_svfprintf_r+0x13d8>)
  402f88:	2b00      	cmp	r3, #0
  402f8a:	bfb6      	itet	lt
  402f8c:	272d      	movlt	r7, #45	; 0x2d
  402f8e:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  402f92:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  402f96:	4b1a      	ldr	r3, [pc, #104]	; (403000 <_svfprintf_r+0x13dc>)
  402f98:	f7ff ba2f 	b.w	4023fa <_svfprintf_r+0x7d6>
  402f9c:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402f9e:	9808      	ldr	r0, [sp, #32]
  402fa0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402fa2:	4639      	mov	r1, r7
  402fa4:	f003 f82e 	bl	406004 <__aeabi_dcmpeq>
  402fa8:	2800      	cmp	r0, #0
  402faa:	f47f ae7f 	bne.w	402cac <_svfprintf_r+0x1088>
  402fae:	f1c5 0501 	rsb	r5, r5, #1
  402fb2:	951f      	str	r5, [sp, #124]	; 0x7c
  402fb4:	442c      	add	r4, r5
  402fb6:	e59e      	b.n	402af6 <_svfprintf_r+0xed2>
  402fb8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402fba:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402fbc:	4413      	add	r3, r2
  402fbe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402fc0:	441a      	add	r2, r3
  402fc2:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402fc6:	920e      	str	r2, [sp, #56]	; 0x38
  402fc8:	9308      	str	r3, [sp, #32]
  402fca:	e5c7      	b.n	402b5c <_svfprintf_r+0xf38>
  402fcc:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402fce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402fd0:	f1c3 0301 	rsb	r3, r3, #1
  402fd4:	441a      	add	r2, r3
  402fd6:	4613      	mov	r3, r2
  402fd8:	e7d0      	b.n	402f7c <_svfprintf_r+0x1358>
  402fda:	f01b 0301 	ands.w	r3, fp, #1
  402fde:	9312      	str	r3, [sp, #72]	; 0x48
  402fe0:	f47f aee2 	bne.w	402da8 <_svfprintf_r+0x1184>
  402fe4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402fe6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402fea:	9308      	str	r3, [sp, #32]
  402fec:	e5b6      	b.n	402b5c <_svfprintf_r+0xf38>
  402fee:	bf00      	nop
  402ff0:	66666667 	.word	0x66666667
  402ff4:	00406e8c 	.word	0x00406e8c
  402ff8:	00406ea8 	.word	0x00406ea8
  402ffc:	00406e60 	.word	0x00406e60
  403000:	00406e5c 	.word	0x00406e5c
  403004:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403006:	b913      	cbnz	r3, 40300e <_svfprintf_r+0x13ea>
  403008:	f01b 0f01 	tst.w	fp, #1
  40300c:	d002      	beq.n	403014 <_svfprintf_r+0x13f0>
  40300e:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403010:	3301      	adds	r3, #1
  403012:	e7d4      	b.n	402fbe <_svfprintf_r+0x139a>
  403014:	2301      	movs	r3, #1
  403016:	e73a      	b.n	402e8e <_svfprintf_r+0x126a>
  403018:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40301a:	f89a 3001 	ldrb.w	r3, [sl, #1]
  40301e:	6828      	ldr	r0, [r5, #0]
  403020:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  403024:	900a      	str	r0, [sp, #40]	; 0x28
  403026:	4628      	mov	r0, r5
  403028:	3004      	adds	r0, #4
  40302a:	46a2      	mov	sl, r4
  40302c:	900f      	str	r0, [sp, #60]	; 0x3c
  40302e:	f7fe be51 	b.w	401cd4 <_svfprintf_r+0xb0>
  403032:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403036:	f7ff b867 	b.w	402108 <_svfprintf_r+0x4e4>
  40303a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40303e:	f7ff ba15 	b.w	40246c <_svfprintf_r+0x848>
  403042:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  403046:	e6a6      	b.n	402d96 <_svfprintf_r+0x1172>
  403048:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40304c:	f7ff b8eb 	b.w	402226 <_svfprintf_r+0x602>
  403050:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403052:	230c      	movs	r3, #12
  403054:	6013      	str	r3, [r2, #0]
  403056:	f04f 33ff 	mov.w	r3, #4294967295
  40305a:	9309      	str	r3, [sp, #36]	; 0x24
  40305c:	f7fe bebd 	b.w	401dda <_svfprintf_r+0x1b6>
  403060:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403064:	f7ff b99a 	b.w	40239c <_svfprintf_r+0x778>
  403068:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40306c:	f7ff b976 	b.w	40235c <_svfprintf_r+0x738>
  403070:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  403074:	f7ff b959 	b.w	40232a <_svfprintf_r+0x706>
  403078:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  40307c:	f7ff b912 	b.w	4022a4 <_svfprintf_r+0x680>

00403080 <register_fini>:
  403080:	4b02      	ldr	r3, [pc, #8]	; (40308c <register_fini+0xc>)
  403082:	b113      	cbz	r3, 40308a <register_fini+0xa>
  403084:	4802      	ldr	r0, [pc, #8]	; (403090 <register_fini+0x10>)
  403086:	f000 b805 	b.w	403094 <atexit>
  40308a:	4770      	bx	lr
  40308c:	00000000 	.word	0x00000000
  403090:	0040401d 	.word	0x0040401d

00403094 <atexit>:
  403094:	2300      	movs	r3, #0
  403096:	4601      	mov	r1, r0
  403098:	461a      	mov	r2, r3
  40309a:	4618      	mov	r0, r3
  40309c:	f001 bf9c 	b.w	404fd8 <__register_exitproc>

004030a0 <quorem>:
  4030a0:	6902      	ldr	r2, [r0, #16]
  4030a2:	690b      	ldr	r3, [r1, #16]
  4030a4:	4293      	cmp	r3, r2
  4030a6:	f300 808d 	bgt.w	4031c4 <quorem+0x124>
  4030aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4030ae:	f103 38ff 	add.w	r8, r3, #4294967295
  4030b2:	f101 0714 	add.w	r7, r1, #20
  4030b6:	f100 0b14 	add.w	fp, r0, #20
  4030ba:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  4030be:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  4030c2:	ea4f 0488 	mov.w	r4, r8, lsl #2
  4030c6:	b083      	sub	sp, #12
  4030c8:	3201      	adds	r2, #1
  4030ca:	fbb3 f9f2 	udiv	r9, r3, r2
  4030ce:	eb0b 0304 	add.w	r3, fp, r4
  4030d2:	9400      	str	r4, [sp, #0]
  4030d4:	eb07 0a04 	add.w	sl, r7, r4
  4030d8:	9301      	str	r3, [sp, #4]
  4030da:	f1b9 0f00 	cmp.w	r9, #0
  4030de:	d039      	beq.n	403154 <quorem+0xb4>
  4030e0:	2500      	movs	r5, #0
  4030e2:	462e      	mov	r6, r5
  4030e4:	46bc      	mov	ip, r7
  4030e6:	46de      	mov	lr, fp
  4030e8:	f85c 4b04 	ldr.w	r4, [ip], #4
  4030ec:	f8de 3000 	ldr.w	r3, [lr]
  4030f0:	b2a2      	uxth	r2, r4
  4030f2:	fb09 5502 	mla	r5, r9, r2, r5
  4030f6:	0c22      	lsrs	r2, r4, #16
  4030f8:	0c2c      	lsrs	r4, r5, #16
  4030fa:	fb09 4202 	mla	r2, r9, r2, r4
  4030fe:	b2ad      	uxth	r5, r5
  403100:	1b75      	subs	r5, r6, r5
  403102:	b296      	uxth	r6, r2
  403104:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  403108:	fa15 f383 	uxtah	r3, r5, r3
  40310c:	eb06 4623 	add.w	r6, r6, r3, asr #16
  403110:	b29b      	uxth	r3, r3
  403112:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  403116:	45e2      	cmp	sl, ip
  403118:	ea4f 4512 	mov.w	r5, r2, lsr #16
  40311c:	f84e 3b04 	str.w	r3, [lr], #4
  403120:	ea4f 4626 	mov.w	r6, r6, asr #16
  403124:	d2e0      	bcs.n	4030e8 <quorem+0x48>
  403126:	9b00      	ldr	r3, [sp, #0]
  403128:	f85b 3003 	ldr.w	r3, [fp, r3]
  40312c:	b993      	cbnz	r3, 403154 <quorem+0xb4>
  40312e:	9c01      	ldr	r4, [sp, #4]
  403130:	1f23      	subs	r3, r4, #4
  403132:	459b      	cmp	fp, r3
  403134:	d20c      	bcs.n	403150 <quorem+0xb0>
  403136:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40313a:	b94b      	cbnz	r3, 403150 <quorem+0xb0>
  40313c:	f1a4 0308 	sub.w	r3, r4, #8
  403140:	e002      	b.n	403148 <quorem+0xa8>
  403142:	681a      	ldr	r2, [r3, #0]
  403144:	3b04      	subs	r3, #4
  403146:	b91a      	cbnz	r2, 403150 <quorem+0xb0>
  403148:	459b      	cmp	fp, r3
  40314a:	f108 38ff 	add.w	r8, r8, #4294967295
  40314e:	d3f8      	bcc.n	403142 <quorem+0xa2>
  403150:	f8c0 8010 	str.w	r8, [r0, #16]
  403154:	4604      	mov	r4, r0
  403156:	f001 fd37 	bl	404bc8 <__mcmp>
  40315a:	2800      	cmp	r0, #0
  40315c:	db2e      	blt.n	4031bc <quorem+0x11c>
  40315e:	f109 0901 	add.w	r9, r9, #1
  403162:	465d      	mov	r5, fp
  403164:	2300      	movs	r3, #0
  403166:	f857 1b04 	ldr.w	r1, [r7], #4
  40316a:	6828      	ldr	r0, [r5, #0]
  40316c:	b28a      	uxth	r2, r1
  40316e:	1a9a      	subs	r2, r3, r2
  403170:	0c0b      	lsrs	r3, r1, #16
  403172:	fa12 f280 	uxtah	r2, r2, r0
  403176:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40317a:	eb03 4322 	add.w	r3, r3, r2, asr #16
  40317e:	b292      	uxth	r2, r2
  403180:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403184:	45ba      	cmp	sl, r7
  403186:	f845 2b04 	str.w	r2, [r5], #4
  40318a:	ea4f 4323 	mov.w	r3, r3, asr #16
  40318e:	d2ea      	bcs.n	403166 <quorem+0xc6>
  403190:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403194:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  403198:	b982      	cbnz	r2, 4031bc <quorem+0x11c>
  40319a:	1f1a      	subs	r2, r3, #4
  40319c:	4593      	cmp	fp, r2
  40319e:	d20b      	bcs.n	4031b8 <quorem+0x118>
  4031a0:	f853 2c04 	ldr.w	r2, [r3, #-4]
  4031a4:	b942      	cbnz	r2, 4031b8 <quorem+0x118>
  4031a6:	3b08      	subs	r3, #8
  4031a8:	e002      	b.n	4031b0 <quorem+0x110>
  4031aa:	681a      	ldr	r2, [r3, #0]
  4031ac:	3b04      	subs	r3, #4
  4031ae:	b91a      	cbnz	r2, 4031b8 <quorem+0x118>
  4031b0:	459b      	cmp	fp, r3
  4031b2:	f108 38ff 	add.w	r8, r8, #4294967295
  4031b6:	d3f8      	bcc.n	4031aa <quorem+0x10a>
  4031b8:	f8c4 8010 	str.w	r8, [r4, #16]
  4031bc:	4648      	mov	r0, r9
  4031be:	b003      	add	sp, #12
  4031c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4031c4:	2000      	movs	r0, #0
  4031c6:	4770      	bx	lr

004031c8 <_dtoa_r>:
  4031c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4031cc:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4031ce:	b09b      	sub	sp, #108	; 0x6c
  4031d0:	4604      	mov	r4, r0
  4031d2:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4031d4:	4692      	mov	sl, r2
  4031d6:	469b      	mov	fp, r3
  4031d8:	b141      	cbz	r1, 4031ec <_dtoa_r+0x24>
  4031da:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4031dc:	604a      	str	r2, [r1, #4]
  4031de:	2301      	movs	r3, #1
  4031e0:	4093      	lsls	r3, r2
  4031e2:	608b      	str	r3, [r1, #8]
  4031e4:	f001 fb18 	bl	404818 <_Bfree>
  4031e8:	2300      	movs	r3, #0
  4031ea:	6423      	str	r3, [r4, #64]	; 0x40
  4031ec:	f1bb 0f00 	cmp.w	fp, #0
  4031f0:	465d      	mov	r5, fp
  4031f2:	db35      	blt.n	403260 <_dtoa_r+0x98>
  4031f4:	2300      	movs	r3, #0
  4031f6:	6033      	str	r3, [r6, #0]
  4031f8:	4b9d      	ldr	r3, [pc, #628]	; (403470 <_dtoa_r+0x2a8>)
  4031fa:	43ab      	bics	r3, r5
  4031fc:	d015      	beq.n	40322a <_dtoa_r+0x62>
  4031fe:	4650      	mov	r0, sl
  403200:	4659      	mov	r1, fp
  403202:	2200      	movs	r2, #0
  403204:	2300      	movs	r3, #0
  403206:	f002 fefd 	bl	406004 <__aeabi_dcmpeq>
  40320a:	4680      	mov	r8, r0
  40320c:	2800      	cmp	r0, #0
  40320e:	d02d      	beq.n	40326c <_dtoa_r+0xa4>
  403210:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403212:	2301      	movs	r3, #1
  403214:	6013      	str	r3, [r2, #0]
  403216:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403218:	2b00      	cmp	r3, #0
  40321a:	f000 80bd 	beq.w	403398 <_dtoa_r+0x1d0>
  40321e:	4895      	ldr	r0, [pc, #596]	; (403474 <_dtoa_r+0x2ac>)
  403220:	6018      	str	r0, [r3, #0]
  403222:	3801      	subs	r0, #1
  403224:	b01b      	add	sp, #108	; 0x6c
  403226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40322a:	9a26      	ldr	r2, [sp, #152]	; 0x98
  40322c:	f242 730f 	movw	r3, #9999	; 0x270f
  403230:	6013      	str	r3, [r2, #0]
  403232:	f1ba 0f00 	cmp.w	sl, #0
  403236:	d10d      	bne.n	403254 <_dtoa_r+0x8c>
  403238:	f3c5 0513 	ubfx	r5, r5, #0, #20
  40323c:	b955      	cbnz	r5, 403254 <_dtoa_r+0x8c>
  40323e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403240:	488d      	ldr	r0, [pc, #564]	; (403478 <_dtoa_r+0x2b0>)
  403242:	2b00      	cmp	r3, #0
  403244:	d0ee      	beq.n	403224 <_dtoa_r+0x5c>
  403246:	f100 0308 	add.w	r3, r0, #8
  40324a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  40324c:	6013      	str	r3, [r2, #0]
  40324e:	b01b      	add	sp, #108	; 0x6c
  403250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403254:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403256:	4889      	ldr	r0, [pc, #548]	; (40347c <_dtoa_r+0x2b4>)
  403258:	2b00      	cmp	r3, #0
  40325a:	d0e3      	beq.n	403224 <_dtoa_r+0x5c>
  40325c:	1cc3      	adds	r3, r0, #3
  40325e:	e7f4      	b.n	40324a <_dtoa_r+0x82>
  403260:	2301      	movs	r3, #1
  403262:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  403266:	6033      	str	r3, [r6, #0]
  403268:	46ab      	mov	fp, r5
  40326a:	e7c5      	b.n	4031f8 <_dtoa_r+0x30>
  40326c:	aa18      	add	r2, sp, #96	; 0x60
  40326e:	ab19      	add	r3, sp, #100	; 0x64
  403270:	9201      	str	r2, [sp, #4]
  403272:	9300      	str	r3, [sp, #0]
  403274:	4652      	mov	r2, sl
  403276:	465b      	mov	r3, fp
  403278:	4620      	mov	r0, r4
  40327a:	f001 fd45 	bl	404d08 <__d2b>
  40327e:	0d2b      	lsrs	r3, r5, #20
  403280:	4681      	mov	r9, r0
  403282:	d071      	beq.n	403368 <_dtoa_r+0x1a0>
  403284:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403288:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  40328c:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40328e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  403292:	4650      	mov	r0, sl
  403294:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403298:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  40329c:	2200      	movs	r2, #0
  40329e:	4b78      	ldr	r3, [pc, #480]	; (403480 <_dtoa_r+0x2b8>)
  4032a0:	f002 fa94 	bl	4057cc <__aeabi_dsub>
  4032a4:	a36c      	add	r3, pc, #432	; (adr r3, 403458 <_dtoa_r+0x290>)
  4032a6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4032aa:	f002 fc43 	bl	405b34 <__aeabi_dmul>
  4032ae:	a36c      	add	r3, pc, #432	; (adr r3, 403460 <_dtoa_r+0x298>)
  4032b0:	e9d3 2300 	ldrd	r2, r3, [r3]
  4032b4:	f002 fa8c 	bl	4057d0 <__adddf3>
  4032b8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4032bc:	4630      	mov	r0, r6
  4032be:	f002 fbd3 	bl	405a68 <__aeabi_i2d>
  4032c2:	a369      	add	r3, pc, #420	; (adr r3, 403468 <_dtoa_r+0x2a0>)
  4032c4:	e9d3 2300 	ldrd	r2, r3, [r3]
  4032c8:	f002 fc34 	bl	405b34 <__aeabi_dmul>
  4032cc:	4602      	mov	r2, r0
  4032ce:	460b      	mov	r3, r1
  4032d0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4032d4:	f002 fa7c 	bl	4057d0 <__adddf3>
  4032d8:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4032dc:	f002 feda 	bl	406094 <__aeabi_d2iz>
  4032e0:	2200      	movs	r2, #0
  4032e2:	9002      	str	r0, [sp, #8]
  4032e4:	2300      	movs	r3, #0
  4032e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4032ea:	f002 fe95 	bl	406018 <__aeabi_dcmplt>
  4032ee:	2800      	cmp	r0, #0
  4032f0:	f040 8173 	bne.w	4035da <_dtoa_r+0x412>
  4032f4:	9d02      	ldr	r5, [sp, #8]
  4032f6:	2d16      	cmp	r5, #22
  4032f8:	f200 815d 	bhi.w	4035b6 <_dtoa_r+0x3ee>
  4032fc:	4b61      	ldr	r3, [pc, #388]	; (403484 <_dtoa_r+0x2bc>)
  4032fe:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  403302:	e9d3 0100 	ldrd	r0, r1, [r3]
  403306:	4652      	mov	r2, sl
  403308:	465b      	mov	r3, fp
  40330a:	f002 fea3 	bl	406054 <__aeabi_dcmpgt>
  40330e:	2800      	cmp	r0, #0
  403310:	f000 81c5 	beq.w	40369e <_dtoa_r+0x4d6>
  403314:	1e6b      	subs	r3, r5, #1
  403316:	9302      	str	r3, [sp, #8]
  403318:	2300      	movs	r3, #0
  40331a:	930e      	str	r3, [sp, #56]	; 0x38
  40331c:	1bbf      	subs	r7, r7, r6
  40331e:	1e7b      	subs	r3, r7, #1
  403320:	9306      	str	r3, [sp, #24]
  403322:	f100 8154 	bmi.w	4035ce <_dtoa_r+0x406>
  403326:	2300      	movs	r3, #0
  403328:	9308      	str	r3, [sp, #32]
  40332a:	9b02      	ldr	r3, [sp, #8]
  40332c:	2b00      	cmp	r3, #0
  40332e:	f2c0 8145 	blt.w	4035bc <_dtoa_r+0x3f4>
  403332:	9a06      	ldr	r2, [sp, #24]
  403334:	930d      	str	r3, [sp, #52]	; 0x34
  403336:	4611      	mov	r1, r2
  403338:	4419      	add	r1, r3
  40333a:	2300      	movs	r3, #0
  40333c:	9106      	str	r1, [sp, #24]
  40333e:	930c      	str	r3, [sp, #48]	; 0x30
  403340:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403342:	2b09      	cmp	r3, #9
  403344:	d82a      	bhi.n	40339c <_dtoa_r+0x1d4>
  403346:	2b05      	cmp	r3, #5
  403348:	f340 865b 	ble.w	404002 <_dtoa_r+0xe3a>
  40334c:	3b04      	subs	r3, #4
  40334e:	9324      	str	r3, [sp, #144]	; 0x90
  403350:	2500      	movs	r5, #0
  403352:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403354:	3b02      	subs	r3, #2
  403356:	2b03      	cmp	r3, #3
  403358:	f200 8642 	bhi.w	403fe0 <_dtoa_r+0xe18>
  40335c:	e8df f013 	tbh	[pc, r3, lsl #1]
  403360:	02c903d4 	.word	0x02c903d4
  403364:	046103df 	.word	0x046103df
  403368:	9f18      	ldr	r7, [sp, #96]	; 0x60
  40336a:	9e19      	ldr	r6, [sp, #100]	; 0x64
  40336c:	443e      	add	r6, r7
  40336e:	f206 4332 	addw	r3, r6, #1074	; 0x432
  403372:	2b20      	cmp	r3, #32
  403374:	f340 818e 	ble.w	403694 <_dtoa_r+0x4cc>
  403378:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  40337c:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403380:	409d      	lsls	r5, r3
  403382:	fa2a f000 	lsr.w	r0, sl, r0
  403386:	4328      	orrs	r0, r5
  403388:	f002 fb5e 	bl	405a48 <__aeabi_ui2d>
  40338c:	2301      	movs	r3, #1
  40338e:	3e01      	subs	r6, #1
  403390:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  403394:	9314      	str	r3, [sp, #80]	; 0x50
  403396:	e781      	b.n	40329c <_dtoa_r+0xd4>
  403398:	483b      	ldr	r0, [pc, #236]	; (403488 <_dtoa_r+0x2c0>)
  40339a:	e743      	b.n	403224 <_dtoa_r+0x5c>
  40339c:	2100      	movs	r1, #0
  40339e:	6461      	str	r1, [r4, #68]	; 0x44
  4033a0:	4620      	mov	r0, r4
  4033a2:	9125      	str	r1, [sp, #148]	; 0x94
  4033a4:	f001 fa12 	bl	4047cc <_Balloc>
  4033a8:	f04f 33ff 	mov.w	r3, #4294967295
  4033ac:	930a      	str	r3, [sp, #40]	; 0x28
  4033ae:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4033b0:	930f      	str	r3, [sp, #60]	; 0x3c
  4033b2:	2301      	movs	r3, #1
  4033b4:	9004      	str	r0, [sp, #16]
  4033b6:	6420      	str	r0, [r4, #64]	; 0x40
  4033b8:	9224      	str	r2, [sp, #144]	; 0x90
  4033ba:	930b      	str	r3, [sp, #44]	; 0x2c
  4033bc:	9b19      	ldr	r3, [sp, #100]	; 0x64
  4033be:	2b00      	cmp	r3, #0
  4033c0:	f2c0 80d9 	blt.w	403576 <_dtoa_r+0x3ae>
  4033c4:	9a02      	ldr	r2, [sp, #8]
  4033c6:	2a0e      	cmp	r2, #14
  4033c8:	f300 80d5 	bgt.w	403576 <_dtoa_r+0x3ae>
  4033cc:	4b2d      	ldr	r3, [pc, #180]	; (403484 <_dtoa_r+0x2bc>)
  4033ce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4033d2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4033d6:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4033da:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4033dc:	2b00      	cmp	r3, #0
  4033de:	f2c0 83ba 	blt.w	403b56 <_dtoa_r+0x98e>
  4033e2:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4033e6:	4650      	mov	r0, sl
  4033e8:	462a      	mov	r2, r5
  4033ea:	4633      	mov	r3, r6
  4033ec:	4659      	mov	r1, fp
  4033ee:	f002 fccb 	bl	405d88 <__aeabi_ddiv>
  4033f2:	f002 fe4f 	bl	406094 <__aeabi_d2iz>
  4033f6:	4680      	mov	r8, r0
  4033f8:	f002 fb36 	bl	405a68 <__aeabi_i2d>
  4033fc:	462a      	mov	r2, r5
  4033fe:	4633      	mov	r3, r6
  403400:	f002 fb98 	bl	405b34 <__aeabi_dmul>
  403404:	460b      	mov	r3, r1
  403406:	4602      	mov	r2, r0
  403408:	4659      	mov	r1, fp
  40340a:	4650      	mov	r0, sl
  40340c:	f002 f9de 	bl	4057cc <__aeabi_dsub>
  403410:	9d04      	ldr	r5, [sp, #16]
  403412:	f108 0330 	add.w	r3, r8, #48	; 0x30
  403416:	702b      	strb	r3, [r5, #0]
  403418:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40341a:	2b01      	cmp	r3, #1
  40341c:	4606      	mov	r6, r0
  40341e:	460f      	mov	r7, r1
  403420:	f105 0501 	add.w	r5, r5, #1
  403424:	d068      	beq.n	4034f8 <_dtoa_r+0x330>
  403426:	2200      	movs	r2, #0
  403428:	4b18      	ldr	r3, [pc, #96]	; (40348c <_dtoa_r+0x2c4>)
  40342a:	f002 fb83 	bl	405b34 <__aeabi_dmul>
  40342e:	2200      	movs	r2, #0
  403430:	2300      	movs	r3, #0
  403432:	4606      	mov	r6, r0
  403434:	460f      	mov	r7, r1
  403436:	f002 fde5 	bl	406004 <__aeabi_dcmpeq>
  40343a:	2800      	cmp	r0, #0
  40343c:	f040 8088 	bne.w	403550 <_dtoa_r+0x388>
  403440:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  403444:	f04f 0a00 	mov.w	sl, #0
  403448:	f8df b040 	ldr.w	fp, [pc, #64]	; 40348c <_dtoa_r+0x2c4>
  40344c:	940c      	str	r4, [sp, #48]	; 0x30
  40344e:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  403452:	e028      	b.n	4034a6 <_dtoa_r+0x2de>
  403454:	f3af 8000 	nop.w
  403458:	636f4361 	.word	0x636f4361
  40345c:	3fd287a7 	.word	0x3fd287a7
  403460:	8b60c8b3 	.word	0x8b60c8b3
  403464:	3fc68a28 	.word	0x3fc68a28
  403468:	509f79fb 	.word	0x509f79fb
  40346c:	3fd34413 	.word	0x3fd34413
  403470:	7ff00000 	.word	0x7ff00000
  403474:	00406e95 	.word	0x00406e95
  403478:	00406eb8 	.word	0x00406eb8
  40347c:	00406ec4 	.word	0x00406ec4
  403480:	3ff80000 	.word	0x3ff80000
  403484:	00406ef0 	.word	0x00406ef0
  403488:	00406e94 	.word	0x00406e94
  40348c:	40240000 	.word	0x40240000
  403490:	f002 fb50 	bl	405b34 <__aeabi_dmul>
  403494:	2200      	movs	r2, #0
  403496:	2300      	movs	r3, #0
  403498:	4606      	mov	r6, r0
  40349a:	460f      	mov	r7, r1
  40349c:	f002 fdb2 	bl	406004 <__aeabi_dcmpeq>
  4034a0:	2800      	cmp	r0, #0
  4034a2:	f040 83c1 	bne.w	403c28 <_dtoa_r+0xa60>
  4034a6:	4642      	mov	r2, r8
  4034a8:	464b      	mov	r3, r9
  4034aa:	4630      	mov	r0, r6
  4034ac:	4639      	mov	r1, r7
  4034ae:	f002 fc6b 	bl	405d88 <__aeabi_ddiv>
  4034b2:	f002 fdef 	bl	406094 <__aeabi_d2iz>
  4034b6:	4604      	mov	r4, r0
  4034b8:	f002 fad6 	bl	405a68 <__aeabi_i2d>
  4034bc:	4642      	mov	r2, r8
  4034be:	464b      	mov	r3, r9
  4034c0:	f002 fb38 	bl	405b34 <__aeabi_dmul>
  4034c4:	4602      	mov	r2, r0
  4034c6:	460b      	mov	r3, r1
  4034c8:	4630      	mov	r0, r6
  4034ca:	4639      	mov	r1, r7
  4034cc:	f002 f97e 	bl	4057cc <__aeabi_dsub>
  4034d0:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4034d4:	9e04      	ldr	r6, [sp, #16]
  4034d6:	f805 eb01 	strb.w	lr, [r5], #1
  4034da:	eba5 0e06 	sub.w	lr, r5, r6
  4034de:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4034e0:	45b6      	cmp	lr, r6
  4034e2:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4034e6:	4652      	mov	r2, sl
  4034e8:	465b      	mov	r3, fp
  4034ea:	d1d1      	bne.n	403490 <_dtoa_r+0x2c8>
  4034ec:	46a0      	mov	r8, r4
  4034ee:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4034f2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4034f4:	4606      	mov	r6, r0
  4034f6:	460f      	mov	r7, r1
  4034f8:	4632      	mov	r2, r6
  4034fa:	463b      	mov	r3, r7
  4034fc:	4630      	mov	r0, r6
  4034fe:	4639      	mov	r1, r7
  403500:	f002 f966 	bl	4057d0 <__adddf3>
  403504:	4606      	mov	r6, r0
  403506:	460f      	mov	r7, r1
  403508:	4602      	mov	r2, r0
  40350a:	460b      	mov	r3, r1
  40350c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403510:	f002 fd82 	bl	406018 <__aeabi_dcmplt>
  403514:	b948      	cbnz	r0, 40352a <_dtoa_r+0x362>
  403516:	4632      	mov	r2, r6
  403518:	463b      	mov	r3, r7
  40351a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  40351e:	f002 fd71 	bl	406004 <__aeabi_dcmpeq>
  403522:	b1a8      	cbz	r0, 403550 <_dtoa_r+0x388>
  403524:	f018 0f01 	tst.w	r8, #1
  403528:	d012      	beq.n	403550 <_dtoa_r+0x388>
  40352a:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  40352e:	9a04      	ldr	r2, [sp, #16]
  403530:	1e6b      	subs	r3, r5, #1
  403532:	e004      	b.n	40353e <_dtoa_r+0x376>
  403534:	429a      	cmp	r2, r3
  403536:	f000 8401 	beq.w	403d3c <_dtoa_r+0xb74>
  40353a:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  40353e:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  403542:	f103 0501 	add.w	r5, r3, #1
  403546:	d0f5      	beq.n	403534 <_dtoa_r+0x36c>
  403548:	f108 0801 	add.w	r8, r8, #1
  40354c:	f883 8000 	strb.w	r8, [r3]
  403550:	4649      	mov	r1, r9
  403552:	4620      	mov	r0, r4
  403554:	f001 f960 	bl	404818 <_Bfree>
  403558:	2200      	movs	r2, #0
  40355a:	9b02      	ldr	r3, [sp, #8]
  40355c:	702a      	strb	r2, [r5, #0]
  40355e:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403560:	3301      	adds	r3, #1
  403562:	6013      	str	r3, [r2, #0]
  403564:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403566:	2b00      	cmp	r3, #0
  403568:	f000 839e 	beq.w	403ca8 <_dtoa_r+0xae0>
  40356c:	9804      	ldr	r0, [sp, #16]
  40356e:	601d      	str	r5, [r3, #0]
  403570:	b01b      	add	sp, #108	; 0x6c
  403572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403576:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403578:	2a00      	cmp	r2, #0
  40357a:	d03e      	beq.n	4035fa <_dtoa_r+0x432>
  40357c:	9a24      	ldr	r2, [sp, #144]	; 0x90
  40357e:	2a01      	cmp	r2, #1
  403580:	f340 8311 	ble.w	403ba6 <_dtoa_r+0x9de>
  403584:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403586:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403588:	1e5f      	subs	r7, r3, #1
  40358a:	42ba      	cmp	r2, r7
  40358c:	f2c0 838f 	blt.w	403cae <_dtoa_r+0xae6>
  403590:	1bd7      	subs	r7, r2, r7
  403592:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403594:	2b00      	cmp	r3, #0
  403596:	f2c0 848b 	blt.w	403eb0 <_dtoa_r+0xce8>
  40359a:	9d08      	ldr	r5, [sp, #32]
  40359c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40359e:	9a08      	ldr	r2, [sp, #32]
  4035a0:	441a      	add	r2, r3
  4035a2:	9208      	str	r2, [sp, #32]
  4035a4:	9a06      	ldr	r2, [sp, #24]
  4035a6:	2101      	movs	r1, #1
  4035a8:	441a      	add	r2, r3
  4035aa:	4620      	mov	r0, r4
  4035ac:	9206      	str	r2, [sp, #24]
  4035ae:	f001 f9cd 	bl	40494c <__i2b>
  4035b2:	4606      	mov	r6, r0
  4035b4:	e024      	b.n	403600 <_dtoa_r+0x438>
  4035b6:	2301      	movs	r3, #1
  4035b8:	930e      	str	r3, [sp, #56]	; 0x38
  4035ba:	e6af      	b.n	40331c <_dtoa_r+0x154>
  4035bc:	9a08      	ldr	r2, [sp, #32]
  4035be:	9b02      	ldr	r3, [sp, #8]
  4035c0:	1ad2      	subs	r2, r2, r3
  4035c2:	425b      	negs	r3, r3
  4035c4:	930c      	str	r3, [sp, #48]	; 0x30
  4035c6:	2300      	movs	r3, #0
  4035c8:	9208      	str	r2, [sp, #32]
  4035ca:	930d      	str	r3, [sp, #52]	; 0x34
  4035cc:	e6b8      	b.n	403340 <_dtoa_r+0x178>
  4035ce:	f1c7 0301 	rsb	r3, r7, #1
  4035d2:	9308      	str	r3, [sp, #32]
  4035d4:	2300      	movs	r3, #0
  4035d6:	9306      	str	r3, [sp, #24]
  4035d8:	e6a7      	b.n	40332a <_dtoa_r+0x162>
  4035da:	9d02      	ldr	r5, [sp, #8]
  4035dc:	4628      	mov	r0, r5
  4035de:	f002 fa43 	bl	405a68 <__aeabi_i2d>
  4035e2:	4602      	mov	r2, r0
  4035e4:	460b      	mov	r3, r1
  4035e6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4035ea:	f002 fd0b 	bl	406004 <__aeabi_dcmpeq>
  4035ee:	2800      	cmp	r0, #0
  4035f0:	f47f ae80 	bne.w	4032f4 <_dtoa_r+0x12c>
  4035f4:	1e6b      	subs	r3, r5, #1
  4035f6:	9302      	str	r3, [sp, #8]
  4035f8:	e67c      	b.n	4032f4 <_dtoa_r+0x12c>
  4035fa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4035fc:	9d08      	ldr	r5, [sp, #32]
  4035fe:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  403600:	2d00      	cmp	r5, #0
  403602:	dd0c      	ble.n	40361e <_dtoa_r+0x456>
  403604:	9906      	ldr	r1, [sp, #24]
  403606:	2900      	cmp	r1, #0
  403608:	460b      	mov	r3, r1
  40360a:	dd08      	ble.n	40361e <_dtoa_r+0x456>
  40360c:	42a9      	cmp	r1, r5
  40360e:	9a08      	ldr	r2, [sp, #32]
  403610:	bfa8      	it	ge
  403612:	462b      	movge	r3, r5
  403614:	1ad2      	subs	r2, r2, r3
  403616:	1aed      	subs	r5, r5, r3
  403618:	1acb      	subs	r3, r1, r3
  40361a:	9208      	str	r2, [sp, #32]
  40361c:	9306      	str	r3, [sp, #24]
  40361e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403620:	b1d3      	cbz	r3, 403658 <_dtoa_r+0x490>
  403622:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403624:	2b00      	cmp	r3, #0
  403626:	f000 82b7 	beq.w	403b98 <_dtoa_r+0x9d0>
  40362a:	2f00      	cmp	r7, #0
  40362c:	dd10      	ble.n	403650 <_dtoa_r+0x488>
  40362e:	4631      	mov	r1, r6
  403630:	463a      	mov	r2, r7
  403632:	4620      	mov	r0, r4
  403634:	f001 fa26 	bl	404a84 <__pow5mult>
  403638:	464a      	mov	r2, r9
  40363a:	4601      	mov	r1, r0
  40363c:	4606      	mov	r6, r0
  40363e:	4620      	mov	r0, r4
  403640:	f001 f98e 	bl	404960 <__multiply>
  403644:	4649      	mov	r1, r9
  403646:	4680      	mov	r8, r0
  403648:	4620      	mov	r0, r4
  40364a:	f001 f8e5 	bl	404818 <_Bfree>
  40364e:	46c1      	mov	r9, r8
  403650:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403652:	1bda      	subs	r2, r3, r7
  403654:	f040 82a1 	bne.w	403b9a <_dtoa_r+0x9d2>
  403658:	2101      	movs	r1, #1
  40365a:	4620      	mov	r0, r4
  40365c:	f001 f976 	bl	40494c <__i2b>
  403660:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403662:	2b00      	cmp	r3, #0
  403664:	4680      	mov	r8, r0
  403666:	dd1c      	ble.n	4036a2 <_dtoa_r+0x4da>
  403668:	4601      	mov	r1, r0
  40366a:	461a      	mov	r2, r3
  40366c:	4620      	mov	r0, r4
  40366e:	f001 fa09 	bl	404a84 <__pow5mult>
  403672:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403674:	2b01      	cmp	r3, #1
  403676:	4680      	mov	r8, r0
  403678:	f340 8254 	ble.w	403b24 <_dtoa_r+0x95c>
  40367c:	2300      	movs	r3, #0
  40367e:	930c      	str	r3, [sp, #48]	; 0x30
  403680:	f8d8 3010 	ldr.w	r3, [r8, #16]
  403684:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403688:	6918      	ldr	r0, [r3, #16]
  40368a:	f001 f90f 	bl	4048ac <__hi0bits>
  40368e:	f1c0 0020 	rsb	r0, r0, #32
  403692:	e010      	b.n	4036b6 <_dtoa_r+0x4ee>
  403694:	f1c3 0520 	rsb	r5, r3, #32
  403698:	fa0a f005 	lsl.w	r0, sl, r5
  40369c:	e674      	b.n	403388 <_dtoa_r+0x1c0>
  40369e:	900e      	str	r0, [sp, #56]	; 0x38
  4036a0:	e63c      	b.n	40331c <_dtoa_r+0x154>
  4036a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4036a4:	2b01      	cmp	r3, #1
  4036a6:	f340 8287 	ble.w	403bb8 <_dtoa_r+0x9f0>
  4036aa:	2300      	movs	r3, #0
  4036ac:	930c      	str	r3, [sp, #48]	; 0x30
  4036ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4036b0:	2001      	movs	r0, #1
  4036b2:	2b00      	cmp	r3, #0
  4036b4:	d1e4      	bne.n	403680 <_dtoa_r+0x4b8>
  4036b6:	9a06      	ldr	r2, [sp, #24]
  4036b8:	4410      	add	r0, r2
  4036ba:	f010 001f 	ands.w	r0, r0, #31
  4036be:	f000 80a1 	beq.w	403804 <_dtoa_r+0x63c>
  4036c2:	f1c0 0320 	rsb	r3, r0, #32
  4036c6:	2b04      	cmp	r3, #4
  4036c8:	f340 849e 	ble.w	404008 <_dtoa_r+0xe40>
  4036cc:	9b08      	ldr	r3, [sp, #32]
  4036ce:	f1c0 001c 	rsb	r0, r0, #28
  4036d2:	4403      	add	r3, r0
  4036d4:	9308      	str	r3, [sp, #32]
  4036d6:	4613      	mov	r3, r2
  4036d8:	4403      	add	r3, r0
  4036da:	4405      	add	r5, r0
  4036dc:	9306      	str	r3, [sp, #24]
  4036de:	9b08      	ldr	r3, [sp, #32]
  4036e0:	2b00      	cmp	r3, #0
  4036e2:	dd05      	ble.n	4036f0 <_dtoa_r+0x528>
  4036e4:	4649      	mov	r1, r9
  4036e6:	461a      	mov	r2, r3
  4036e8:	4620      	mov	r0, r4
  4036ea:	f001 fa1b 	bl	404b24 <__lshift>
  4036ee:	4681      	mov	r9, r0
  4036f0:	9b06      	ldr	r3, [sp, #24]
  4036f2:	2b00      	cmp	r3, #0
  4036f4:	dd05      	ble.n	403702 <_dtoa_r+0x53a>
  4036f6:	4641      	mov	r1, r8
  4036f8:	461a      	mov	r2, r3
  4036fa:	4620      	mov	r0, r4
  4036fc:	f001 fa12 	bl	404b24 <__lshift>
  403700:	4680      	mov	r8, r0
  403702:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403704:	2b00      	cmp	r3, #0
  403706:	f040 8086 	bne.w	403816 <_dtoa_r+0x64e>
  40370a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40370c:	2b00      	cmp	r3, #0
  40370e:	f340 8266 	ble.w	403bde <_dtoa_r+0xa16>
  403712:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403714:	2b00      	cmp	r3, #0
  403716:	f000 8098 	beq.w	40384a <_dtoa_r+0x682>
  40371a:	2d00      	cmp	r5, #0
  40371c:	dd05      	ble.n	40372a <_dtoa_r+0x562>
  40371e:	4631      	mov	r1, r6
  403720:	462a      	mov	r2, r5
  403722:	4620      	mov	r0, r4
  403724:	f001 f9fe 	bl	404b24 <__lshift>
  403728:	4606      	mov	r6, r0
  40372a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40372c:	2b00      	cmp	r3, #0
  40372e:	f040 8337 	bne.w	403da0 <_dtoa_r+0xbd8>
  403732:	9606      	str	r6, [sp, #24]
  403734:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403736:	9a04      	ldr	r2, [sp, #16]
  403738:	f8dd b018 	ldr.w	fp, [sp, #24]
  40373c:	3b01      	subs	r3, #1
  40373e:	18d3      	adds	r3, r2, r3
  403740:	930b      	str	r3, [sp, #44]	; 0x2c
  403742:	f00a 0301 	and.w	r3, sl, #1
  403746:	930c      	str	r3, [sp, #48]	; 0x30
  403748:	4617      	mov	r7, r2
  40374a:	46c2      	mov	sl, r8
  40374c:	4651      	mov	r1, sl
  40374e:	4648      	mov	r0, r9
  403750:	f7ff fca6 	bl	4030a0 <quorem>
  403754:	4631      	mov	r1, r6
  403756:	4605      	mov	r5, r0
  403758:	4648      	mov	r0, r9
  40375a:	f001 fa35 	bl	404bc8 <__mcmp>
  40375e:	465a      	mov	r2, fp
  403760:	900a      	str	r0, [sp, #40]	; 0x28
  403762:	4651      	mov	r1, sl
  403764:	4620      	mov	r0, r4
  403766:	f001 fa4b 	bl	404c00 <__mdiff>
  40376a:	68c2      	ldr	r2, [r0, #12]
  40376c:	4680      	mov	r8, r0
  40376e:	f105 0330 	add.w	r3, r5, #48	; 0x30
  403772:	2a00      	cmp	r2, #0
  403774:	f040 822b 	bne.w	403bce <_dtoa_r+0xa06>
  403778:	4601      	mov	r1, r0
  40377a:	4648      	mov	r0, r9
  40377c:	9308      	str	r3, [sp, #32]
  40377e:	f001 fa23 	bl	404bc8 <__mcmp>
  403782:	4641      	mov	r1, r8
  403784:	9006      	str	r0, [sp, #24]
  403786:	4620      	mov	r0, r4
  403788:	f001 f846 	bl	404818 <_Bfree>
  40378c:	9a06      	ldr	r2, [sp, #24]
  40378e:	9b08      	ldr	r3, [sp, #32]
  403790:	b932      	cbnz	r2, 4037a0 <_dtoa_r+0x5d8>
  403792:	9924      	ldr	r1, [sp, #144]	; 0x90
  403794:	b921      	cbnz	r1, 4037a0 <_dtoa_r+0x5d8>
  403796:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403798:	2a00      	cmp	r2, #0
  40379a:	f000 83ef 	beq.w	403f7c <_dtoa_r+0xdb4>
  40379e:	9a24      	ldr	r2, [sp, #144]	; 0x90
  4037a0:	990a      	ldr	r1, [sp, #40]	; 0x28
  4037a2:	2900      	cmp	r1, #0
  4037a4:	f2c0 829f 	blt.w	403ce6 <_dtoa_r+0xb1e>
  4037a8:	d105      	bne.n	4037b6 <_dtoa_r+0x5ee>
  4037aa:	9924      	ldr	r1, [sp, #144]	; 0x90
  4037ac:	b919      	cbnz	r1, 4037b6 <_dtoa_r+0x5ee>
  4037ae:	990c      	ldr	r1, [sp, #48]	; 0x30
  4037b0:	2900      	cmp	r1, #0
  4037b2:	f000 8298 	beq.w	403ce6 <_dtoa_r+0xb1e>
  4037b6:	2a00      	cmp	r2, #0
  4037b8:	f300 8306 	bgt.w	403dc8 <_dtoa_r+0xc00>
  4037bc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4037be:	703b      	strb	r3, [r7, #0]
  4037c0:	f107 0801 	add.w	r8, r7, #1
  4037c4:	4297      	cmp	r7, r2
  4037c6:	4645      	mov	r5, r8
  4037c8:	f000 830c 	beq.w	403de4 <_dtoa_r+0xc1c>
  4037cc:	4649      	mov	r1, r9
  4037ce:	2300      	movs	r3, #0
  4037d0:	220a      	movs	r2, #10
  4037d2:	4620      	mov	r0, r4
  4037d4:	f001 f82a 	bl	40482c <__multadd>
  4037d8:	455e      	cmp	r6, fp
  4037da:	4681      	mov	r9, r0
  4037dc:	4631      	mov	r1, r6
  4037de:	f04f 0300 	mov.w	r3, #0
  4037e2:	f04f 020a 	mov.w	r2, #10
  4037e6:	4620      	mov	r0, r4
  4037e8:	f000 81eb 	beq.w	403bc2 <_dtoa_r+0x9fa>
  4037ec:	f001 f81e 	bl	40482c <__multadd>
  4037f0:	4659      	mov	r1, fp
  4037f2:	4606      	mov	r6, r0
  4037f4:	2300      	movs	r3, #0
  4037f6:	220a      	movs	r2, #10
  4037f8:	4620      	mov	r0, r4
  4037fa:	f001 f817 	bl	40482c <__multadd>
  4037fe:	4647      	mov	r7, r8
  403800:	4683      	mov	fp, r0
  403802:	e7a3      	b.n	40374c <_dtoa_r+0x584>
  403804:	201c      	movs	r0, #28
  403806:	9b08      	ldr	r3, [sp, #32]
  403808:	4403      	add	r3, r0
  40380a:	9308      	str	r3, [sp, #32]
  40380c:	9b06      	ldr	r3, [sp, #24]
  40380e:	4403      	add	r3, r0
  403810:	4405      	add	r5, r0
  403812:	9306      	str	r3, [sp, #24]
  403814:	e763      	b.n	4036de <_dtoa_r+0x516>
  403816:	4641      	mov	r1, r8
  403818:	4648      	mov	r0, r9
  40381a:	f001 f9d5 	bl	404bc8 <__mcmp>
  40381e:	2800      	cmp	r0, #0
  403820:	f6bf af73 	bge.w	40370a <_dtoa_r+0x542>
  403824:	9f02      	ldr	r7, [sp, #8]
  403826:	4649      	mov	r1, r9
  403828:	2300      	movs	r3, #0
  40382a:	220a      	movs	r2, #10
  40382c:	4620      	mov	r0, r4
  40382e:	3f01      	subs	r7, #1
  403830:	9702      	str	r7, [sp, #8]
  403832:	f000 fffb 	bl	40482c <__multadd>
  403836:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403838:	4681      	mov	r9, r0
  40383a:	2b00      	cmp	r3, #0
  40383c:	f040 83b6 	bne.w	403fac <_dtoa_r+0xde4>
  403840:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403842:	2b00      	cmp	r3, #0
  403844:	f340 83bf 	ble.w	403fc6 <_dtoa_r+0xdfe>
  403848:	930a      	str	r3, [sp, #40]	; 0x28
  40384a:	f8dd b010 	ldr.w	fp, [sp, #16]
  40384e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403850:	465d      	mov	r5, fp
  403852:	e002      	b.n	40385a <_dtoa_r+0x692>
  403854:	f000 ffea 	bl	40482c <__multadd>
  403858:	4681      	mov	r9, r0
  40385a:	4641      	mov	r1, r8
  40385c:	4648      	mov	r0, r9
  40385e:	f7ff fc1f 	bl	4030a0 <quorem>
  403862:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  403866:	f805 ab01 	strb.w	sl, [r5], #1
  40386a:	eba5 030b 	sub.w	r3, r5, fp
  40386e:	42bb      	cmp	r3, r7
  403870:	f04f 020a 	mov.w	r2, #10
  403874:	f04f 0300 	mov.w	r3, #0
  403878:	4649      	mov	r1, r9
  40387a:	4620      	mov	r0, r4
  40387c:	dbea      	blt.n	403854 <_dtoa_r+0x68c>
  40387e:	9b04      	ldr	r3, [sp, #16]
  403880:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403882:	2a01      	cmp	r2, #1
  403884:	bfac      	ite	ge
  403886:	189b      	addge	r3, r3, r2
  403888:	3301      	addlt	r3, #1
  40388a:	461d      	mov	r5, r3
  40388c:	f04f 0b00 	mov.w	fp, #0
  403890:	4649      	mov	r1, r9
  403892:	2201      	movs	r2, #1
  403894:	4620      	mov	r0, r4
  403896:	f001 f945 	bl	404b24 <__lshift>
  40389a:	4641      	mov	r1, r8
  40389c:	4681      	mov	r9, r0
  40389e:	f001 f993 	bl	404bc8 <__mcmp>
  4038a2:	2800      	cmp	r0, #0
  4038a4:	f340 823d 	ble.w	403d22 <_dtoa_r+0xb5a>
  4038a8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4038ac:	9904      	ldr	r1, [sp, #16]
  4038ae:	1e6b      	subs	r3, r5, #1
  4038b0:	e004      	b.n	4038bc <_dtoa_r+0x6f4>
  4038b2:	428b      	cmp	r3, r1
  4038b4:	f000 81ae 	beq.w	403c14 <_dtoa_r+0xa4c>
  4038b8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  4038bc:	2a39      	cmp	r2, #57	; 0x39
  4038be:	f103 0501 	add.w	r5, r3, #1
  4038c2:	d0f6      	beq.n	4038b2 <_dtoa_r+0x6ea>
  4038c4:	3201      	adds	r2, #1
  4038c6:	701a      	strb	r2, [r3, #0]
  4038c8:	4641      	mov	r1, r8
  4038ca:	4620      	mov	r0, r4
  4038cc:	f000 ffa4 	bl	404818 <_Bfree>
  4038d0:	2e00      	cmp	r6, #0
  4038d2:	f43f ae3d 	beq.w	403550 <_dtoa_r+0x388>
  4038d6:	f1bb 0f00 	cmp.w	fp, #0
  4038da:	d005      	beq.n	4038e8 <_dtoa_r+0x720>
  4038dc:	45b3      	cmp	fp, r6
  4038de:	d003      	beq.n	4038e8 <_dtoa_r+0x720>
  4038e0:	4659      	mov	r1, fp
  4038e2:	4620      	mov	r0, r4
  4038e4:	f000 ff98 	bl	404818 <_Bfree>
  4038e8:	4631      	mov	r1, r6
  4038ea:	4620      	mov	r0, r4
  4038ec:	f000 ff94 	bl	404818 <_Bfree>
  4038f0:	e62e      	b.n	403550 <_dtoa_r+0x388>
  4038f2:	2300      	movs	r3, #0
  4038f4:	930b      	str	r3, [sp, #44]	; 0x2c
  4038f6:	9b02      	ldr	r3, [sp, #8]
  4038f8:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4038fa:	4413      	add	r3, r2
  4038fc:	930f      	str	r3, [sp, #60]	; 0x3c
  4038fe:	3301      	adds	r3, #1
  403900:	2b01      	cmp	r3, #1
  403902:	461f      	mov	r7, r3
  403904:	461e      	mov	r6, r3
  403906:	930a      	str	r3, [sp, #40]	; 0x28
  403908:	bfb8      	it	lt
  40390a:	2701      	movlt	r7, #1
  40390c:	2100      	movs	r1, #0
  40390e:	2f17      	cmp	r7, #23
  403910:	6461      	str	r1, [r4, #68]	; 0x44
  403912:	d90a      	bls.n	40392a <_dtoa_r+0x762>
  403914:	2201      	movs	r2, #1
  403916:	2304      	movs	r3, #4
  403918:	005b      	lsls	r3, r3, #1
  40391a:	f103 0014 	add.w	r0, r3, #20
  40391e:	4287      	cmp	r7, r0
  403920:	4611      	mov	r1, r2
  403922:	f102 0201 	add.w	r2, r2, #1
  403926:	d2f7      	bcs.n	403918 <_dtoa_r+0x750>
  403928:	6461      	str	r1, [r4, #68]	; 0x44
  40392a:	4620      	mov	r0, r4
  40392c:	f000 ff4e 	bl	4047cc <_Balloc>
  403930:	2e0e      	cmp	r6, #14
  403932:	9004      	str	r0, [sp, #16]
  403934:	6420      	str	r0, [r4, #64]	; 0x40
  403936:	f63f ad41 	bhi.w	4033bc <_dtoa_r+0x1f4>
  40393a:	2d00      	cmp	r5, #0
  40393c:	f43f ad3e 	beq.w	4033bc <_dtoa_r+0x1f4>
  403940:	9902      	ldr	r1, [sp, #8]
  403942:	2900      	cmp	r1, #0
  403944:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403948:	f340 8202 	ble.w	403d50 <_dtoa_r+0xb88>
  40394c:	4bb8      	ldr	r3, [pc, #736]	; (403c30 <_dtoa_r+0xa68>)
  40394e:	f001 020f 	and.w	r2, r1, #15
  403952:	110d      	asrs	r5, r1, #4
  403954:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403958:	06e9      	lsls	r1, r5, #27
  40395a:	e9d3 6700 	ldrd	r6, r7, [r3]
  40395e:	f140 81ae 	bpl.w	403cbe <_dtoa_r+0xaf6>
  403962:	4bb4      	ldr	r3, [pc, #720]	; (403c34 <_dtoa_r+0xa6c>)
  403964:	4650      	mov	r0, sl
  403966:	4659      	mov	r1, fp
  403968:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  40396c:	f002 fa0c 	bl	405d88 <__aeabi_ddiv>
  403970:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  403974:	f005 050f 	and.w	r5, r5, #15
  403978:	f04f 0a03 	mov.w	sl, #3
  40397c:	b18d      	cbz	r5, 4039a2 <_dtoa_r+0x7da>
  40397e:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403c34 <_dtoa_r+0xa6c>
  403982:	07ea      	lsls	r2, r5, #31
  403984:	d509      	bpl.n	40399a <_dtoa_r+0x7d2>
  403986:	4630      	mov	r0, r6
  403988:	4639      	mov	r1, r7
  40398a:	e9d8 2300 	ldrd	r2, r3, [r8]
  40398e:	f002 f8d1 	bl	405b34 <__aeabi_dmul>
  403992:	f10a 0a01 	add.w	sl, sl, #1
  403996:	4606      	mov	r6, r0
  403998:	460f      	mov	r7, r1
  40399a:	106d      	asrs	r5, r5, #1
  40399c:	f108 0808 	add.w	r8, r8, #8
  4039a0:	d1ef      	bne.n	403982 <_dtoa_r+0x7ba>
  4039a2:	463b      	mov	r3, r7
  4039a4:	4632      	mov	r2, r6
  4039a6:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  4039aa:	f002 f9ed 	bl	405d88 <__aeabi_ddiv>
  4039ae:	4607      	mov	r7, r0
  4039b0:	4688      	mov	r8, r1
  4039b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4039b4:	b143      	cbz	r3, 4039c8 <_dtoa_r+0x800>
  4039b6:	2200      	movs	r2, #0
  4039b8:	4b9f      	ldr	r3, [pc, #636]	; (403c38 <_dtoa_r+0xa70>)
  4039ba:	4638      	mov	r0, r7
  4039bc:	4641      	mov	r1, r8
  4039be:	f002 fb2b 	bl	406018 <__aeabi_dcmplt>
  4039c2:	2800      	cmp	r0, #0
  4039c4:	f040 8286 	bne.w	403ed4 <_dtoa_r+0xd0c>
  4039c8:	4650      	mov	r0, sl
  4039ca:	f002 f84d 	bl	405a68 <__aeabi_i2d>
  4039ce:	463a      	mov	r2, r7
  4039d0:	4643      	mov	r3, r8
  4039d2:	f002 f8af 	bl	405b34 <__aeabi_dmul>
  4039d6:	4b99      	ldr	r3, [pc, #612]	; (403c3c <_dtoa_r+0xa74>)
  4039d8:	2200      	movs	r2, #0
  4039da:	f001 fef9 	bl	4057d0 <__adddf3>
  4039de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4039e0:	4605      	mov	r5, r0
  4039e2:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4039e6:	2b00      	cmp	r3, #0
  4039e8:	f000 813e 	beq.w	403c68 <_dtoa_r+0xaa0>
  4039ec:	9b02      	ldr	r3, [sp, #8]
  4039ee:	9315      	str	r3, [sp, #84]	; 0x54
  4039f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4039f2:	9312      	str	r3, [sp, #72]	; 0x48
  4039f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4039f6:	2b00      	cmp	r3, #0
  4039f8:	f000 81fa 	beq.w	403df0 <_dtoa_r+0xc28>
  4039fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4039fe:	4b8c      	ldr	r3, [pc, #560]	; (403c30 <_dtoa_r+0xa68>)
  403a00:	498f      	ldr	r1, [pc, #572]	; (403c40 <_dtoa_r+0xa78>)
  403a02:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403a06:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  403a0a:	2000      	movs	r0, #0
  403a0c:	f002 f9bc 	bl	405d88 <__aeabi_ddiv>
  403a10:	462a      	mov	r2, r5
  403a12:	4633      	mov	r3, r6
  403a14:	f001 feda 	bl	4057cc <__aeabi_dsub>
  403a18:	4682      	mov	sl, r0
  403a1a:	468b      	mov	fp, r1
  403a1c:	4638      	mov	r0, r7
  403a1e:	4641      	mov	r1, r8
  403a20:	f002 fb38 	bl	406094 <__aeabi_d2iz>
  403a24:	4605      	mov	r5, r0
  403a26:	f002 f81f 	bl	405a68 <__aeabi_i2d>
  403a2a:	4602      	mov	r2, r0
  403a2c:	460b      	mov	r3, r1
  403a2e:	4638      	mov	r0, r7
  403a30:	4641      	mov	r1, r8
  403a32:	f001 fecb 	bl	4057cc <__aeabi_dsub>
  403a36:	3530      	adds	r5, #48	; 0x30
  403a38:	fa5f f885 	uxtb.w	r8, r5
  403a3c:	9d04      	ldr	r5, [sp, #16]
  403a3e:	4606      	mov	r6, r0
  403a40:	460f      	mov	r7, r1
  403a42:	f885 8000 	strb.w	r8, [r5]
  403a46:	4602      	mov	r2, r0
  403a48:	460b      	mov	r3, r1
  403a4a:	4650      	mov	r0, sl
  403a4c:	4659      	mov	r1, fp
  403a4e:	3501      	adds	r5, #1
  403a50:	f002 fb00 	bl	406054 <__aeabi_dcmpgt>
  403a54:	2800      	cmp	r0, #0
  403a56:	d154      	bne.n	403b02 <_dtoa_r+0x93a>
  403a58:	4632      	mov	r2, r6
  403a5a:	463b      	mov	r3, r7
  403a5c:	2000      	movs	r0, #0
  403a5e:	4976      	ldr	r1, [pc, #472]	; (403c38 <_dtoa_r+0xa70>)
  403a60:	f001 feb4 	bl	4057cc <__aeabi_dsub>
  403a64:	4602      	mov	r2, r0
  403a66:	460b      	mov	r3, r1
  403a68:	4650      	mov	r0, sl
  403a6a:	4659      	mov	r1, fp
  403a6c:	f002 faf2 	bl	406054 <__aeabi_dcmpgt>
  403a70:	2800      	cmp	r0, #0
  403a72:	f040 8270 	bne.w	403f56 <_dtoa_r+0xd8e>
  403a76:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403a78:	2a01      	cmp	r2, #1
  403a7a:	f000 8111 	beq.w	403ca0 <_dtoa_r+0xad8>
  403a7e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403a80:	9a04      	ldr	r2, [sp, #16]
  403a82:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403a86:	4413      	add	r3, r2
  403a88:	4699      	mov	r9, r3
  403a8a:	e00d      	b.n	403aa8 <_dtoa_r+0x8e0>
  403a8c:	2000      	movs	r0, #0
  403a8e:	496a      	ldr	r1, [pc, #424]	; (403c38 <_dtoa_r+0xa70>)
  403a90:	f001 fe9c 	bl	4057cc <__aeabi_dsub>
  403a94:	4652      	mov	r2, sl
  403a96:	465b      	mov	r3, fp
  403a98:	f002 fabe 	bl	406018 <__aeabi_dcmplt>
  403a9c:	2800      	cmp	r0, #0
  403a9e:	f040 8258 	bne.w	403f52 <_dtoa_r+0xd8a>
  403aa2:	454d      	cmp	r5, r9
  403aa4:	f000 80fa 	beq.w	403c9c <_dtoa_r+0xad4>
  403aa8:	4650      	mov	r0, sl
  403aaa:	4659      	mov	r1, fp
  403aac:	2200      	movs	r2, #0
  403aae:	4b65      	ldr	r3, [pc, #404]	; (403c44 <_dtoa_r+0xa7c>)
  403ab0:	f002 f840 	bl	405b34 <__aeabi_dmul>
  403ab4:	2200      	movs	r2, #0
  403ab6:	4b63      	ldr	r3, [pc, #396]	; (403c44 <_dtoa_r+0xa7c>)
  403ab8:	4682      	mov	sl, r0
  403aba:	468b      	mov	fp, r1
  403abc:	4630      	mov	r0, r6
  403abe:	4639      	mov	r1, r7
  403ac0:	f002 f838 	bl	405b34 <__aeabi_dmul>
  403ac4:	460f      	mov	r7, r1
  403ac6:	4606      	mov	r6, r0
  403ac8:	f002 fae4 	bl	406094 <__aeabi_d2iz>
  403acc:	4680      	mov	r8, r0
  403ace:	f001 ffcb 	bl	405a68 <__aeabi_i2d>
  403ad2:	4602      	mov	r2, r0
  403ad4:	460b      	mov	r3, r1
  403ad6:	4630      	mov	r0, r6
  403ad8:	4639      	mov	r1, r7
  403ada:	f001 fe77 	bl	4057cc <__aeabi_dsub>
  403ade:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403ae2:	fa5f f888 	uxtb.w	r8, r8
  403ae6:	4652      	mov	r2, sl
  403ae8:	465b      	mov	r3, fp
  403aea:	f805 8b01 	strb.w	r8, [r5], #1
  403aee:	4606      	mov	r6, r0
  403af0:	460f      	mov	r7, r1
  403af2:	f002 fa91 	bl	406018 <__aeabi_dcmplt>
  403af6:	4632      	mov	r2, r6
  403af8:	463b      	mov	r3, r7
  403afa:	2800      	cmp	r0, #0
  403afc:	d0c6      	beq.n	403a8c <_dtoa_r+0x8c4>
  403afe:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403b02:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403b04:	9302      	str	r3, [sp, #8]
  403b06:	e523      	b.n	403550 <_dtoa_r+0x388>
  403b08:	2300      	movs	r3, #0
  403b0a:	930b      	str	r3, [sp, #44]	; 0x2c
  403b0c:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403b0e:	2b00      	cmp	r3, #0
  403b10:	f340 80dc 	ble.w	403ccc <_dtoa_r+0xb04>
  403b14:	461f      	mov	r7, r3
  403b16:	461e      	mov	r6, r3
  403b18:	930f      	str	r3, [sp, #60]	; 0x3c
  403b1a:	930a      	str	r3, [sp, #40]	; 0x28
  403b1c:	e6f6      	b.n	40390c <_dtoa_r+0x744>
  403b1e:	2301      	movs	r3, #1
  403b20:	930b      	str	r3, [sp, #44]	; 0x2c
  403b22:	e7f3      	b.n	403b0c <_dtoa_r+0x944>
  403b24:	f1ba 0f00 	cmp.w	sl, #0
  403b28:	f47f ada8 	bne.w	40367c <_dtoa_r+0x4b4>
  403b2c:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403b30:	2b00      	cmp	r3, #0
  403b32:	f47f adba 	bne.w	4036aa <_dtoa_r+0x4e2>
  403b36:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403b3a:	0d3f      	lsrs	r7, r7, #20
  403b3c:	053f      	lsls	r7, r7, #20
  403b3e:	2f00      	cmp	r7, #0
  403b40:	f000 820d 	beq.w	403f5e <_dtoa_r+0xd96>
  403b44:	9b08      	ldr	r3, [sp, #32]
  403b46:	3301      	adds	r3, #1
  403b48:	9308      	str	r3, [sp, #32]
  403b4a:	9b06      	ldr	r3, [sp, #24]
  403b4c:	3301      	adds	r3, #1
  403b4e:	9306      	str	r3, [sp, #24]
  403b50:	2301      	movs	r3, #1
  403b52:	930c      	str	r3, [sp, #48]	; 0x30
  403b54:	e5ab      	b.n	4036ae <_dtoa_r+0x4e6>
  403b56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b58:	2b00      	cmp	r3, #0
  403b5a:	f73f ac42 	bgt.w	4033e2 <_dtoa_r+0x21a>
  403b5e:	f040 8221 	bne.w	403fa4 <_dtoa_r+0xddc>
  403b62:	2200      	movs	r2, #0
  403b64:	4b38      	ldr	r3, [pc, #224]	; (403c48 <_dtoa_r+0xa80>)
  403b66:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403b6a:	f001 ffe3 	bl	405b34 <__aeabi_dmul>
  403b6e:	4652      	mov	r2, sl
  403b70:	465b      	mov	r3, fp
  403b72:	f002 fa65 	bl	406040 <__aeabi_dcmpge>
  403b76:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403b7a:	4646      	mov	r6, r8
  403b7c:	2800      	cmp	r0, #0
  403b7e:	d041      	beq.n	403c04 <_dtoa_r+0xa3c>
  403b80:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403b82:	9d04      	ldr	r5, [sp, #16]
  403b84:	43db      	mvns	r3, r3
  403b86:	9302      	str	r3, [sp, #8]
  403b88:	4641      	mov	r1, r8
  403b8a:	4620      	mov	r0, r4
  403b8c:	f000 fe44 	bl	404818 <_Bfree>
  403b90:	2e00      	cmp	r6, #0
  403b92:	f43f acdd 	beq.w	403550 <_dtoa_r+0x388>
  403b96:	e6a7      	b.n	4038e8 <_dtoa_r+0x720>
  403b98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403b9a:	4649      	mov	r1, r9
  403b9c:	4620      	mov	r0, r4
  403b9e:	f000 ff71 	bl	404a84 <__pow5mult>
  403ba2:	4681      	mov	r9, r0
  403ba4:	e558      	b.n	403658 <_dtoa_r+0x490>
  403ba6:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403ba8:	2a00      	cmp	r2, #0
  403baa:	f000 8187 	beq.w	403ebc <_dtoa_r+0xcf4>
  403bae:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403bb2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403bb4:	9d08      	ldr	r5, [sp, #32]
  403bb6:	e4f2      	b.n	40359e <_dtoa_r+0x3d6>
  403bb8:	f1ba 0f00 	cmp.w	sl, #0
  403bbc:	f47f ad75 	bne.w	4036aa <_dtoa_r+0x4e2>
  403bc0:	e7b4      	b.n	403b2c <_dtoa_r+0x964>
  403bc2:	f000 fe33 	bl	40482c <__multadd>
  403bc6:	4647      	mov	r7, r8
  403bc8:	4606      	mov	r6, r0
  403bca:	4683      	mov	fp, r0
  403bcc:	e5be      	b.n	40374c <_dtoa_r+0x584>
  403bce:	4601      	mov	r1, r0
  403bd0:	4620      	mov	r0, r4
  403bd2:	9306      	str	r3, [sp, #24]
  403bd4:	f000 fe20 	bl	404818 <_Bfree>
  403bd8:	2201      	movs	r2, #1
  403bda:	9b06      	ldr	r3, [sp, #24]
  403bdc:	e5e0      	b.n	4037a0 <_dtoa_r+0x5d8>
  403bde:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403be0:	2b02      	cmp	r3, #2
  403be2:	f77f ad96 	ble.w	403712 <_dtoa_r+0x54a>
  403be6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403be8:	2b00      	cmp	r3, #0
  403bea:	d1c9      	bne.n	403b80 <_dtoa_r+0x9b8>
  403bec:	4641      	mov	r1, r8
  403bee:	2205      	movs	r2, #5
  403bf0:	4620      	mov	r0, r4
  403bf2:	f000 fe1b 	bl	40482c <__multadd>
  403bf6:	4601      	mov	r1, r0
  403bf8:	4680      	mov	r8, r0
  403bfa:	4648      	mov	r0, r9
  403bfc:	f000 ffe4 	bl	404bc8 <__mcmp>
  403c00:	2800      	cmp	r0, #0
  403c02:	ddbd      	ble.n	403b80 <_dtoa_r+0x9b8>
  403c04:	9a02      	ldr	r2, [sp, #8]
  403c06:	9904      	ldr	r1, [sp, #16]
  403c08:	2331      	movs	r3, #49	; 0x31
  403c0a:	3201      	adds	r2, #1
  403c0c:	9202      	str	r2, [sp, #8]
  403c0e:	700b      	strb	r3, [r1, #0]
  403c10:	1c4d      	adds	r5, r1, #1
  403c12:	e7b9      	b.n	403b88 <_dtoa_r+0x9c0>
  403c14:	9a02      	ldr	r2, [sp, #8]
  403c16:	3201      	adds	r2, #1
  403c18:	9202      	str	r2, [sp, #8]
  403c1a:	9a04      	ldr	r2, [sp, #16]
  403c1c:	2331      	movs	r3, #49	; 0x31
  403c1e:	7013      	strb	r3, [r2, #0]
  403c20:	e652      	b.n	4038c8 <_dtoa_r+0x700>
  403c22:	2301      	movs	r3, #1
  403c24:	930b      	str	r3, [sp, #44]	; 0x2c
  403c26:	e666      	b.n	4038f6 <_dtoa_r+0x72e>
  403c28:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403c2c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403c2e:	e48f      	b.n	403550 <_dtoa_r+0x388>
  403c30:	00406ef0 	.word	0x00406ef0
  403c34:	00406ec8 	.word	0x00406ec8
  403c38:	3ff00000 	.word	0x3ff00000
  403c3c:	401c0000 	.word	0x401c0000
  403c40:	3fe00000 	.word	0x3fe00000
  403c44:	40240000 	.word	0x40240000
  403c48:	40140000 	.word	0x40140000
  403c4c:	4650      	mov	r0, sl
  403c4e:	f001 ff0b 	bl	405a68 <__aeabi_i2d>
  403c52:	463a      	mov	r2, r7
  403c54:	4643      	mov	r3, r8
  403c56:	f001 ff6d 	bl	405b34 <__aeabi_dmul>
  403c5a:	2200      	movs	r2, #0
  403c5c:	4bc1      	ldr	r3, [pc, #772]	; (403f64 <_dtoa_r+0xd9c>)
  403c5e:	f001 fdb7 	bl	4057d0 <__adddf3>
  403c62:	4605      	mov	r5, r0
  403c64:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403c68:	4641      	mov	r1, r8
  403c6a:	2200      	movs	r2, #0
  403c6c:	4bbe      	ldr	r3, [pc, #760]	; (403f68 <_dtoa_r+0xda0>)
  403c6e:	4638      	mov	r0, r7
  403c70:	f001 fdac 	bl	4057cc <__aeabi_dsub>
  403c74:	462a      	mov	r2, r5
  403c76:	4633      	mov	r3, r6
  403c78:	4682      	mov	sl, r0
  403c7a:	468b      	mov	fp, r1
  403c7c:	f002 f9ea 	bl	406054 <__aeabi_dcmpgt>
  403c80:	4680      	mov	r8, r0
  403c82:	2800      	cmp	r0, #0
  403c84:	f040 8110 	bne.w	403ea8 <_dtoa_r+0xce0>
  403c88:	462a      	mov	r2, r5
  403c8a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403c8e:	4650      	mov	r0, sl
  403c90:	4659      	mov	r1, fp
  403c92:	f002 f9c1 	bl	406018 <__aeabi_dcmplt>
  403c96:	b118      	cbz	r0, 403ca0 <_dtoa_r+0xad8>
  403c98:	4646      	mov	r6, r8
  403c9a:	e771      	b.n	403b80 <_dtoa_r+0x9b8>
  403c9c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403ca0:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403ca4:	f7ff bb8a 	b.w	4033bc <_dtoa_r+0x1f4>
  403ca8:	9804      	ldr	r0, [sp, #16]
  403caa:	f7ff babb 	b.w	403224 <_dtoa_r+0x5c>
  403cae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403cb0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403cb2:	970c      	str	r7, [sp, #48]	; 0x30
  403cb4:	1afb      	subs	r3, r7, r3
  403cb6:	441a      	add	r2, r3
  403cb8:	920d      	str	r2, [sp, #52]	; 0x34
  403cba:	2700      	movs	r7, #0
  403cbc:	e469      	b.n	403592 <_dtoa_r+0x3ca>
  403cbe:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403cc2:	f04f 0a02 	mov.w	sl, #2
  403cc6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403cca:	e657      	b.n	40397c <_dtoa_r+0x7b4>
  403ccc:	2100      	movs	r1, #0
  403cce:	2301      	movs	r3, #1
  403cd0:	6461      	str	r1, [r4, #68]	; 0x44
  403cd2:	4620      	mov	r0, r4
  403cd4:	9325      	str	r3, [sp, #148]	; 0x94
  403cd6:	f000 fd79 	bl	4047cc <_Balloc>
  403cda:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403cdc:	9004      	str	r0, [sp, #16]
  403cde:	6420      	str	r0, [r4, #64]	; 0x40
  403ce0:	930a      	str	r3, [sp, #40]	; 0x28
  403ce2:	930f      	str	r3, [sp, #60]	; 0x3c
  403ce4:	e629      	b.n	40393a <_dtoa_r+0x772>
  403ce6:	2a00      	cmp	r2, #0
  403ce8:	46d0      	mov	r8, sl
  403cea:	f8cd b018 	str.w	fp, [sp, #24]
  403cee:	469a      	mov	sl, r3
  403cf0:	dd11      	ble.n	403d16 <_dtoa_r+0xb4e>
  403cf2:	4649      	mov	r1, r9
  403cf4:	2201      	movs	r2, #1
  403cf6:	4620      	mov	r0, r4
  403cf8:	f000 ff14 	bl	404b24 <__lshift>
  403cfc:	4641      	mov	r1, r8
  403cfe:	4681      	mov	r9, r0
  403d00:	f000 ff62 	bl	404bc8 <__mcmp>
  403d04:	2800      	cmp	r0, #0
  403d06:	f340 8146 	ble.w	403f96 <_dtoa_r+0xdce>
  403d0a:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403d0e:	f000 8106 	beq.w	403f1e <_dtoa_r+0xd56>
  403d12:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403d16:	46b3      	mov	fp, r6
  403d18:	f887 a000 	strb.w	sl, [r7]
  403d1c:	1c7d      	adds	r5, r7, #1
  403d1e:	9e06      	ldr	r6, [sp, #24]
  403d20:	e5d2      	b.n	4038c8 <_dtoa_r+0x700>
  403d22:	d104      	bne.n	403d2e <_dtoa_r+0xb66>
  403d24:	f01a 0f01 	tst.w	sl, #1
  403d28:	d001      	beq.n	403d2e <_dtoa_r+0xb66>
  403d2a:	e5bd      	b.n	4038a8 <_dtoa_r+0x6e0>
  403d2c:	4615      	mov	r5, r2
  403d2e:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403d32:	2b30      	cmp	r3, #48	; 0x30
  403d34:	f105 32ff 	add.w	r2, r5, #4294967295
  403d38:	d0f8      	beq.n	403d2c <_dtoa_r+0xb64>
  403d3a:	e5c5      	b.n	4038c8 <_dtoa_r+0x700>
  403d3c:	9904      	ldr	r1, [sp, #16]
  403d3e:	2230      	movs	r2, #48	; 0x30
  403d40:	700a      	strb	r2, [r1, #0]
  403d42:	9a02      	ldr	r2, [sp, #8]
  403d44:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403d48:	3201      	adds	r2, #1
  403d4a:	9202      	str	r2, [sp, #8]
  403d4c:	f7ff bbfc 	b.w	403548 <_dtoa_r+0x380>
  403d50:	f000 80bb 	beq.w	403eca <_dtoa_r+0xd02>
  403d54:	9b02      	ldr	r3, [sp, #8]
  403d56:	425d      	negs	r5, r3
  403d58:	4b84      	ldr	r3, [pc, #528]	; (403f6c <_dtoa_r+0xda4>)
  403d5a:	f005 020f 	and.w	r2, r5, #15
  403d5e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403d62:	e9d3 2300 	ldrd	r2, r3, [r3]
  403d66:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403d6a:	f001 fee3 	bl	405b34 <__aeabi_dmul>
  403d6e:	112d      	asrs	r5, r5, #4
  403d70:	4607      	mov	r7, r0
  403d72:	4688      	mov	r8, r1
  403d74:	f000 812c 	beq.w	403fd0 <_dtoa_r+0xe08>
  403d78:	4e7d      	ldr	r6, [pc, #500]	; (403f70 <_dtoa_r+0xda8>)
  403d7a:	f04f 0a02 	mov.w	sl, #2
  403d7e:	07eb      	lsls	r3, r5, #31
  403d80:	d509      	bpl.n	403d96 <_dtoa_r+0xbce>
  403d82:	4638      	mov	r0, r7
  403d84:	4641      	mov	r1, r8
  403d86:	e9d6 2300 	ldrd	r2, r3, [r6]
  403d8a:	f001 fed3 	bl	405b34 <__aeabi_dmul>
  403d8e:	f10a 0a01 	add.w	sl, sl, #1
  403d92:	4607      	mov	r7, r0
  403d94:	4688      	mov	r8, r1
  403d96:	106d      	asrs	r5, r5, #1
  403d98:	f106 0608 	add.w	r6, r6, #8
  403d9c:	d1ef      	bne.n	403d7e <_dtoa_r+0xbb6>
  403d9e:	e608      	b.n	4039b2 <_dtoa_r+0x7ea>
  403da0:	6871      	ldr	r1, [r6, #4]
  403da2:	4620      	mov	r0, r4
  403da4:	f000 fd12 	bl	4047cc <_Balloc>
  403da8:	6933      	ldr	r3, [r6, #16]
  403daa:	3302      	adds	r3, #2
  403dac:	009a      	lsls	r2, r3, #2
  403dae:	4605      	mov	r5, r0
  403db0:	f106 010c 	add.w	r1, r6, #12
  403db4:	300c      	adds	r0, #12
  403db6:	f000 fc63 	bl	404680 <memcpy>
  403dba:	4629      	mov	r1, r5
  403dbc:	2201      	movs	r2, #1
  403dbe:	4620      	mov	r0, r4
  403dc0:	f000 feb0 	bl	404b24 <__lshift>
  403dc4:	9006      	str	r0, [sp, #24]
  403dc6:	e4b5      	b.n	403734 <_dtoa_r+0x56c>
  403dc8:	2b39      	cmp	r3, #57	; 0x39
  403dca:	f8cd b018 	str.w	fp, [sp, #24]
  403dce:	46d0      	mov	r8, sl
  403dd0:	f000 80a5 	beq.w	403f1e <_dtoa_r+0xd56>
  403dd4:	f103 0a01 	add.w	sl, r3, #1
  403dd8:	46b3      	mov	fp, r6
  403dda:	f887 a000 	strb.w	sl, [r7]
  403dde:	1c7d      	adds	r5, r7, #1
  403de0:	9e06      	ldr	r6, [sp, #24]
  403de2:	e571      	b.n	4038c8 <_dtoa_r+0x700>
  403de4:	465a      	mov	r2, fp
  403de6:	46d0      	mov	r8, sl
  403de8:	46b3      	mov	fp, r6
  403dea:	469a      	mov	sl, r3
  403dec:	4616      	mov	r6, r2
  403dee:	e54f      	b.n	403890 <_dtoa_r+0x6c8>
  403df0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403df2:	495e      	ldr	r1, [pc, #376]	; (403f6c <_dtoa_r+0xda4>)
  403df4:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403df8:	462a      	mov	r2, r5
  403dfa:	4633      	mov	r3, r6
  403dfc:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403e00:	f001 fe98 	bl	405b34 <__aeabi_dmul>
  403e04:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403e08:	4638      	mov	r0, r7
  403e0a:	4641      	mov	r1, r8
  403e0c:	f002 f942 	bl	406094 <__aeabi_d2iz>
  403e10:	4605      	mov	r5, r0
  403e12:	f001 fe29 	bl	405a68 <__aeabi_i2d>
  403e16:	460b      	mov	r3, r1
  403e18:	4602      	mov	r2, r0
  403e1a:	4641      	mov	r1, r8
  403e1c:	4638      	mov	r0, r7
  403e1e:	f001 fcd5 	bl	4057cc <__aeabi_dsub>
  403e22:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403e24:	460f      	mov	r7, r1
  403e26:	9904      	ldr	r1, [sp, #16]
  403e28:	3530      	adds	r5, #48	; 0x30
  403e2a:	2b01      	cmp	r3, #1
  403e2c:	700d      	strb	r5, [r1, #0]
  403e2e:	4606      	mov	r6, r0
  403e30:	f101 0501 	add.w	r5, r1, #1
  403e34:	d026      	beq.n	403e84 <_dtoa_r+0xcbc>
  403e36:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403e38:	9a04      	ldr	r2, [sp, #16]
  403e3a:	f8df b13c 	ldr.w	fp, [pc, #316]	; 403f78 <_dtoa_r+0xdb0>
  403e3e:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403e42:	4413      	add	r3, r2
  403e44:	f04f 0a00 	mov.w	sl, #0
  403e48:	4699      	mov	r9, r3
  403e4a:	4652      	mov	r2, sl
  403e4c:	465b      	mov	r3, fp
  403e4e:	4630      	mov	r0, r6
  403e50:	4639      	mov	r1, r7
  403e52:	f001 fe6f 	bl	405b34 <__aeabi_dmul>
  403e56:	460f      	mov	r7, r1
  403e58:	4606      	mov	r6, r0
  403e5a:	f002 f91b 	bl	406094 <__aeabi_d2iz>
  403e5e:	4680      	mov	r8, r0
  403e60:	f001 fe02 	bl	405a68 <__aeabi_i2d>
  403e64:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403e68:	4602      	mov	r2, r0
  403e6a:	460b      	mov	r3, r1
  403e6c:	4630      	mov	r0, r6
  403e6e:	4639      	mov	r1, r7
  403e70:	f001 fcac 	bl	4057cc <__aeabi_dsub>
  403e74:	f805 8b01 	strb.w	r8, [r5], #1
  403e78:	454d      	cmp	r5, r9
  403e7a:	4606      	mov	r6, r0
  403e7c:	460f      	mov	r7, r1
  403e7e:	d1e4      	bne.n	403e4a <_dtoa_r+0xc82>
  403e80:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403e84:	4b3b      	ldr	r3, [pc, #236]	; (403f74 <_dtoa_r+0xdac>)
  403e86:	2200      	movs	r2, #0
  403e88:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  403e8c:	f001 fca0 	bl	4057d0 <__adddf3>
  403e90:	4632      	mov	r2, r6
  403e92:	463b      	mov	r3, r7
  403e94:	f002 f8c0 	bl	406018 <__aeabi_dcmplt>
  403e98:	2800      	cmp	r0, #0
  403e9a:	d046      	beq.n	403f2a <_dtoa_r+0xd62>
  403e9c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403e9e:	9302      	str	r3, [sp, #8]
  403ea0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403ea4:	f7ff bb43 	b.w	40352e <_dtoa_r+0x366>
  403ea8:	f04f 0800 	mov.w	r8, #0
  403eac:	4646      	mov	r6, r8
  403eae:	e6a9      	b.n	403c04 <_dtoa_r+0xa3c>
  403eb0:	9b08      	ldr	r3, [sp, #32]
  403eb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403eb4:	1a9d      	subs	r5, r3, r2
  403eb6:	2300      	movs	r3, #0
  403eb8:	f7ff bb71 	b.w	40359e <_dtoa_r+0x3d6>
  403ebc:	9b18      	ldr	r3, [sp, #96]	; 0x60
  403ebe:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403ec0:	9d08      	ldr	r5, [sp, #32]
  403ec2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  403ec6:	f7ff bb6a 	b.w	40359e <_dtoa_r+0x3d6>
  403eca:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  403ece:	f04f 0a02 	mov.w	sl, #2
  403ed2:	e56e      	b.n	4039b2 <_dtoa_r+0x7ea>
  403ed4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ed6:	2b00      	cmp	r3, #0
  403ed8:	f43f aeb8 	beq.w	403c4c <_dtoa_r+0xa84>
  403edc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403ede:	2b00      	cmp	r3, #0
  403ee0:	f77f aede 	ble.w	403ca0 <_dtoa_r+0xad8>
  403ee4:	2200      	movs	r2, #0
  403ee6:	4b24      	ldr	r3, [pc, #144]	; (403f78 <_dtoa_r+0xdb0>)
  403ee8:	4638      	mov	r0, r7
  403eea:	4641      	mov	r1, r8
  403eec:	f001 fe22 	bl	405b34 <__aeabi_dmul>
  403ef0:	4607      	mov	r7, r0
  403ef2:	4688      	mov	r8, r1
  403ef4:	f10a 0001 	add.w	r0, sl, #1
  403ef8:	f001 fdb6 	bl	405a68 <__aeabi_i2d>
  403efc:	463a      	mov	r2, r7
  403efe:	4643      	mov	r3, r8
  403f00:	f001 fe18 	bl	405b34 <__aeabi_dmul>
  403f04:	2200      	movs	r2, #0
  403f06:	4b17      	ldr	r3, [pc, #92]	; (403f64 <_dtoa_r+0xd9c>)
  403f08:	f001 fc62 	bl	4057d0 <__adddf3>
  403f0c:	9a02      	ldr	r2, [sp, #8]
  403f0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403f10:	9312      	str	r3, [sp, #72]	; 0x48
  403f12:	3a01      	subs	r2, #1
  403f14:	4605      	mov	r5, r0
  403f16:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403f1a:	9215      	str	r2, [sp, #84]	; 0x54
  403f1c:	e56a      	b.n	4039f4 <_dtoa_r+0x82c>
  403f1e:	2239      	movs	r2, #57	; 0x39
  403f20:	46b3      	mov	fp, r6
  403f22:	703a      	strb	r2, [r7, #0]
  403f24:	9e06      	ldr	r6, [sp, #24]
  403f26:	1c7d      	adds	r5, r7, #1
  403f28:	e4c0      	b.n	4038ac <_dtoa_r+0x6e4>
  403f2a:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  403f2e:	2000      	movs	r0, #0
  403f30:	4910      	ldr	r1, [pc, #64]	; (403f74 <_dtoa_r+0xdac>)
  403f32:	f001 fc4b 	bl	4057cc <__aeabi_dsub>
  403f36:	4632      	mov	r2, r6
  403f38:	463b      	mov	r3, r7
  403f3a:	f002 f88b 	bl	406054 <__aeabi_dcmpgt>
  403f3e:	b908      	cbnz	r0, 403f44 <_dtoa_r+0xd7c>
  403f40:	e6ae      	b.n	403ca0 <_dtoa_r+0xad8>
  403f42:	4615      	mov	r5, r2
  403f44:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403f48:	2b30      	cmp	r3, #48	; 0x30
  403f4a:	f105 32ff 	add.w	r2, r5, #4294967295
  403f4e:	d0f8      	beq.n	403f42 <_dtoa_r+0xd7a>
  403f50:	e5d7      	b.n	403b02 <_dtoa_r+0x93a>
  403f52:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403f56:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403f58:	9302      	str	r3, [sp, #8]
  403f5a:	f7ff bae8 	b.w	40352e <_dtoa_r+0x366>
  403f5e:	970c      	str	r7, [sp, #48]	; 0x30
  403f60:	f7ff bba5 	b.w	4036ae <_dtoa_r+0x4e6>
  403f64:	401c0000 	.word	0x401c0000
  403f68:	40140000 	.word	0x40140000
  403f6c:	00406ef0 	.word	0x00406ef0
  403f70:	00406ec8 	.word	0x00406ec8
  403f74:	3fe00000 	.word	0x3fe00000
  403f78:	40240000 	.word	0x40240000
  403f7c:	2b39      	cmp	r3, #57	; 0x39
  403f7e:	f8cd b018 	str.w	fp, [sp, #24]
  403f82:	46d0      	mov	r8, sl
  403f84:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403f88:	469a      	mov	sl, r3
  403f8a:	d0c8      	beq.n	403f1e <_dtoa_r+0xd56>
  403f8c:	f1bb 0f00 	cmp.w	fp, #0
  403f90:	f73f aebf 	bgt.w	403d12 <_dtoa_r+0xb4a>
  403f94:	e6bf      	b.n	403d16 <_dtoa_r+0xb4e>
  403f96:	f47f aebe 	bne.w	403d16 <_dtoa_r+0xb4e>
  403f9a:	f01a 0f01 	tst.w	sl, #1
  403f9e:	f43f aeba 	beq.w	403d16 <_dtoa_r+0xb4e>
  403fa2:	e6b2      	b.n	403d0a <_dtoa_r+0xb42>
  403fa4:	f04f 0800 	mov.w	r8, #0
  403fa8:	4646      	mov	r6, r8
  403faa:	e5e9      	b.n	403b80 <_dtoa_r+0x9b8>
  403fac:	4631      	mov	r1, r6
  403fae:	2300      	movs	r3, #0
  403fb0:	220a      	movs	r2, #10
  403fb2:	4620      	mov	r0, r4
  403fb4:	f000 fc3a 	bl	40482c <__multadd>
  403fb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403fba:	2b00      	cmp	r3, #0
  403fbc:	4606      	mov	r6, r0
  403fbe:	dd0a      	ble.n	403fd6 <_dtoa_r+0xe0e>
  403fc0:	930a      	str	r3, [sp, #40]	; 0x28
  403fc2:	f7ff bbaa 	b.w	40371a <_dtoa_r+0x552>
  403fc6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fc8:	2b02      	cmp	r3, #2
  403fca:	dc23      	bgt.n	404014 <_dtoa_r+0xe4c>
  403fcc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403fce:	e43b      	b.n	403848 <_dtoa_r+0x680>
  403fd0:	f04f 0a02 	mov.w	sl, #2
  403fd4:	e4ed      	b.n	4039b2 <_dtoa_r+0x7ea>
  403fd6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403fd8:	2b02      	cmp	r3, #2
  403fda:	dc1b      	bgt.n	404014 <_dtoa_r+0xe4c>
  403fdc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403fde:	e7ef      	b.n	403fc0 <_dtoa_r+0xdf8>
  403fe0:	2500      	movs	r5, #0
  403fe2:	6465      	str	r5, [r4, #68]	; 0x44
  403fe4:	4629      	mov	r1, r5
  403fe6:	4620      	mov	r0, r4
  403fe8:	f000 fbf0 	bl	4047cc <_Balloc>
  403fec:	f04f 33ff 	mov.w	r3, #4294967295
  403ff0:	930a      	str	r3, [sp, #40]	; 0x28
  403ff2:	930f      	str	r3, [sp, #60]	; 0x3c
  403ff4:	2301      	movs	r3, #1
  403ff6:	9004      	str	r0, [sp, #16]
  403ff8:	9525      	str	r5, [sp, #148]	; 0x94
  403ffa:	6420      	str	r0, [r4, #64]	; 0x40
  403ffc:	930b      	str	r3, [sp, #44]	; 0x2c
  403ffe:	f7ff b9dd 	b.w	4033bc <_dtoa_r+0x1f4>
  404002:	2501      	movs	r5, #1
  404004:	f7ff b9a5 	b.w	403352 <_dtoa_r+0x18a>
  404008:	f43f ab69 	beq.w	4036de <_dtoa_r+0x516>
  40400c:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  404010:	f7ff bbf9 	b.w	403806 <_dtoa_r+0x63e>
  404014:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404016:	930a      	str	r3, [sp, #40]	; 0x28
  404018:	e5e5      	b.n	403be6 <_dtoa_r+0xa1e>
  40401a:	bf00      	nop

0040401c <__libc_fini_array>:
  40401c:	b538      	push	{r3, r4, r5, lr}
  40401e:	4c0a      	ldr	r4, [pc, #40]	; (404048 <__libc_fini_array+0x2c>)
  404020:	4d0a      	ldr	r5, [pc, #40]	; (40404c <__libc_fini_array+0x30>)
  404022:	1b64      	subs	r4, r4, r5
  404024:	10a4      	asrs	r4, r4, #2
  404026:	d00a      	beq.n	40403e <__libc_fini_array+0x22>
  404028:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  40402c:	3b01      	subs	r3, #1
  40402e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  404032:	3c01      	subs	r4, #1
  404034:	f855 3904 	ldr.w	r3, [r5], #-4
  404038:	4798      	blx	r3
  40403a:	2c00      	cmp	r4, #0
  40403c:	d1f9      	bne.n	404032 <__libc_fini_array+0x16>
  40403e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404042:	f003 b853 	b.w	4070ec <_fini>
  404046:	bf00      	nop
  404048:	004070fc 	.word	0x004070fc
  40404c:	004070f8 	.word	0x004070f8

00404050 <_localeconv_r>:
  404050:	4a04      	ldr	r2, [pc, #16]	; (404064 <_localeconv_r+0x14>)
  404052:	4b05      	ldr	r3, [pc, #20]	; (404068 <_localeconv_r+0x18>)
  404054:	6812      	ldr	r2, [r2, #0]
  404056:	6b50      	ldr	r0, [r2, #52]	; 0x34
  404058:	2800      	cmp	r0, #0
  40405a:	bf08      	it	eq
  40405c:	4618      	moveq	r0, r3
  40405e:	30f0      	adds	r0, #240	; 0xf0
  404060:	4770      	bx	lr
  404062:	bf00      	nop
  404064:	20400020 	.word	0x20400020
  404068:	20400864 	.word	0x20400864

0040406c <__retarget_lock_acquire_recursive>:
  40406c:	4770      	bx	lr
  40406e:	bf00      	nop

00404070 <__retarget_lock_release_recursive>:
  404070:	4770      	bx	lr
  404072:	bf00      	nop

00404074 <_malloc_r>:
  404074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404078:	f101 060b 	add.w	r6, r1, #11
  40407c:	2e16      	cmp	r6, #22
  40407e:	b083      	sub	sp, #12
  404080:	4605      	mov	r5, r0
  404082:	f240 809e 	bls.w	4041c2 <_malloc_r+0x14e>
  404086:	f036 0607 	bics.w	r6, r6, #7
  40408a:	f100 80bd 	bmi.w	404208 <_malloc_r+0x194>
  40408e:	42b1      	cmp	r1, r6
  404090:	f200 80ba 	bhi.w	404208 <_malloc_r+0x194>
  404094:	f000 fb8e 	bl	4047b4 <__malloc_lock>
  404098:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  40409c:	f0c0 8293 	bcc.w	4045c6 <_malloc_r+0x552>
  4040a0:	0a73      	lsrs	r3, r6, #9
  4040a2:	f000 80b8 	beq.w	404216 <_malloc_r+0x1a2>
  4040a6:	2b04      	cmp	r3, #4
  4040a8:	f200 8179 	bhi.w	40439e <_malloc_r+0x32a>
  4040ac:	09b3      	lsrs	r3, r6, #6
  4040ae:	f103 0039 	add.w	r0, r3, #57	; 0x39
  4040b2:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  4040b6:	00c3      	lsls	r3, r0, #3
  4040b8:	4fbf      	ldr	r7, [pc, #764]	; (4043b8 <_malloc_r+0x344>)
  4040ba:	443b      	add	r3, r7
  4040bc:	f1a3 0108 	sub.w	r1, r3, #8
  4040c0:	685c      	ldr	r4, [r3, #4]
  4040c2:	42a1      	cmp	r1, r4
  4040c4:	d106      	bne.n	4040d4 <_malloc_r+0x60>
  4040c6:	e00c      	b.n	4040e2 <_malloc_r+0x6e>
  4040c8:	2a00      	cmp	r2, #0
  4040ca:	f280 80aa 	bge.w	404222 <_malloc_r+0x1ae>
  4040ce:	68e4      	ldr	r4, [r4, #12]
  4040d0:	42a1      	cmp	r1, r4
  4040d2:	d006      	beq.n	4040e2 <_malloc_r+0x6e>
  4040d4:	6863      	ldr	r3, [r4, #4]
  4040d6:	f023 0303 	bic.w	r3, r3, #3
  4040da:	1b9a      	subs	r2, r3, r6
  4040dc:	2a0f      	cmp	r2, #15
  4040de:	ddf3      	ble.n	4040c8 <_malloc_r+0x54>
  4040e0:	4670      	mov	r0, lr
  4040e2:	693c      	ldr	r4, [r7, #16]
  4040e4:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4043cc <_malloc_r+0x358>
  4040e8:	4574      	cmp	r4, lr
  4040ea:	f000 81ab 	beq.w	404444 <_malloc_r+0x3d0>
  4040ee:	6863      	ldr	r3, [r4, #4]
  4040f0:	f023 0303 	bic.w	r3, r3, #3
  4040f4:	1b9a      	subs	r2, r3, r6
  4040f6:	2a0f      	cmp	r2, #15
  4040f8:	f300 8190 	bgt.w	40441c <_malloc_r+0x3a8>
  4040fc:	2a00      	cmp	r2, #0
  4040fe:	f8c7 e014 	str.w	lr, [r7, #20]
  404102:	f8c7 e010 	str.w	lr, [r7, #16]
  404106:	f280 809d 	bge.w	404244 <_malloc_r+0x1d0>
  40410a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  40410e:	f080 8161 	bcs.w	4043d4 <_malloc_r+0x360>
  404112:	08db      	lsrs	r3, r3, #3
  404114:	f103 0c01 	add.w	ip, r3, #1
  404118:	1099      	asrs	r1, r3, #2
  40411a:	687a      	ldr	r2, [r7, #4]
  40411c:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  404120:	f8c4 8008 	str.w	r8, [r4, #8]
  404124:	2301      	movs	r3, #1
  404126:	408b      	lsls	r3, r1
  404128:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  40412c:	4313      	orrs	r3, r2
  40412e:	3908      	subs	r1, #8
  404130:	60e1      	str	r1, [r4, #12]
  404132:	607b      	str	r3, [r7, #4]
  404134:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404138:	f8c8 400c 	str.w	r4, [r8, #12]
  40413c:	1082      	asrs	r2, r0, #2
  40413e:	2401      	movs	r4, #1
  404140:	4094      	lsls	r4, r2
  404142:	429c      	cmp	r4, r3
  404144:	f200 808b 	bhi.w	40425e <_malloc_r+0x1ea>
  404148:	421c      	tst	r4, r3
  40414a:	d106      	bne.n	40415a <_malloc_r+0xe6>
  40414c:	f020 0003 	bic.w	r0, r0, #3
  404150:	0064      	lsls	r4, r4, #1
  404152:	421c      	tst	r4, r3
  404154:	f100 0004 	add.w	r0, r0, #4
  404158:	d0fa      	beq.n	404150 <_malloc_r+0xdc>
  40415a:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  40415e:	46cc      	mov	ip, r9
  404160:	4680      	mov	r8, r0
  404162:	f8dc 300c 	ldr.w	r3, [ip, #12]
  404166:	459c      	cmp	ip, r3
  404168:	d107      	bne.n	40417a <_malloc_r+0x106>
  40416a:	e16d      	b.n	404448 <_malloc_r+0x3d4>
  40416c:	2a00      	cmp	r2, #0
  40416e:	f280 817b 	bge.w	404468 <_malloc_r+0x3f4>
  404172:	68db      	ldr	r3, [r3, #12]
  404174:	459c      	cmp	ip, r3
  404176:	f000 8167 	beq.w	404448 <_malloc_r+0x3d4>
  40417a:	6859      	ldr	r1, [r3, #4]
  40417c:	f021 0103 	bic.w	r1, r1, #3
  404180:	1b8a      	subs	r2, r1, r6
  404182:	2a0f      	cmp	r2, #15
  404184:	ddf2      	ble.n	40416c <_malloc_r+0xf8>
  404186:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  40418a:	f8d3 8008 	ldr.w	r8, [r3, #8]
  40418e:	9300      	str	r3, [sp, #0]
  404190:	199c      	adds	r4, r3, r6
  404192:	4628      	mov	r0, r5
  404194:	f046 0601 	orr.w	r6, r6, #1
  404198:	f042 0501 	orr.w	r5, r2, #1
  40419c:	605e      	str	r6, [r3, #4]
  40419e:	f8c8 c00c 	str.w	ip, [r8, #12]
  4041a2:	f8cc 8008 	str.w	r8, [ip, #8]
  4041a6:	617c      	str	r4, [r7, #20]
  4041a8:	613c      	str	r4, [r7, #16]
  4041aa:	f8c4 e00c 	str.w	lr, [r4, #12]
  4041ae:	f8c4 e008 	str.w	lr, [r4, #8]
  4041b2:	6065      	str	r5, [r4, #4]
  4041b4:	505a      	str	r2, [r3, r1]
  4041b6:	f000 fb03 	bl	4047c0 <__malloc_unlock>
  4041ba:	9b00      	ldr	r3, [sp, #0]
  4041bc:	f103 0408 	add.w	r4, r3, #8
  4041c0:	e01e      	b.n	404200 <_malloc_r+0x18c>
  4041c2:	2910      	cmp	r1, #16
  4041c4:	d820      	bhi.n	404208 <_malloc_r+0x194>
  4041c6:	f000 faf5 	bl	4047b4 <__malloc_lock>
  4041ca:	2610      	movs	r6, #16
  4041cc:	2318      	movs	r3, #24
  4041ce:	2002      	movs	r0, #2
  4041d0:	4f79      	ldr	r7, [pc, #484]	; (4043b8 <_malloc_r+0x344>)
  4041d2:	443b      	add	r3, r7
  4041d4:	f1a3 0208 	sub.w	r2, r3, #8
  4041d8:	685c      	ldr	r4, [r3, #4]
  4041da:	4294      	cmp	r4, r2
  4041dc:	f000 813d 	beq.w	40445a <_malloc_r+0x3e6>
  4041e0:	6863      	ldr	r3, [r4, #4]
  4041e2:	68e1      	ldr	r1, [r4, #12]
  4041e4:	68a6      	ldr	r6, [r4, #8]
  4041e6:	f023 0303 	bic.w	r3, r3, #3
  4041ea:	4423      	add	r3, r4
  4041ec:	4628      	mov	r0, r5
  4041ee:	685a      	ldr	r2, [r3, #4]
  4041f0:	60f1      	str	r1, [r6, #12]
  4041f2:	f042 0201 	orr.w	r2, r2, #1
  4041f6:	608e      	str	r6, [r1, #8]
  4041f8:	605a      	str	r2, [r3, #4]
  4041fa:	f000 fae1 	bl	4047c0 <__malloc_unlock>
  4041fe:	3408      	adds	r4, #8
  404200:	4620      	mov	r0, r4
  404202:	b003      	add	sp, #12
  404204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404208:	2400      	movs	r4, #0
  40420a:	230c      	movs	r3, #12
  40420c:	4620      	mov	r0, r4
  40420e:	602b      	str	r3, [r5, #0]
  404210:	b003      	add	sp, #12
  404212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404216:	2040      	movs	r0, #64	; 0x40
  404218:	f44f 7300 	mov.w	r3, #512	; 0x200
  40421c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  404220:	e74a      	b.n	4040b8 <_malloc_r+0x44>
  404222:	4423      	add	r3, r4
  404224:	68e1      	ldr	r1, [r4, #12]
  404226:	685a      	ldr	r2, [r3, #4]
  404228:	68a6      	ldr	r6, [r4, #8]
  40422a:	f042 0201 	orr.w	r2, r2, #1
  40422e:	60f1      	str	r1, [r6, #12]
  404230:	4628      	mov	r0, r5
  404232:	608e      	str	r6, [r1, #8]
  404234:	605a      	str	r2, [r3, #4]
  404236:	f000 fac3 	bl	4047c0 <__malloc_unlock>
  40423a:	3408      	adds	r4, #8
  40423c:	4620      	mov	r0, r4
  40423e:	b003      	add	sp, #12
  404240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404244:	4423      	add	r3, r4
  404246:	4628      	mov	r0, r5
  404248:	685a      	ldr	r2, [r3, #4]
  40424a:	f042 0201 	orr.w	r2, r2, #1
  40424e:	605a      	str	r2, [r3, #4]
  404250:	f000 fab6 	bl	4047c0 <__malloc_unlock>
  404254:	3408      	adds	r4, #8
  404256:	4620      	mov	r0, r4
  404258:	b003      	add	sp, #12
  40425a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40425e:	68bc      	ldr	r4, [r7, #8]
  404260:	6863      	ldr	r3, [r4, #4]
  404262:	f023 0803 	bic.w	r8, r3, #3
  404266:	45b0      	cmp	r8, r6
  404268:	d304      	bcc.n	404274 <_malloc_r+0x200>
  40426a:	eba8 0306 	sub.w	r3, r8, r6
  40426e:	2b0f      	cmp	r3, #15
  404270:	f300 8085 	bgt.w	40437e <_malloc_r+0x30a>
  404274:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4043d0 <_malloc_r+0x35c>
  404278:	4b50      	ldr	r3, [pc, #320]	; (4043bc <_malloc_r+0x348>)
  40427a:	f8d9 2000 	ldr.w	r2, [r9]
  40427e:	681b      	ldr	r3, [r3, #0]
  404280:	3201      	adds	r2, #1
  404282:	4433      	add	r3, r6
  404284:	eb04 0a08 	add.w	sl, r4, r8
  404288:	f000 8155 	beq.w	404536 <_malloc_r+0x4c2>
  40428c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404290:	330f      	adds	r3, #15
  404292:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  404296:	f02b 0b0f 	bic.w	fp, fp, #15
  40429a:	4659      	mov	r1, fp
  40429c:	4628      	mov	r0, r5
  40429e:	f000 fd8f 	bl	404dc0 <_sbrk_r>
  4042a2:	1c41      	adds	r1, r0, #1
  4042a4:	4602      	mov	r2, r0
  4042a6:	f000 80fc 	beq.w	4044a2 <_malloc_r+0x42e>
  4042aa:	4582      	cmp	sl, r0
  4042ac:	f200 80f7 	bhi.w	40449e <_malloc_r+0x42a>
  4042b0:	4b43      	ldr	r3, [pc, #268]	; (4043c0 <_malloc_r+0x34c>)
  4042b2:	6819      	ldr	r1, [r3, #0]
  4042b4:	4459      	add	r1, fp
  4042b6:	6019      	str	r1, [r3, #0]
  4042b8:	f000 814d 	beq.w	404556 <_malloc_r+0x4e2>
  4042bc:	f8d9 0000 	ldr.w	r0, [r9]
  4042c0:	3001      	adds	r0, #1
  4042c2:	bf1b      	ittet	ne
  4042c4:	eba2 0a0a 	subne.w	sl, r2, sl
  4042c8:	4451      	addne	r1, sl
  4042ca:	f8c9 2000 	streq.w	r2, [r9]
  4042ce:	6019      	strne	r1, [r3, #0]
  4042d0:	f012 0107 	ands.w	r1, r2, #7
  4042d4:	f000 8115 	beq.w	404502 <_malloc_r+0x48e>
  4042d8:	f1c1 0008 	rsb	r0, r1, #8
  4042dc:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4042e0:	4402      	add	r2, r0
  4042e2:	3108      	adds	r1, #8
  4042e4:	eb02 090b 	add.w	r9, r2, fp
  4042e8:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4042ec:	eba1 0909 	sub.w	r9, r1, r9
  4042f0:	4649      	mov	r1, r9
  4042f2:	4628      	mov	r0, r5
  4042f4:	9301      	str	r3, [sp, #4]
  4042f6:	9200      	str	r2, [sp, #0]
  4042f8:	f000 fd62 	bl	404dc0 <_sbrk_r>
  4042fc:	1c43      	adds	r3, r0, #1
  4042fe:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404302:	f000 8143 	beq.w	40458c <_malloc_r+0x518>
  404306:	1a80      	subs	r0, r0, r2
  404308:	4448      	add	r0, r9
  40430a:	f040 0001 	orr.w	r0, r0, #1
  40430e:	6819      	ldr	r1, [r3, #0]
  404310:	60ba      	str	r2, [r7, #8]
  404312:	4449      	add	r1, r9
  404314:	42bc      	cmp	r4, r7
  404316:	6050      	str	r0, [r2, #4]
  404318:	6019      	str	r1, [r3, #0]
  40431a:	d017      	beq.n	40434c <_malloc_r+0x2d8>
  40431c:	f1b8 0f0f 	cmp.w	r8, #15
  404320:	f240 80fb 	bls.w	40451a <_malloc_r+0x4a6>
  404324:	6860      	ldr	r0, [r4, #4]
  404326:	f1a8 020c 	sub.w	r2, r8, #12
  40432a:	f022 0207 	bic.w	r2, r2, #7
  40432e:	eb04 0e02 	add.w	lr, r4, r2
  404332:	f000 0001 	and.w	r0, r0, #1
  404336:	f04f 0c05 	mov.w	ip, #5
  40433a:	4310      	orrs	r0, r2
  40433c:	2a0f      	cmp	r2, #15
  40433e:	6060      	str	r0, [r4, #4]
  404340:	f8ce c004 	str.w	ip, [lr, #4]
  404344:	f8ce c008 	str.w	ip, [lr, #8]
  404348:	f200 8117 	bhi.w	40457a <_malloc_r+0x506>
  40434c:	4b1d      	ldr	r3, [pc, #116]	; (4043c4 <_malloc_r+0x350>)
  40434e:	68bc      	ldr	r4, [r7, #8]
  404350:	681a      	ldr	r2, [r3, #0]
  404352:	4291      	cmp	r1, r2
  404354:	bf88      	it	hi
  404356:	6019      	strhi	r1, [r3, #0]
  404358:	4b1b      	ldr	r3, [pc, #108]	; (4043c8 <_malloc_r+0x354>)
  40435a:	681a      	ldr	r2, [r3, #0]
  40435c:	4291      	cmp	r1, r2
  40435e:	6862      	ldr	r2, [r4, #4]
  404360:	bf88      	it	hi
  404362:	6019      	strhi	r1, [r3, #0]
  404364:	f022 0203 	bic.w	r2, r2, #3
  404368:	4296      	cmp	r6, r2
  40436a:	eba2 0306 	sub.w	r3, r2, r6
  40436e:	d801      	bhi.n	404374 <_malloc_r+0x300>
  404370:	2b0f      	cmp	r3, #15
  404372:	dc04      	bgt.n	40437e <_malloc_r+0x30a>
  404374:	4628      	mov	r0, r5
  404376:	f000 fa23 	bl	4047c0 <__malloc_unlock>
  40437a:	2400      	movs	r4, #0
  40437c:	e740      	b.n	404200 <_malloc_r+0x18c>
  40437e:	19a2      	adds	r2, r4, r6
  404380:	f043 0301 	orr.w	r3, r3, #1
  404384:	f046 0601 	orr.w	r6, r6, #1
  404388:	6066      	str	r6, [r4, #4]
  40438a:	4628      	mov	r0, r5
  40438c:	60ba      	str	r2, [r7, #8]
  40438e:	6053      	str	r3, [r2, #4]
  404390:	f000 fa16 	bl	4047c0 <__malloc_unlock>
  404394:	3408      	adds	r4, #8
  404396:	4620      	mov	r0, r4
  404398:	b003      	add	sp, #12
  40439a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40439e:	2b14      	cmp	r3, #20
  4043a0:	d971      	bls.n	404486 <_malloc_r+0x412>
  4043a2:	2b54      	cmp	r3, #84	; 0x54
  4043a4:	f200 80a3 	bhi.w	4044ee <_malloc_r+0x47a>
  4043a8:	0b33      	lsrs	r3, r6, #12
  4043aa:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  4043ae:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  4043b2:	00c3      	lsls	r3, r0, #3
  4043b4:	e680      	b.n	4040b8 <_malloc_r+0x44>
  4043b6:	bf00      	nop
  4043b8:	20400454 	.word	0x20400454
  4043bc:	20400cac 	.word	0x20400cac
  4043c0:	20400c7c 	.word	0x20400c7c
  4043c4:	20400ca4 	.word	0x20400ca4
  4043c8:	20400ca8 	.word	0x20400ca8
  4043cc:	2040045c 	.word	0x2040045c
  4043d0:	2040085c 	.word	0x2040085c
  4043d4:	0a5a      	lsrs	r2, r3, #9
  4043d6:	2a04      	cmp	r2, #4
  4043d8:	d95b      	bls.n	404492 <_malloc_r+0x41e>
  4043da:	2a14      	cmp	r2, #20
  4043dc:	f200 80ae 	bhi.w	40453c <_malloc_r+0x4c8>
  4043e0:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4043e4:	00c9      	lsls	r1, r1, #3
  4043e6:	325b      	adds	r2, #91	; 0x5b
  4043e8:	eb07 0c01 	add.w	ip, r7, r1
  4043ec:	5879      	ldr	r1, [r7, r1]
  4043ee:	f1ac 0c08 	sub.w	ip, ip, #8
  4043f2:	458c      	cmp	ip, r1
  4043f4:	f000 8088 	beq.w	404508 <_malloc_r+0x494>
  4043f8:	684a      	ldr	r2, [r1, #4]
  4043fa:	f022 0203 	bic.w	r2, r2, #3
  4043fe:	4293      	cmp	r3, r2
  404400:	d273      	bcs.n	4044ea <_malloc_r+0x476>
  404402:	6889      	ldr	r1, [r1, #8]
  404404:	458c      	cmp	ip, r1
  404406:	d1f7      	bne.n	4043f8 <_malloc_r+0x384>
  404408:	f8dc 200c 	ldr.w	r2, [ip, #12]
  40440c:	687b      	ldr	r3, [r7, #4]
  40440e:	60e2      	str	r2, [r4, #12]
  404410:	f8c4 c008 	str.w	ip, [r4, #8]
  404414:	6094      	str	r4, [r2, #8]
  404416:	f8cc 400c 	str.w	r4, [ip, #12]
  40441a:	e68f      	b.n	40413c <_malloc_r+0xc8>
  40441c:	19a1      	adds	r1, r4, r6
  40441e:	f046 0c01 	orr.w	ip, r6, #1
  404422:	f042 0601 	orr.w	r6, r2, #1
  404426:	f8c4 c004 	str.w	ip, [r4, #4]
  40442a:	4628      	mov	r0, r5
  40442c:	6179      	str	r1, [r7, #20]
  40442e:	6139      	str	r1, [r7, #16]
  404430:	f8c1 e00c 	str.w	lr, [r1, #12]
  404434:	f8c1 e008 	str.w	lr, [r1, #8]
  404438:	604e      	str	r6, [r1, #4]
  40443a:	50e2      	str	r2, [r4, r3]
  40443c:	f000 f9c0 	bl	4047c0 <__malloc_unlock>
  404440:	3408      	adds	r4, #8
  404442:	e6dd      	b.n	404200 <_malloc_r+0x18c>
  404444:	687b      	ldr	r3, [r7, #4]
  404446:	e679      	b.n	40413c <_malloc_r+0xc8>
  404448:	f108 0801 	add.w	r8, r8, #1
  40444c:	f018 0f03 	tst.w	r8, #3
  404450:	f10c 0c08 	add.w	ip, ip, #8
  404454:	f47f ae85 	bne.w	404162 <_malloc_r+0xee>
  404458:	e02d      	b.n	4044b6 <_malloc_r+0x442>
  40445a:	68dc      	ldr	r4, [r3, #12]
  40445c:	42a3      	cmp	r3, r4
  40445e:	bf08      	it	eq
  404460:	3002      	addeq	r0, #2
  404462:	f43f ae3e 	beq.w	4040e2 <_malloc_r+0x6e>
  404466:	e6bb      	b.n	4041e0 <_malloc_r+0x16c>
  404468:	4419      	add	r1, r3
  40446a:	461c      	mov	r4, r3
  40446c:	684a      	ldr	r2, [r1, #4]
  40446e:	68db      	ldr	r3, [r3, #12]
  404470:	f854 6f08 	ldr.w	r6, [r4, #8]!
  404474:	f042 0201 	orr.w	r2, r2, #1
  404478:	604a      	str	r2, [r1, #4]
  40447a:	4628      	mov	r0, r5
  40447c:	60f3      	str	r3, [r6, #12]
  40447e:	609e      	str	r6, [r3, #8]
  404480:	f000 f99e 	bl	4047c0 <__malloc_unlock>
  404484:	e6bc      	b.n	404200 <_malloc_r+0x18c>
  404486:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  40448a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  40448e:	00c3      	lsls	r3, r0, #3
  404490:	e612      	b.n	4040b8 <_malloc_r+0x44>
  404492:	099a      	lsrs	r2, r3, #6
  404494:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404498:	00c9      	lsls	r1, r1, #3
  40449a:	3238      	adds	r2, #56	; 0x38
  40449c:	e7a4      	b.n	4043e8 <_malloc_r+0x374>
  40449e:	42bc      	cmp	r4, r7
  4044a0:	d054      	beq.n	40454c <_malloc_r+0x4d8>
  4044a2:	68bc      	ldr	r4, [r7, #8]
  4044a4:	6862      	ldr	r2, [r4, #4]
  4044a6:	f022 0203 	bic.w	r2, r2, #3
  4044aa:	e75d      	b.n	404368 <_malloc_r+0x2f4>
  4044ac:	f859 3908 	ldr.w	r3, [r9], #-8
  4044b0:	4599      	cmp	r9, r3
  4044b2:	f040 8086 	bne.w	4045c2 <_malloc_r+0x54e>
  4044b6:	f010 0f03 	tst.w	r0, #3
  4044ba:	f100 30ff 	add.w	r0, r0, #4294967295
  4044be:	d1f5      	bne.n	4044ac <_malloc_r+0x438>
  4044c0:	687b      	ldr	r3, [r7, #4]
  4044c2:	ea23 0304 	bic.w	r3, r3, r4
  4044c6:	607b      	str	r3, [r7, #4]
  4044c8:	0064      	lsls	r4, r4, #1
  4044ca:	429c      	cmp	r4, r3
  4044cc:	f63f aec7 	bhi.w	40425e <_malloc_r+0x1ea>
  4044d0:	2c00      	cmp	r4, #0
  4044d2:	f43f aec4 	beq.w	40425e <_malloc_r+0x1ea>
  4044d6:	421c      	tst	r4, r3
  4044d8:	4640      	mov	r0, r8
  4044da:	f47f ae3e 	bne.w	40415a <_malloc_r+0xe6>
  4044de:	0064      	lsls	r4, r4, #1
  4044e0:	421c      	tst	r4, r3
  4044e2:	f100 0004 	add.w	r0, r0, #4
  4044e6:	d0fa      	beq.n	4044de <_malloc_r+0x46a>
  4044e8:	e637      	b.n	40415a <_malloc_r+0xe6>
  4044ea:	468c      	mov	ip, r1
  4044ec:	e78c      	b.n	404408 <_malloc_r+0x394>
  4044ee:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4044f2:	d815      	bhi.n	404520 <_malloc_r+0x4ac>
  4044f4:	0bf3      	lsrs	r3, r6, #15
  4044f6:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4044fa:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4044fe:	00c3      	lsls	r3, r0, #3
  404500:	e5da      	b.n	4040b8 <_malloc_r+0x44>
  404502:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  404506:	e6ed      	b.n	4042e4 <_malloc_r+0x270>
  404508:	687b      	ldr	r3, [r7, #4]
  40450a:	1092      	asrs	r2, r2, #2
  40450c:	2101      	movs	r1, #1
  40450e:	fa01 f202 	lsl.w	r2, r1, r2
  404512:	4313      	orrs	r3, r2
  404514:	607b      	str	r3, [r7, #4]
  404516:	4662      	mov	r2, ip
  404518:	e779      	b.n	40440e <_malloc_r+0x39a>
  40451a:	2301      	movs	r3, #1
  40451c:	6053      	str	r3, [r2, #4]
  40451e:	e729      	b.n	404374 <_malloc_r+0x300>
  404520:	f240 5254 	movw	r2, #1364	; 0x554
  404524:	4293      	cmp	r3, r2
  404526:	d822      	bhi.n	40456e <_malloc_r+0x4fa>
  404528:	0cb3      	lsrs	r3, r6, #18
  40452a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  40452e:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  404532:	00c3      	lsls	r3, r0, #3
  404534:	e5c0      	b.n	4040b8 <_malloc_r+0x44>
  404536:	f103 0b10 	add.w	fp, r3, #16
  40453a:	e6ae      	b.n	40429a <_malloc_r+0x226>
  40453c:	2a54      	cmp	r2, #84	; 0x54
  40453e:	d829      	bhi.n	404594 <_malloc_r+0x520>
  404540:	0b1a      	lsrs	r2, r3, #12
  404542:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  404546:	00c9      	lsls	r1, r1, #3
  404548:	326e      	adds	r2, #110	; 0x6e
  40454a:	e74d      	b.n	4043e8 <_malloc_r+0x374>
  40454c:	4b20      	ldr	r3, [pc, #128]	; (4045d0 <_malloc_r+0x55c>)
  40454e:	6819      	ldr	r1, [r3, #0]
  404550:	4459      	add	r1, fp
  404552:	6019      	str	r1, [r3, #0]
  404554:	e6b2      	b.n	4042bc <_malloc_r+0x248>
  404556:	f3ca 000b 	ubfx	r0, sl, #0, #12
  40455a:	2800      	cmp	r0, #0
  40455c:	f47f aeae 	bne.w	4042bc <_malloc_r+0x248>
  404560:	eb08 030b 	add.w	r3, r8, fp
  404564:	68ba      	ldr	r2, [r7, #8]
  404566:	f043 0301 	orr.w	r3, r3, #1
  40456a:	6053      	str	r3, [r2, #4]
  40456c:	e6ee      	b.n	40434c <_malloc_r+0x2d8>
  40456e:	207f      	movs	r0, #127	; 0x7f
  404570:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  404574:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404578:	e59e      	b.n	4040b8 <_malloc_r+0x44>
  40457a:	f104 0108 	add.w	r1, r4, #8
  40457e:	4628      	mov	r0, r5
  404580:	9300      	str	r3, [sp, #0]
  404582:	f000 fe0b 	bl	40519c <_free_r>
  404586:	9b00      	ldr	r3, [sp, #0]
  404588:	6819      	ldr	r1, [r3, #0]
  40458a:	e6df      	b.n	40434c <_malloc_r+0x2d8>
  40458c:	2001      	movs	r0, #1
  40458e:	f04f 0900 	mov.w	r9, #0
  404592:	e6bc      	b.n	40430e <_malloc_r+0x29a>
  404594:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404598:	d805      	bhi.n	4045a6 <_malloc_r+0x532>
  40459a:	0bda      	lsrs	r2, r3, #15
  40459c:	f102 0178 	add.w	r1, r2, #120	; 0x78
  4045a0:	00c9      	lsls	r1, r1, #3
  4045a2:	3277      	adds	r2, #119	; 0x77
  4045a4:	e720      	b.n	4043e8 <_malloc_r+0x374>
  4045a6:	f240 5154 	movw	r1, #1364	; 0x554
  4045aa:	428a      	cmp	r2, r1
  4045ac:	d805      	bhi.n	4045ba <_malloc_r+0x546>
  4045ae:	0c9a      	lsrs	r2, r3, #18
  4045b0:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  4045b4:	00c9      	lsls	r1, r1, #3
  4045b6:	327c      	adds	r2, #124	; 0x7c
  4045b8:	e716      	b.n	4043e8 <_malloc_r+0x374>
  4045ba:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  4045be:	227e      	movs	r2, #126	; 0x7e
  4045c0:	e712      	b.n	4043e8 <_malloc_r+0x374>
  4045c2:	687b      	ldr	r3, [r7, #4]
  4045c4:	e780      	b.n	4044c8 <_malloc_r+0x454>
  4045c6:	08f0      	lsrs	r0, r6, #3
  4045c8:	f106 0308 	add.w	r3, r6, #8
  4045cc:	e600      	b.n	4041d0 <_malloc_r+0x15c>
  4045ce:	bf00      	nop
  4045d0:	20400c7c 	.word	0x20400c7c
	...

004045e0 <memchr>:
  4045e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4045e4:	2a10      	cmp	r2, #16
  4045e6:	db2b      	blt.n	404640 <memchr+0x60>
  4045e8:	f010 0f07 	tst.w	r0, #7
  4045ec:	d008      	beq.n	404600 <memchr+0x20>
  4045ee:	f810 3b01 	ldrb.w	r3, [r0], #1
  4045f2:	3a01      	subs	r2, #1
  4045f4:	428b      	cmp	r3, r1
  4045f6:	d02d      	beq.n	404654 <memchr+0x74>
  4045f8:	f010 0f07 	tst.w	r0, #7
  4045fc:	b342      	cbz	r2, 404650 <memchr+0x70>
  4045fe:	d1f6      	bne.n	4045ee <memchr+0xe>
  404600:	b4f0      	push	{r4, r5, r6, r7}
  404602:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  404606:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40460a:	f022 0407 	bic.w	r4, r2, #7
  40460e:	f07f 0700 	mvns.w	r7, #0
  404612:	2300      	movs	r3, #0
  404614:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  404618:	3c08      	subs	r4, #8
  40461a:	ea85 0501 	eor.w	r5, r5, r1
  40461e:	ea86 0601 	eor.w	r6, r6, r1
  404622:	fa85 f547 	uadd8	r5, r5, r7
  404626:	faa3 f587 	sel	r5, r3, r7
  40462a:	fa86 f647 	uadd8	r6, r6, r7
  40462e:	faa5 f687 	sel	r6, r5, r7
  404632:	b98e      	cbnz	r6, 404658 <memchr+0x78>
  404634:	d1ee      	bne.n	404614 <memchr+0x34>
  404636:	bcf0      	pop	{r4, r5, r6, r7}
  404638:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40463c:	f002 0207 	and.w	r2, r2, #7
  404640:	b132      	cbz	r2, 404650 <memchr+0x70>
  404642:	f810 3b01 	ldrb.w	r3, [r0], #1
  404646:	3a01      	subs	r2, #1
  404648:	ea83 0301 	eor.w	r3, r3, r1
  40464c:	b113      	cbz	r3, 404654 <memchr+0x74>
  40464e:	d1f8      	bne.n	404642 <memchr+0x62>
  404650:	2000      	movs	r0, #0
  404652:	4770      	bx	lr
  404654:	3801      	subs	r0, #1
  404656:	4770      	bx	lr
  404658:	2d00      	cmp	r5, #0
  40465a:	bf06      	itte	eq
  40465c:	4635      	moveq	r5, r6
  40465e:	3803      	subeq	r0, #3
  404660:	3807      	subne	r0, #7
  404662:	f015 0f01 	tst.w	r5, #1
  404666:	d107      	bne.n	404678 <memchr+0x98>
  404668:	3001      	adds	r0, #1
  40466a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40466e:	bf02      	ittt	eq
  404670:	3001      	addeq	r0, #1
  404672:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404676:	3001      	addeq	r0, #1
  404678:	bcf0      	pop	{r4, r5, r6, r7}
  40467a:	3801      	subs	r0, #1
  40467c:	4770      	bx	lr
  40467e:	bf00      	nop

00404680 <memcpy>:
  404680:	4684      	mov	ip, r0
  404682:	ea41 0300 	orr.w	r3, r1, r0
  404686:	f013 0303 	ands.w	r3, r3, #3
  40468a:	d16d      	bne.n	404768 <memcpy+0xe8>
  40468c:	3a40      	subs	r2, #64	; 0x40
  40468e:	d341      	bcc.n	404714 <memcpy+0x94>
  404690:	f851 3b04 	ldr.w	r3, [r1], #4
  404694:	f840 3b04 	str.w	r3, [r0], #4
  404698:	f851 3b04 	ldr.w	r3, [r1], #4
  40469c:	f840 3b04 	str.w	r3, [r0], #4
  4046a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4046a4:	f840 3b04 	str.w	r3, [r0], #4
  4046a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4046ac:	f840 3b04 	str.w	r3, [r0], #4
  4046b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4046b4:	f840 3b04 	str.w	r3, [r0], #4
  4046b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4046bc:	f840 3b04 	str.w	r3, [r0], #4
  4046c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4046c4:	f840 3b04 	str.w	r3, [r0], #4
  4046c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4046cc:	f840 3b04 	str.w	r3, [r0], #4
  4046d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4046d4:	f840 3b04 	str.w	r3, [r0], #4
  4046d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4046dc:	f840 3b04 	str.w	r3, [r0], #4
  4046e0:	f851 3b04 	ldr.w	r3, [r1], #4
  4046e4:	f840 3b04 	str.w	r3, [r0], #4
  4046e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4046ec:	f840 3b04 	str.w	r3, [r0], #4
  4046f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4046f4:	f840 3b04 	str.w	r3, [r0], #4
  4046f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4046fc:	f840 3b04 	str.w	r3, [r0], #4
  404700:	f851 3b04 	ldr.w	r3, [r1], #4
  404704:	f840 3b04 	str.w	r3, [r0], #4
  404708:	f851 3b04 	ldr.w	r3, [r1], #4
  40470c:	f840 3b04 	str.w	r3, [r0], #4
  404710:	3a40      	subs	r2, #64	; 0x40
  404712:	d2bd      	bcs.n	404690 <memcpy+0x10>
  404714:	3230      	adds	r2, #48	; 0x30
  404716:	d311      	bcc.n	40473c <memcpy+0xbc>
  404718:	f851 3b04 	ldr.w	r3, [r1], #4
  40471c:	f840 3b04 	str.w	r3, [r0], #4
  404720:	f851 3b04 	ldr.w	r3, [r1], #4
  404724:	f840 3b04 	str.w	r3, [r0], #4
  404728:	f851 3b04 	ldr.w	r3, [r1], #4
  40472c:	f840 3b04 	str.w	r3, [r0], #4
  404730:	f851 3b04 	ldr.w	r3, [r1], #4
  404734:	f840 3b04 	str.w	r3, [r0], #4
  404738:	3a10      	subs	r2, #16
  40473a:	d2ed      	bcs.n	404718 <memcpy+0x98>
  40473c:	320c      	adds	r2, #12
  40473e:	d305      	bcc.n	40474c <memcpy+0xcc>
  404740:	f851 3b04 	ldr.w	r3, [r1], #4
  404744:	f840 3b04 	str.w	r3, [r0], #4
  404748:	3a04      	subs	r2, #4
  40474a:	d2f9      	bcs.n	404740 <memcpy+0xc0>
  40474c:	3204      	adds	r2, #4
  40474e:	d008      	beq.n	404762 <memcpy+0xe2>
  404750:	07d2      	lsls	r2, r2, #31
  404752:	bf1c      	itt	ne
  404754:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404758:	f800 3b01 	strbne.w	r3, [r0], #1
  40475c:	d301      	bcc.n	404762 <memcpy+0xe2>
  40475e:	880b      	ldrh	r3, [r1, #0]
  404760:	8003      	strh	r3, [r0, #0]
  404762:	4660      	mov	r0, ip
  404764:	4770      	bx	lr
  404766:	bf00      	nop
  404768:	2a08      	cmp	r2, #8
  40476a:	d313      	bcc.n	404794 <memcpy+0x114>
  40476c:	078b      	lsls	r3, r1, #30
  40476e:	d08d      	beq.n	40468c <memcpy+0xc>
  404770:	f010 0303 	ands.w	r3, r0, #3
  404774:	d08a      	beq.n	40468c <memcpy+0xc>
  404776:	f1c3 0304 	rsb	r3, r3, #4
  40477a:	1ad2      	subs	r2, r2, r3
  40477c:	07db      	lsls	r3, r3, #31
  40477e:	bf1c      	itt	ne
  404780:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404784:	f800 3b01 	strbne.w	r3, [r0], #1
  404788:	d380      	bcc.n	40468c <memcpy+0xc>
  40478a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40478e:	f820 3b02 	strh.w	r3, [r0], #2
  404792:	e77b      	b.n	40468c <memcpy+0xc>
  404794:	3a04      	subs	r2, #4
  404796:	d3d9      	bcc.n	40474c <memcpy+0xcc>
  404798:	3a01      	subs	r2, #1
  40479a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40479e:	f800 3b01 	strb.w	r3, [r0], #1
  4047a2:	d2f9      	bcs.n	404798 <memcpy+0x118>
  4047a4:	780b      	ldrb	r3, [r1, #0]
  4047a6:	7003      	strb	r3, [r0, #0]
  4047a8:	784b      	ldrb	r3, [r1, #1]
  4047aa:	7043      	strb	r3, [r0, #1]
  4047ac:	788b      	ldrb	r3, [r1, #2]
  4047ae:	7083      	strb	r3, [r0, #2]
  4047b0:	4660      	mov	r0, ip
  4047b2:	4770      	bx	lr

004047b4 <__malloc_lock>:
  4047b4:	4801      	ldr	r0, [pc, #4]	; (4047bc <__malloc_lock+0x8>)
  4047b6:	f7ff bc59 	b.w	40406c <__retarget_lock_acquire_recursive>
  4047ba:	bf00      	nop
  4047bc:	20400cc0 	.word	0x20400cc0

004047c0 <__malloc_unlock>:
  4047c0:	4801      	ldr	r0, [pc, #4]	; (4047c8 <__malloc_unlock+0x8>)
  4047c2:	f7ff bc55 	b.w	404070 <__retarget_lock_release_recursive>
  4047c6:	bf00      	nop
  4047c8:	20400cc0 	.word	0x20400cc0

004047cc <_Balloc>:
  4047cc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4047ce:	b570      	push	{r4, r5, r6, lr}
  4047d0:	4605      	mov	r5, r0
  4047d2:	460c      	mov	r4, r1
  4047d4:	b14b      	cbz	r3, 4047ea <_Balloc+0x1e>
  4047d6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  4047da:	b180      	cbz	r0, 4047fe <_Balloc+0x32>
  4047dc:	6802      	ldr	r2, [r0, #0]
  4047de:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  4047e2:	2300      	movs	r3, #0
  4047e4:	6103      	str	r3, [r0, #16]
  4047e6:	60c3      	str	r3, [r0, #12]
  4047e8:	bd70      	pop	{r4, r5, r6, pc}
  4047ea:	2221      	movs	r2, #33	; 0x21
  4047ec:	2104      	movs	r1, #4
  4047ee:	f000 fc55 	bl	40509c <_calloc_r>
  4047f2:	64e8      	str	r0, [r5, #76]	; 0x4c
  4047f4:	4603      	mov	r3, r0
  4047f6:	2800      	cmp	r0, #0
  4047f8:	d1ed      	bne.n	4047d6 <_Balloc+0xa>
  4047fa:	2000      	movs	r0, #0
  4047fc:	bd70      	pop	{r4, r5, r6, pc}
  4047fe:	2101      	movs	r1, #1
  404800:	fa01 f604 	lsl.w	r6, r1, r4
  404804:	1d72      	adds	r2, r6, #5
  404806:	4628      	mov	r0, r5
  404808:	0092      	lsls	r2, r2, #2
  40480a:	f000 fc47 	bl	40509c <_calloc_r>
  40480e:	2800      	cmp	r0, #0
  404810:	d0f3      	beq.n	4047fa <_Balloc+0x2e>
  404812:	6044      	str	r4, [r0, #4]
  404814:	6086      	str	r6, [r0, #8]
  404816:	e7e4      	b.n	4047e2 <_Balloc+0x16>

00404818 <_Bfree>:
  404818:	b131      	cbz	r1, 404828 <_Bfree+0x10>
  40481a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40481c:	684a      	ldr	r2, [r1, #4]
  40481e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  404822:	6008      	str	r0, [r1, #0]
  404824:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  404828:	4770      	bx	lr
  40482a:	bf00      	nop

0040482c <__multadd>:
  40482c:	b5f0      	push	{r4, r5, r6, r7, lr}
  40482e:	690c      	ldr	r4, [r1, #16]
  404830:	b083      	sub	sp, #12
  404832:	460d      	mov	r5, r1
  404834:	4606      	mov	r6, r0
  404836:	f101 0e14 	add.w	lr, r1, #20
  40483a:	2700      	movs	r7, #0
  40483c:	f8de 0000 	ldr.w	r0, [lr]
  404840:	b281      	uxth	r1, r0
  404842:	fb02 3301 	mla	r3, r2, r1, r3
  404846:	0c01      	lsrs	r1, r0, #16
  404848:	0c18      	lsrs	r0, r3, #16
  40484a:	fb02 0101 	mla	r1, r2, r1, r0
  40484e:	b29b      	uxth	r3, r3
  404850:	3701      	adds	r7, #1
  404852:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404856:	42bc      	cmp	r4, r7
  404858:	f84e 3b04 	str.w	r3, [lr], #4
  40485c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404860:	dcec      	bgt.n	40483c <__multadd+0x10>
  404862:	b13b      	cbz	r3, 404874 <__multadd+0x48>
  404864:	68aa      	ldr	r2, [r5, #8]
  404866:	4294      	cmp	r4, r2
  404868:	da07      	bge.n	40487a <__multadd+0x4e>
  40486a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40486e:	3401      	adds	r4, #1
  404870:	6153      	str	r3, [r2, #20]
  404872:	612c      	str	r4, [r5, #16]
  404874:	4628      	mov	r0, r5
  404876:	b003      	add	sp, #12
  404878:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40487a:	6869      	ldr	r1, [r5, #4]
  40487c:	9301      	str	r3, [sp, #4]
  40487e:	3101      	adds	r1, #1
  404880:	4630      	mov	r0, r6
  404882:	f7ff ffa3 	bl	4047cc <_Balloc>
  404886:	692a      	ldr	r2, [r5, #16]
  404888:	3202      	adds	r2, #2
  40488a:	f105 010c 	add.w	r1, r5, #12
  40488e:	4607      	mov	r7, r0
  404890:	0092      	lsls	r2, r2, #2
  404892:	300c      	adds	r0, #12
  404894:	f7ff fef4 	bl	404680 <memcpy>
  404898:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40489a:	6869      	ldr	r1, [r5, #4]
  40489c:	9b01      	ldr	r3, [sp, #4]
  40489e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  4048a2:	6028      	str	r0, [r5, #0]
  4048a4:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  4048a8:	463d      	mov	r5, r7
  4048aa:	e7de      	b.n	40486a <__multadd+0x3e>

004048ac <__hi0bits>:
  4048ac:	0c02      	lsrs	r2, r0, #16
  4048ae:	0412      	lsls	r2, r2, #16
  4048b0:	4603      	mov	r3, r0
  4048b2:	b9b2      	cbnz	r2, 4048e2 <__hi0bits+0x36>
  4048b4:	0403      	lsls	r3, r0, #16
  4048b6:	2010      	movs	r0, #16
  4048b8:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  4048bc:	bf04      	itt	eq
  4048be:	021b      	lsleq	r3, r3, #8
  4048c0:	3008      	addeq	r0, #8
  4048c2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  4048c6:	bf04      	itt	eq
  4048c8:	011b      	lsleq	r3, r3, #4
  4048ca:	3004      	addeq	r0, #4
  4048cc:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  4048d0:	bf04      	itt	eq
  4048d2:	009b      	lsleq	r3, r3, #2
  4048d4:	3002      	addeq	r0, #2
  4048d6:	2b00      	cmp	r3, #0
  4048d8:	db02      	blt.n	4048e0 <__hi0bits+0x34>
  4048da:	005b      	lsls	r3, r3, #1
  4048dc:	d403      	bmi.n	4048e6 <__hi0bits+0x3a>
  4048de:	2020      	movs	r0, #32
  4048e0:	4770      	bx	lr
  4048e2:	2000      	movs	r0, #0
  4048e4:	e7e8      	b.n	4048b8 <__hi0bits+0xc>
  4048e6:	3001      	adds	r0, #1
  4048e8:	4770      	bx	lr
  4048ea:	bf00      	nop

004048ec <__lo0bits>:
  4048ec:	6803      	ldr	r3, [r0, #0]
  4048ee:	f013 0207 	ands.w	r2, r3, #7
  4048f2:	4601      	mov	r1, r0
  4048f4:	d007      	beq.n	404906 <__lo0bits+0x1a>
  4048f6:	07da      	lsls	r2, r3, #31
  4048f8:	d421      	bmi.n	40493e <__lo0bits+0x52>
  4048fa:	0798      	lsls	r0, r3, #30
  4048fc:	d421      	bmi.n	404942 <__lo0bits+0x56>
  4048fe:	089b      	lsrs	r3, r3, #2
  404900:	600b      	str	r3, [r1, #0]
  404902:	2002      	movs	r0, #2
  404904:	4770      	bx	lr
  404906:	b298      	uxth	r0, r3
  404908:	b198      	cbz	r0, 404932 <__lo0bits+0x46>
  40490a:	4610      	mov	r0, r2
  40490c:	f013 0fff 	tst.w	r3, #255	; 0xff
  404910:	bf04      	itt	eq
  404912:	0a1b      	lsreq	r3, r3, #8
  404914:	3008      	addeq	r0, #8
  404916:	071a      	lsls	r2, r3, #28
  404918:	bf04      	itt	eq
  40491a:	091b      	lsreq	r3, r3, #4
  40491c:	3004      	addeq	r0, #4
  40491e:	079a      	lsls	r2, r3, #30
  404920:	bf04      	itt	eq
  404922:	089b      	lsreq	r3, r3, #2
  404924:	3002      	addeq	r0, #2
  404926:	07da      	lsls	r2, r3, #31
  404928:	d407      	bmi.n	40493a <__lo0bits+0x4e>
  40492a:	085b      	lsrs	r3, r3, #1
  40492c:	d104      	bne.n	404938 <__lo0bits+0x4c>
  40492e:	2020      	movs	r0, #32
  404930:	4770      	bx	lr
  404932:	0c1b      	lsrs	r3, r3, #16
  404934:	2010      	movs	r0, #16
  404936:	e7e9      	b.n	40490c <__lo0bits+0x20>
  404938:	3001      	adds	r0, #1
  40493a:	600b      	str	r3, [r1, #0]
  40493c:	4770      	bx	lr
  40493e:	2000      	movs	r0, #0
  404940:	4770      	bx	lr
  404942:	085b      	lsrs	r3, r3, #1
  404944:	600b      	str	r3, [r1, #0]
  404946:	2001      	movs	r0, #1
  404948:	4770      	bx	lr
  40494a:	bf00      	nop

0040494c <__i2b>:
  40494c:	b510      	push	{r4, lr}
  40494e:	460c      	mov	r4, r1
  404950:	2101      	movs	r1, #1
  404952:	f7ff ff3b 	bl	4047cc <_Balloc>
  404956:	2201      	movs	r2, #1
  404958:	6144      	str	r4, [r0, #20]
  40495a:	6102      	str	r2, [r0, #16]
  40495c:	bd10      	pop	{r4, pc}
  40495e:	bf00      	nop

00404960 <__multiply>:
  404960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404964:	690c      	ldr	r4, [r1, #16]
  404966:	6915      	ldr	r5, [r2, #16]
  404968:	42ac      	cmp	r4, r5
  40496a:	b083      	sub	sp, #12
  40496c:	468b      	mov	fp, r1
  40496e:	4616      	mov	r6, r2
  404970:	da04      	bge.n	40497c <__multiply+0x1c>
  404972:	4622      	mov	r2, r4
  404974:	46b3      	mov	fp, r6
  404976:	462c      	mov	r4, r5
  404978:	460e      	mov	r6, r1
  40497a:	4615      	mov	r5, r2
  40497c:	f8db 3008 	ldr.w	r3, [fp, #8]
  404980:	f8db 1004 	ldr.w	r1, [fp, #4]
  404984:	eb04 0805 	add.w	r8, r4, r5
  404988:	4598      	cmp	r8, r3
  40498a:	bfc8      	it	gt
  40498c:	3101      	addgt	r1, #1
  40498e:	f7ff ff1d 	bl	4047cc <_Balloc>
  404992:	f100 0914 	add.w	r9, r0, #20
  404996:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40499a:	45d1      	cmp	r9, sl
  40499c:	9000      	str	r0, [sp, #0]
  40499e:	d205      	bcs.n	4049ac <__multiply+0x4c>
  4049a0:	464b      	mov	r3, r9
  4049a2:	2100      	movs	r1, #0
  4049a4:	f843 1b04 	str.w	r1, [r3], #4
  4049a8:	459a      	cmp	sl, r3
  4049aa:	d8fb      	bhi.n	4049a4 <__multiply+0x44>
  4049ac:	f106 0c14 	add.w	ip, r6, #20
  4049b0:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  4049b4:	f10b 0b14 	add.w	fp, fp, #20
  4049b8:	459c      	cmp	ip, r3
  4049ba:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  4049be:	d24c      	bcs.n	404a5a <__multiply+0xfa>
  4049c0:	f8cd a004 	str.w	sl, [sp, #4]
  4049c4:	469a      	mov	sl, r3
  4049c6:	f8dc 5000 	ldr.w	r5, [ip]
  4049ca:	b2af      	uxth	r7, r5
  4049cc:	b1ef      	cbz	r7, 404a0a <__multiply+0xaa>
  4049ce:	2100      	movs	r1, #0
  4049d0:	464d      	mov	r5, r9
  4049d2:	465e      	mov	r6, fp
  4049d4:	460c      	mov	r4, r1
  4049d6:	f856 2b04 	ldr.w	r2, [r6], #4
  4049da:	6828      	ldr	r0, [r5, #0]
  4049dc:	b293      	uxth	r3, r2
  4049de:	b281      	uxth	r1, r0
  4049e0:	fb07 1303 	mla	r3, r7, r3, r1
  4049e4:	0c12      	lsrs	r2, r2, #16
  4049e6:	0c01      	lsrs	r1, r0, #16
  4049e8:	4423      	add	r3, r4
  4049ea:	fb07 1102 	mla	r1, r7, r2, r1
  4049ee:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4049f2:	b29b      	uxth	r3, r3
  4049f4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4049f8:	45b6      	cmp	lr, r6
  4049fa:	f845 3b04 	str.w	r3, [r5], #4
  4049fe:	ea4f 4411 	mov.w	r4, r1, lsr #16
  404a02:	d8e8      	bhi.n	4049d6 <__multiply+0x76>
  404a04:	602c      	str	r4, [r5, #0]
  404a06:	f8dc 5000 	ldr.w	r5, [ip]
  404a0a:	0c2d      	lsrs	r5, r5, #16
  404a0c:	d01d      	beq.n	404a4a <__multiply+0xea>
  404a0e:	f8d9 3000 	ldr.w	r3, [r9]
  404a12:	4648      	mov	r0, r9
  404a14:	461c      	mov	r4, r3
  404a16:	4659      	mov	r1, fp
  404a18:	2200      	movs	r2, #0
  404a1a:	880e      	ldrh	r6, [r1, #0]
  404a1c:	0c24      	lsrs	r4, r4, #16
  404a1e:	fb05 4406 	mla	r4, r5, r6, r4
  404a22:	4422      	add	r2, r4
  404a24:	b29b      	uxth	r3, r3
  404a26:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404a2a:	f840 3b04 	str.w	r3, [r0], #4
  404a2e:	f851 3b04 	ldr.w	r3, [r1], #4
  404a32:	6804      	ldr	r4, [r0, #0]
  404a34:	0c1b      	lsrs	r3, r3, #16
  404a36:	b2a6      	uxth	r6, r4
  404a38:	fb05 6303 	mla	r3, r5, r3, r6
  404a3c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404a40:	458e      	cmp	lr, r1
  404a42:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404a46:	d8e8      	bhi.n	404a1a <__multiply+0xba>
  404a48:	6003      	str	r3, [r0, #0]
  404a4a:	f10c 0c04 	add.w	ip, ip, #4
  404a4e:	45e2      	cmp	sl, ip
  404a50:	f109 0904 	add.w	r9, r9, #4
  404a54:	d8b7      	bhi.n	4049c6 <__multiply+0x66>
  404a56:	f8dd a004 	ldr.w	sl, [sp, #4]
  404a5a:	f1b8 0f00 	cmp.w	r8, #0
  404a5e:	dd0b      	ble.n	404a78 <__multiply+0x118>
  404a60:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404a64:	f1aa 0a04 	sub.w	sl, sl, #4
  404a68:	b11b      	cbz	r3, 404a72 <__multiply+0x112>
  404a6a:	e005      	b.n	404a78 <__multiply+0x118>
  404a6c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404a70:	b913      	cbnz	r3, 404a78 <__multiply+0x118>
  404a72:	f1b8 0801 	subs.w	r8, r8, #1
  404a76:	d1f9      	bne.n	404a6c <__multiply+0x10c>
  404a78:	9800      	ldr	r0, [sp, #0]
  404a7a:	f8c0 8010 	str.w	r8, [r0, #16]
  404a7e:	b003      	add	sp, #12
  404a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404a84 <__pow5mult>:
  404a84:	f012 0303 	ands.w	r3, r2, #3
  404a88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404a8c:	4614      	mov	r4, r2
  404a8e:	4607      	mov	r7, r0
  404a90:	d12e      	bne.n	404af0 <__pow5mult+0x6c>
  404a92:	460d      	mov	r5, r1
  404a94:	10a4      	asrs	r4, r4, #2
  404a96:	d01c      	beq.n	404ad2 <__pow5mult+0x4e>
  404a98:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  404a9a:	b396      	cbz	r6, 404b02 <__pow5mult+0x7e>
  404a9c:	07e3      	lsls	r3, r4, #31
  404a9e:	f04f 0800 	mov.w	r8, #0
  404aa2:	d406      	bmi.n	404ab2 <__pow5mult+0x2e>
  404aa4:	1064      	asrs	r4, r4, #1
  404aa6:	d014      	beq.n	404ad2 <__pow5mult+0x4e>
  404aa8:	6830      	ldr	r0, [r6, #0]
  404aaa:	b1a8      	cbz	r0, 404ad8 <__pow5mult+0x54>
  404aac:	4606      	mov	r6, r0
  404aae:	07e3      	lsls	r3, r4, #31
  404ab0:	d5f8      	bpl.n	404aa4 <__pow5mult+0x20>
  404ab2:	4632      	mov	r2, r6
  404ab4:	4629      	mov	r1, r5
  404ab6:	4638      	mov	r0, r7
  404ab8:	f7ff ff52 	bl	404960 <__multiply>
  404abc:	b1b5      	cbz	r5, 404aec <__pow5mult+0x68>
  404abe:	686a      	ldr	r2, [r5, #4]
  404ac0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404ac2:	1064      	asrs	r4, r4, #1
  404ac4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404ac8:	6029      	str	r1, [r5, #0]
  404aca:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  404ace:	4605      	mov	r5, r0
  404ad0:	d1ea      	bne.n	404aa8 <__pow5mult+0x24>
  404ad2:	4628      	mov	r0, r5
  404ad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ad8:	4632      	mov	r2, r6
  404ada:	4631      	mov	r1, r6
  404adc:	4638      	mov	r0, r7
  404ade:	f7ff ff3f 	bl	404960 <__multiply>
  404ae2:	6030      	str	r0, [r6, #0]
  404ae4:	f8c0 8000 	str.w	r8, [r0]
  404ae8:	4606      	mov	r6, r0
  404aea:	e7e0      	b.n	404aae <__pow5mult+0x2a>
  404aec:	4605      	mov	r5, r0
  404aee:	e7d9      	b.n	404aa4 <__pow5mult+0x20>
  404af0:	1e5a      	subs	r2, r3, #1
  404af2:	4d0b      	ldr	r5, [pc, #44]	; (404b20 <__pow5mult+0x9c>)
  404af4:	2300      	movs	r3, #0
  404af6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  404afa:	f7ff fe97 	bl	40482c <__multadd>
  404afe:	4605      	mov	r5, r0
  404b00:	e7c8      	b.n	404a94 <__pow5mult+0x10>
  404b02:	2101      	movs	r1, #1
  404b04:	4638      	mov	r0, r7
  404b06:	f7ff fe61 	bl	4047cc <_Balloc>
  404b0a:	f240 2171 	movw	r1, #625	; 0x271
  404b0e:	2201      	movs	r2, #1
  404b10:	2300      	movs	r3, #0
  404b12:	6141      	str	r1, [r0, #20]
  404b14:	6102      	str	r2, [r0, #16]
  404b16:	4606      	mov	r6, r0
  404b18:	64b8      	str	r0, [r7, #72]	; 0x48
  404b1a:	6003      	str	r3, [r0, #0]
  404b1c:	e7be      	b.n	404a9c <__pow5mult+0x18>
  404b1e:	bf00      	nop
  404b20:	00406fb8 	.word	0x00406fb8

00404b24 <__lshift>:
  404b24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404b28:	4691      	mov	r9, r2
  404b2a:	690a      	ldr	r2, [r1, #16]
  404b2c:	688b      	ldr	r3, [r1, #8]
  404b2e:	ea4f 1469 	mov.w	r4, r9, asr #5
  404b32:	eb04 0802 	add.w	r8, r4, r2
  404b36:	f108 0501 	add.w	r5, r8, #1
  404b3a:	429d      	cmp	r5, r3
  404b3c:	460e      	mov	r6, r1
  404b3e:	4607      	mov	r7, r0
  404b40:	6849      	ldr	r1, [r1, #4]
  404b42:	dd04      	ble.n	404b4e <__lshift+0x2a>
  404b44:	005b      	lsls	r3, r3, #1
  404b46:	429d      	cmp	r5, r3
  404b48:	f101 0101 	add.w	r1, r1, #1
  404b4c:	dcfa      	bgt.n	404b44 <__lshift+0x20>
  404b4e:	4638      	mov	r0, r7
  404b50:	f7ff fe3c 	bl	4047cc <_Balloc>
  404b54:	2c00      	cmp	r4, #0
  404b56:	f100 0314 	add.w	r3, r0, #20
  404b5a:	dd06      	ble.n	404b6a <__lshift+0x46>
  404b5c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404b60:	2100      	movs	r1, #0
  404b62:	f843 1b04 	str.w	r1, [r3], #4
  404b66:	429a      	cmp	r2, r3
  404b68:	d1fb      	bne.n	404b62 <__lshift+0x3e>
  404b6a:	6934      	ldr	r4, [r6, #16]
  404b6c:	f106 0114 	add.w	r1, r6, #20
  404b70:	f019 091f 	ands.w	r9, r9, #31
  404b74:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404b78:	d01d      	beq.n	404bb6 <__lshift+0x92>
  404b7a:	f1c9 0c20 	rsb	ip, r9, #32
  404b7e:	2200      	movs	r2, #0
  404b80:	680c      	ldr	r4, [r1, #0]
  404b82:	fa04 f409 	lsl.w	r4, r4, r9
  404b86:	4314      	orrs	r4, r2
  404b88:	f843 4b04 	str.w	r4, [r3], #4
  404b8c:	f851 2b04 	ldr.w	r2, [r1], #4
  404b90:	458e      	cmp	lr, r1
  404b92:	fa22 f20c 	lsr.w	r2, r2, ip
  404b96:	d8f3      	bhi.n	404b80 <__lshift+0x5c>
  404b98:	601a      	str	r2, [r3, #0]
  404b9a:	b10a      	cbz	r2, 404ba0 <__lshift+0x7c>
  404b9c:	f108 0502 	add.w	r5, r8, #2
  404ba0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404ba2:	6872      	ldr	r2, [r6, #4]
  404ba4:	3d01      	subs	r5, #1
  404ba6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404baa:	6105      	str	r5, [r0, #16]
  404bac:	6031      	str	r1, [r6, #0]
  404bae:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404bb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404bb6:	3b04      	subs	r3, #4
  404bb8:	f851 2b04 	ldr.w	r2, [r1], #4
  404bbc:	f843 2f04 	str.w	r2, [r3, #4]!
  404bc0:	458e      	cmp	lr, r1
  404bc2:	d8f9      	bhi.n	404bb8 <__lshift+0x94>
  404bc4:	e7ec      	b.n	404ba0 <__lshift+0x7c>
  404bc6:	bf00      	nop

00404bc8 <__mcmp>:
  404bc8:	b430      	push	{r4, r5}
  404bca:	690b      	ldr	r3, [r1, #16]
  404bcc:	4605      	mov	r5, r0
  404bce:	6900      	ldr	r0, [r0, #16]
  404bd0:	1ac0      	subs	r0, r0, r3
  404bd2:	d10f      	bne.n	404bf4 <__mcmp+0x2c>
  404bd4:	009b      	lsls	r3, r3, #2
  404bd6:	3514      	adds	r5, #20
  404bd8:	3114      	adds	r1, #20
  404bda:	4419      	add	r1, r3
  404bdc:	442b      	add	r3, r5
  404bde:	e001      	b.n	404be4 <__mcmp+0x1c>
  404be0:	429d      	cmp	r5, r3
  404be2:	d207      	bcs.n	404bf4 <__mcmp+0x2c>
  404be4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404be8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404bec:	4294      	cmp	r4, r2
  404bee:	d0f7      	beq.n	404be0 <__mcmp+0x18>
  404bf0:	d302      	bcc.n	404bf8 <__mcmp+0x30>
  404bf2:	2001      	movs	r0, #1
  404bf4:	bc30      	pop	{r4, r5}
  404bf6:	4770      	bx	lr
  404bf8:	f04f 30ff 	mov.w	r0, #4294967295
  404bfc:	e7fa      	b.n	404bf4 <__mcmp+0x2c>
  404bfe:	bf00      	nop

00404c00 <__mdiff>:
  404c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404c04:	690f      	ldr	r7, [r1, #16]
  404c06:	460e      	mov	r6, r1
  404c08:	6911      	ldr	r1, [r2, #16]
  404c0a:	1a7f      	subs	r7, r7, r1
  404c0c:	2f00      	cmp	r7, #0
  404c0e:	4690      	mov	r8, r2
  404c10:	d117      	bne.n	404c42 <__mdiff+0x42>
  404c12:	0089      	lsls	r1, r1, #2
  404c14:	f106 0514 	add.w	r5, r6, #20
  404c18:	f102 0e14 	add.w	lr, r2, #20
  404c1c:	186b      	adds	r3, r5, r1
  404c1e:	4471      	add	r1, lr
  404c20:	e001      	b.n	404c26 <__mdiff+0x26>
  404c22:	429d      	cmp	r5, r3
  404c24:	d25c      	bcs.n	404ce0 <__mdiff+0xe0>
  404c26:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404c2a:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404c2e:	42a2      	cmp	r2, r4
  404c30:	d0f7      	beq.n	404c22 <__mdiff+0x22>
  404c32:	d25e      	bcs.n	404cf2 <__mdiff+0xf2>
  404c34:	4633      	mov	r3, r6
  404c36:	462c      	mov	r4, r5
  404c38:	4646      	mov	r6, r8
  404c3a:	4675      	mov	r5, lr
  404c3c:	4698      	mov	r8, r3
  404c3e:	2701      	movs	r7, #1
  404c40:	e005      	b.n	404c4e <__mdiff+0x4e>
  404c42:	db58      	blt.n	404cf6 <__mdiff+0xf6>
  404c44:	f106 0514 	add.w	r5, r6, #20
  404c48:	f108 0414 	add.w	r4, r8, #20
  404c4c:	2700      	movs	r7, #0
  404c4e:	6871      	ldr	r1, [r6, #4]
  404c50:	f7ff fdbc 	bl	4047cc <_Balloc>
  404c54:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404c58:	6936      	ldr	r6, [r6, #16]
  404c5a:	60c7      	str	r7, [r0, #12]
  404c5c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404c60:	46a6      	mov	lr, r4
  404c62:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404c66:	f100 0414 	add.w	r4, r0, #20
  404c6a:	2300      	movs	r3, #0
  404c6c:	f85e 1b04 	ldr.w	r1, [lr], #4
  404c70:	f855 8b04 	ldr.w	r8, [r5], #4
  404c74:	b28a      	uxth	r2, r1
  404c76:	fa13 f388 	uxtah	r3, r3, r8
  404c7a:	0c09      	lsrs	r1, r1, #16
  404c7c:	1a9a      	subs	r2, r3, r2
  404c7e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404c82:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404c86:	b292      	uxth	r2, r2
  404c88:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404c8c:	45f4      	cmp	ip, lr
  404c8e:	f844 2b04 	str.w	r2, [r4], #4
  404c92:	ea4f 4323 	mov.w	r3, r3, asr #16
  404c96:	d8e9      	bhi.n	404c6c <__mdiff+0x6c>
  404c98:	42af      	cmp	r7, r5
  404c9a:	d917      	bls.n	404ccc <__mdiff+0xcc>
  404c9c:	46a4      	mov	ip, r4
  404c9e:	46ae      	mov	lr, r5
  404ca0:	f85e 2b04 	ldr.w	r2, [lr], #4
  404ca4:	fa13 f382 	uxtah	r3, r3, r2
  404ca8:	1419      	asrs	r1, r3, #16
  404caa:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404cae:	b29b      	uxth	r3, r3
  404cb0:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404cb4:	4577      	cmp	r7, lr
  404cb6:	f84c 2b04 	str.w	r2, [ip], #4
  404cba:	ea4f 4321 	mov.w	r3, r1, asr #16
  404cbe:	d8ef      	bhi.n	404ca0 <__mdiff+0xa0>
  404cc0:	43ed      	mvns	r5, r5
  404cc2:	442f      	add	r7, r5
  404cc4:	f027 0703 	bic.w	r7, r7, #3
  404cc8:	3704      	adds	r7, #4
  404cca:	443c      	add	r4, r7
  404ccc:	3c04      	subs	r4, #4
  404cce:	b922      	cbnz	r2, 404cda <__mdiff+0xda>
  404cd0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404cd4:	3e01      	subs	r6, #1
  404cd6:	2b00      	cmp	r3, #0
  404cd8:	d0fa      	beq.n	404cd0 <__mdiff+0xd0>
  404cda:	6106      	str	r6, [r0, #16]
  404cdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ce0:	2100      	movs	r1, #0
  404ce2:	f7ff fd73 	bl	4047cc <_Balloc>
  404ce6:	2201      	movs	r2, #1
  404ce8:	2300      	movs	r3, #0
  404cea:	6102      	str	r2, [r0, #16]
  404cec:	6143      	str	r3, [r0, #20]
  404cee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404cf2:	4674      	mov	r4, lr
  404cf4:	e7ab      	b.n	404c4e <__mdiff+0x4e>
  404cf6:	4633      	mov	r3, r6
  404cf8:	f106 0414 	add.w	r4, r6, #20
  404cfc:	f102 0514 	add.w	r5, r2, #20
  404d00:	4616      	mov	r6, r2
  404d02:	2701      	movs	r7, #1
  404d04:	4698      	mov	r8, r3
  404d06:	e7a2      	b.n	404c4e <__mdiff+0x4e>

00404d08 <__d2b>:
  404d08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404d0c:	b082      	sub	sp, #8
  404d0e:	2101      	movs	r1, #1
  404d10:	461c      	mov	r4, r3
  404d12:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404d16:	4615      	mov	r5, r2
  404d18:	9e08      	ldr	r6, [sp, #32]
  404d1a:	f7ff fd57 	bl	4047cc <_Balloc>
  404d1e:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404d22:	4680      	mov	r8, r0
  404d24:	b10f      	cbz	r7, 404d2a <__d2b+0x22>
  404d26:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404d2a:	9401      	str	r4, [sp, #4]
  404d2c:	b31d      	cbz	r5, 404d76 <__d2b+0x6e>
  404d2e:	a802      	add	r0, sp, #8
  404d30:	f840 5d08 	str.w	r5, [r0, #-8]!
  404d34:	f7ff fdda 	bl	4048ec <__lo0bits>
  404d38:	2800      	cmp	r0, #0
  404d3a:	d134      	bne.n	404da6 <__d2b+0x9e>
  404d3c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404d40:	f8c8 2014 	str.w	r2, [r8, #20]
  404d44:	2b00      	cmp	r3, #0
  404d46:	bf0c      	ite	eq
  404d48:	2101      	moveq	r1, #1
  404d4a:	2102      	movne	r1, #2
  404d4c:	f8c8 3018 	str.w	r3, [r8, #24]
  404d50:	f8c8 1010 	str.w	r1, [r8, #16]
  404d54:	b9df      	cbnz	r7, 404d8e <__d2b+0x86>
  404d56:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404d5a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404d5e:	6030      	str	r0, [r6, #0]
  404d60:	6918      	ldr	r0, [r3, #16]
  404d62:	f7ff fda3 	bl	4048ac <__hi0bits>
  404d66:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404d68:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404d6c:	6018      	str	r0, [r3, #0]
  404d6e:	4640      	mov	r0, r8
  404d70:	b002      	add	sp, #8
  404d72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404d76:	a801      	add	r0, sp, #4
  404d78:	f7ff fdb8 	bl	4048ec <__lo0bits>
  404d7c:	9b01      	ldr	r3, [sp, #4]
  404d7e:	f8c8 3014 	str.w	r3, [r8, #20]
  404d82:	2101      	movs	r1, #1
  404d84:	3020      	adds	r0, #32
  404d86:	f8c8 1010 	str.w	r1, [r8, #16]
  404d8a:	2f00      	cmp	r7, #0
  404d8c:	d0e3      	beq.n	404d56 <__d2b+0x4e>
  404d8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404d90:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404d94:	4407      	add	r7, r0
  404d96:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404d9a:	6037      	str	r7, [r6, #0]
  404d9c:	6018      	str	r0, [r3, #0]
  404d9e:	4640      	mov	r0, r8
  404da0:	b002      	add	sp, #8
  404da2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404da6:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404daa:	f1c0 0220 	rsb	r2, r0, #32
  404dae:	fa03 f202 	lsl.w	r2, r3, r2
  404db2:	430a      	orrs	r2, r1
  404db4:	40c3      	lsrs	r3, r0
  404db6:	9301      	str	r3, [sp, #4]
  404db8:	f8c8 2014 	str.w	r2, [r8, #20]
  404dbc:	e7c2      	b.n	404d44 <__d2b+0x3c>
  404dbe:	bf00      	nop

00404dc0 <_sbrk_r>:
  404dc0:	b538      	push	{r3, r4, r5, lr}
  404dc2:	4c07      	ldr	r4, [pc, #28]	; (404de0 <_sbrk_r+0x20>)
  404dc4:	2300      	movs	r3, #0
  404dc6:	4605      	mov	r5, r0
  404dc8:	4608      	mov	r0, r1
  404dca:	6023      	str	r3, [r4, #0]
  404dcc:	f7fc fc3c 	bl	401648 <_sbrk>
  404dd0:	1c43      	adds	r3, r0, #1
  404dd2:	d000      	beq.n	404dd6 <_sbrk_r+0x16>
  404dd4:	bd38      	pop	{r3, r4, r5, pc}
  404dd6:	6823      	ldr	r3, [r4, #0]
  404dd8:	2b00      	cmp	r3, #0
  404dda:	d0fb      	beq.n	404dd4 <_sbrk_r+0x14>
  404ddc:	602b      	str	r3, [r5, #0]
  404dde:	bd38      	pop	{r3, r4, r5, pc}
  404de0:	20400cd4 	.word	0x20400cd4
	...

00404e00 <strlen>:
  404e00:	f890 f000 	pld	[r0]
  404e04:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404e08:	f020 0107 	bic.w	r1, r0, #7
  404e0c:	f06f 0c00 	mvn.w	ip, #0
  404e10:	f010 0407 	ands.w	r4, r0, #7
  404e14:	f891 f020 	pld	[r1, #32]
  404e18:	f040 8049 	bne.w	404eae <strlen+0xae>
  404e1c:	f04f 0400 	mov.w	r4, #0
  404e20:	f06f 0007 	mvn.w	r0, #7
  404e24:	e9d1 2300 	ldrd	r2, r3, [r1]
  404e28:	f891 f040 	pld	[r1, #64]	; 0x40
  404e2c:	f100 0008 	add.w	r0, r0, #8
  404e30:	fa82 f24c 	uadd8	r2, r2, ip
  404e34:	faa4 f28c 	sel	r2, r4, ip
  404e38:	fa83 f34c 	uadd8	r3, r3, ip
  404e3c:	faa2 f38c 	sel	r3, r2, ip
  404e40:	bb4b      	cbnz	r3, 404e96 <strlen+0x96>
  404e42:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404e46:	fa82 f24c 	uadd8	r2, r2, ip
  404e4a:	f100 0008 	add.w	r0, r0, #8
  404e4e:	faa4 f28c 	sel	r2, r4, ip
  404e52:	fa83 f34c 	uadd8	r3, r3, ip
  404e56:	faa2 f38c 	sel	r3, r2, ip
  404e5a:	b9e3      	cbnz	r3, 404e96 <strlen+0x96>
  404e5c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404e60:	fa82 f24c 	uadd8	r2, r2, ip
  404e64:	f100 0008 	add.w	r0, r0, #8
  404e68:	faa4 f28c 	sel	r2, r4, ip
  404e6c:	fa83 f34c 	uadd8	r3, r3, ip
  404e70:	faa2 f38c 	sel	r3, r2, ip
  404e74:	b97b      	cbnz	r3, 404e96 <strlen+0x96>
  404e76:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404e7a:	f101 0120 	add.w	r1, r1, #32
  404e7e:	fa82 f24c 	uadd8	r2, r2, ip
  404e82:	f100 0008 	add.w	r0, r0, #8
  404e86:	faa4 f28c 	sel	r2, r4, ip
  404e8a:	fa83 f34c 	uadd8	r3, r3, ip
  404e8e:	faa2 f38c 	sel	r3, r2, ip
  404e92:	2b00      	cmp	r3, #0
  404e94:	d0c6      	beq.n	404e24 <strlen+0x24>
  404e96:	2a00      	cmp	r2, #0
  404e98:	bf04      	itt	eq
  404e9a:	3004      	addeq	r0, #4
  404e9c:	461a      	moveq	r2, r3
  404e9e:	ba12      	rev	r2, r2
  404ea0:	fab2 f282 	clz	r2, r2
  404ea4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404ea8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404eac:	4770      	bx	lr
  404eae:	e9d1 2300 	ldrd	r2, r3, [r1]
  404eb2:	f004 0503 	and.w	r5, r4, #3
  404eb6:	f1c4 0000 	rsb	r0, r4, #0
  404eba:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404ebe:	f014 0f04 	tst.w	r4, #4
  404ec2:	f891 f040 	pld	[r1, #64]	; 0x40
  404ec6:	fa0c f505 	lsl.w	r5, ip, r5
  404eca:	ea62 0205 	orn	r2, r2, r5
  404ece:	bf1c      	itt	ne
  404ed0:	ea63 0305 	ornne	r3, r3, r5
  404ed4:	4662      	movne	r2, ip
  404ed6:	f04f 0400 	mov.w	r4, #0
  404eda:	e7a9      	b.n	404e30 <strlen+0x30>

00404edc <__ssprint_r>:
  404edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404ee0:	6893      	ldr	r3, [r2, #8]
  404ee2:	b083      	sub	sp, #12
  404ee4:	4690      	mov	r8, r2
  404ee6:	2b00      	cmp	r3, #0
  404ee8:	d070      	beq.n	404fcc <__ssprint_r+0xf0>
  404eea:	4682      	mov	sl, r0
  404eec:	460c      	mov	r4, r1
  404eee:	6817      	ldr	r7, [r2, #0]
  404ef0:	688d      	ldr	r5, [r1, #8]
  404ef2:	6808      	ldr	r0, [r1, #0]
  404ef4:	e042      	b.n	404f7c <__ssprint_r+0xa0>
  404ef6:	89a3      	ldrh	r3, [r4, #12]
  404ef8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404efc:	d02e      	beq.n	404f5c <__ssprint_r+0x80>
  404efe:	6965      	ldr	r5, [r4, #20]
  404f00:	6921      	ldr	r1, [r4, #16]
  404f02:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  404f06:	eba0 0b01 	sub.w	fp, r0, r1
  404f0a:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  404f0e:	f10b 0001 	add.w	r0, fp, #1
  404f12:	106d      	asrs	r5, r5, #1
  404f14:	4430      	add	r0, r6
  404f16:	42a8      	cmp	r0, r5
  404f18:	462a      	mov	r2, r5
  404f1a:	bf84      	itt	hi
  404f1c:	4605      	movhi	r5, r0
  404f1e:	462a      	movhi	r2, r5
  404f20:	055b      	lsls	r3, r3, #21
  404f22:	d538      	bpl.n	404f96 <__ssprint_r+0xba>
  404f24:	4611      	mov	r1, r2
  404f26:	4650      	mov	r0, sl
  404f28:	f7ff f8a4 	bl	404074 <_malloc_r>
  404f2c:	2800      	cmp	r0, #0
  404f2e:	d03c      	beq.n	404faa <__ssprint_r+0xce>
  404f30:	465a      	mov	r2, fp
  404f32:	6921      	ldr	r1, [r4, #16]
  404f34:	9001      	str	r0, [sp, #4]
  404f36:	f7ff fba3 	bl	404680 <memcpy>
  404f3a:	89a2      	ldrh	r2, [r4, #12]
  404f3c:	9b01      	ldr	r3, [sp, #4]
  404f3e:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  404f42:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  404f46:	81a2      	strh	r2, [r4, #12]
  404f48:	eba5 020b 	sub.w	r2, r5, fp
  404f4c:	eb03 000b 	add.w	r0, r3, fp
  404f50:	6165      	str	r5, [r4, #20]
  404f52:	6123      	str	r3, [r4, #16]
  404f54:	6020      	str	r0, [r4, #0]
  404f56:	60a2      	str	r2, [r4, #8]
  404f58:	4635      	mov	r5, r6
  404f5a:	46b3      	mov	fp, r6
  404f5c:	465a      	mov	r2, fp
  404f5e:	4649      	mov	r1, r9
  404f60:	f000 fa18 	bl	405394 <memmove>
  404f64:	f8d8 3008 	ldr.w	r3, [r8, #8]
  404f68:	68a2      	ldr	r2, [r4, #8]
  404f6a:	6820      	ldr	r0, [r4, #0]
  404f6c:	1b55      	subs	r5, r2, r5
  404f6e:	4458      	add	r0, fp
  404f70:	1b9e      	subs	r6, r3, r6
  404f72:	60a5      	str	r5, [r4, #8]
  404f74:	6020      	str	r0, [r4, #0]
  404f76:	f8c8 6008 	str.w	r6, [r8, #8]
  404f7a:	b33e      	cbz	r6, 404fcc <__ssprint_r+0xf0>
  404f7c:	687e      	ldr	r6, [r7, #4]
  404f7e:	463b      	mov	r3, r7
  404f80:	3708      	adds	r7, #8
  404f82:	2e00      	cmp	r6, #0
  404f84:	d0fa      	beq.n	404f7c <__ssprint_r+0xa0>
  404f86:	42ae      	cmp	r6, r5
  404f88:	f8d3 9000 	ldr.w	r9, [r3]
  404f8c:	46ab      	mov	fp, r5
  404f8e:	d2b2      	bcs.n	404ef6 <__ssprint_r+0x1a>
  404f90:	4635      	mov	r5, r6
  404f92:	46b3      	mov	fp, r6
  404f94:	e7e2      	b.n	404f5c <__ssprint_r+0x80>
  404f96:	4650      	mov	r0, sl
  404f98:	f000 fa60 	bl	40545c <_realloc_r>
  404f9c:	4603      	mov	r3, r0
  404f9e:	2800      	cmp	r0, #0
  404fa0:	d1d2      	bne.n	404f48 <__ssprint_r+0x6c>
  404fa2:	6921      	ldr	r1, [r4, #16]
  404fa4:	4650      	mov	r0, sl
  404fa6:	f000 f8f9 	bl	40519c <_free_r>
  404faa:	230c      	movs	r3, #12
  404fac:	f8ca 3000 	str.w	r3, [sl]
  404fb0:	89a3      	ldrh	r3, [r4, #12]
  404fb2:	2200      	movs	r2, #0
  404fb4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404fb8:	f04f 30ff 	mov.w	r0, #4294967295
  404fbc:	81a3      	strh	r3, [r4, #12]
  404fbe:	f8c8 2008 	str.w	r2, [r8, #8]
  404fc2:	f8c8 2004 	str.w	r2, [r8, #4]
  404fc6:	b003      	add	sp, #12
  404fc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404fcc:	2000      	movs	r0, #0
  404fce:	f8c8 0004 	str.w	r0, [r8, #4]
  404fd2:	b003      	add	sp, #12
  404fd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404fd8 <__register_exitproc>:
  404fd8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404fdc:	4d2c      	ldr	r5, [pc, #176]	; (405090 <__register_exitproc+0xb8>)
  404fde:	4606      	mov	r6, r0
  404fe0:	6828      	ldr	r0, [r5, #0]
  404fe2:	4698      	mov	r8, r3
  404fe4:	460f      	mov	r7, r1
  404fe6:	4691      	mov	r9, r2
  404fe8:	f7ff f840 	bl	40406c <__retarget_lock_acquire_recursive>
  404fec:	4b29      	ldr	r3, [pc, #164]	; (405094 <__register_exitproc+0xbc>)
  404fee:	681c      	ldr	r4, [r3, #0]
  404ff0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  404ff4:	2b00      	cmp	r3, #0
  404ff6:	d03e      	beq.n	405076 <__register_exitproc+0x9e>
  404ff8:	685a      	ldr	r2, [r3, #4]
  404ffa:	2a1f      	cmp	r2, #31
  404ffc:	dc1c      	bgt.n	405038 <__register_exitproc+0x60>
  404ffe:	f102 0e01 	add.w	lr, r2, #1
  405002:	b176      	cbz	r6, 405022 <__register_exitproc+0x4a>
  405004:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  405008:	2401      	movs	r4, #1
  40500a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  40500e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  405012:	4094      	lsls	r4, r2
  405014:	4320      	orrs	r0, r4
  405016:	2e02      	cmp	r6, #2
  405018:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  40501c:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  405020:	d023      	beq.n	40506a <__register_exitproc+0x92>
  405022:	3202      	adds	r2, #2
  405024:	f8c3 e004 	str.w	lr, [r3, #4]
  405028:	6828      	ldr	r0, [r5, #0]
  40502a:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  40502e:	f7ff f81f 	bl	404070 <__retarget_lock_release_recursive>
  405032:	2000      	movs	r0, #0
  405034:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  405038:	4b17      	ldr	r3, [pc, #92]	; (405098 <__register_exitproc+0xc0>)
  40503a:	b30b      	cbz	r3, 405080 <__register_exitproc+0xa8>
  40503c:	f44f 70c8 	mov.w	r0, #400	; 0x190
  405040:	f3af 8000 	nop.w
  405044:	4603      	mov	r3, r0
  405046:	b1d8      	cbz	r0, 405080 <__register_exitproc+0xa8>
  405048:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  40504c:	6002      	str	r2, [r0, #0]
  40504e:	2100      	movs	r1, #0
  405050:	6041      	str	r1, [r0, #4]
  405052:	460a      	mov	r2, r1
  405054:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  405058:	f04f 0e01 	mov.w	lr, #1
  40505c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  405060:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  405064:	2e00      	cmp	r6, #0
  405066:	d0dc      	beq.n	405022 <__register_exitproc+0x4a>
  405068:	e7cc      	b.n	405004 <__register_exitproc+0x2c>
  40506a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  40506e:	430c      	orrs	r4, r1
  405070:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  405074:	e7d5      	b.n	405022 <__register_exitproc+0x4a>
  405076:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  40507a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  40507e:	e7bb      	b.n	404ff8 <__register_exitproc+0x20>
  405080:	6828      	ldr	r0, [r5, #0]
  405082:	f7fe fff5 	bl	404070 <__retarget_lock_release_recursive>
  405086:	f04f 30ff 	mov.w	r0, #4294967295
  40508a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40508e:	bf00      	nop
  405090:	20400450 	.word	0x20400450
  405094:	00406e50 	.word	0x00406e50
  405098:	00000000 	.word	0x00000000

0040509c <_calloc_r>:
  40509c:	b510      	push	{r4, lr}
  40509e:	fb02 f101 	mul.w	r1, r2, r1
  4050a2:	f7fe ffe7 	bl	404074 <_malloc_r>
  4050a6:	4604      	mov	r4, r0
  4050a8:	b1d8      	cbz	r0, 4050e2 <_calloc_r+0x46>
  4050aa:	f850 2c04 	ldr.w	r2, [r0, #-4]
  4050ae:	f022 0203 	bic.w	r2, r2, #3
  4050b2:	3a04      	subs	r2, #4
  4050b4:	2a24      	cmp	r2, #36	; 0x24
  4050b6:	d818      	bhi.n	4050ea <_calloc_r+0x4e>
  4050b8:	2a13      	cmp	r2, #19
  4050ba:	d914      	bls.n	4050e6 <_calloc_r+0x4a>
  4050bc:	2300      	movs	r3, #0
  4050be:	2a1b      	cmp	r2, #27
  4050c0:	6003      	str	r3, [r0, #0]
  4050c2:	6043      	str	r3, [r0, #4]
  4050c4:	d916      	bls.n	4050f4 <_calloc_r+0x58>
  4050c6:	2a24      	cmp	r2, #36	; 0x24
  4050c8:	6083      	str	r3, [r0, #8]
  4050ca:	60c3      	str	r3, [r0, #12]
  4050cc:	bf11      	iteee	ne
  4050ce:	f100 0210 	addne.w	r2, r0, #16
  4050d2:	6103      	streq	r3, [r0, #16]
  4050d4:	6143      	streq	r3, [r0, #20]
  4050d6:	f100 0218 	addeq.w	r2, r0, #24
  4050da:	2300      	movs	r3, #0
  4050dc:	6013      	str	r3, [r2, #0]
  4050de:	6053      	str	r3, [r2, #4]
  4050e0:	6093      	str	r3, [r2, #8]
  4050e2:	4620      	mov	r0, r4
  4050e4:	bd10      	pop	{r4, pc}
  4050e6:	4602      	mov	r2, r0
  4050e8:	e7f7      	b.n	4050da <_calloc_r+0x3e>
  4050ea:	2100      	movs	r1, #0
  4050ec:	f7fc fd26 	bl	401b3c <memset>
  4050f0:	4620      	mov	r0, r4
  4050f2:	bd10      	pop	{r4, pc}
  4050f4:	f100 0208 	add.w	r2, r0, #8
  4050f8:	e7ef      	b.n	4050da <_calloc_r+0x3e>
  4050fa:	bf00      	nop

004050fc <_malloc_trim_r>:
  4050fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4050fe:	4f24      	ldr	r7, [pc, #144]	; (405190 <_malloc_trim_r+0x94>)
  405100:	460c      	mov	r4, r1
  405102:	4606      	mov	r6, r0
  405104:	f7ff fb56 	bl	4047b4 <__malloc_lock>
  405108:	68bb      	ldr	r3, [r7, #8]
  40510a:	685d      	ldr	r5, [r3, #4]
  40510c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  405110:	310f      	adds	r1, #15
  405112:	f025 0503 	bic.w	r5, r5, #3
  405116:	4429      	add	r1, r5
  405118:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  40511c:	f021 010f 	bic.w	r1, r1, #15
  405120:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  405124:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  405128:	db07      	blt.n	40513a <_malloc_trim_r+0x3e>
  40512a:	2100      	movs	r1, #0
  40512c:	4630      	mov	r0, r6
  40512e:	f7ff fe47 	bl	404dc0 <_sbrk_r>
  405132:	68bb      	ldr	r3, [r7, #8]
  405134:	442b      	add	r3, r5
  405136:	4298      	cmp	r0, r3
  405138:	d004      	beq.n	405144 <_malloc_trim_r+0x48>
  40513a:	4630      	mov	r0, r6
  40513c:	f7ff fb40 	bl	4047c0 <__malloc_unlock>
  405140:	2000      	movs	r0, #0
  405142:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405144:	4261      	negs	r1, r4
  405146:	4630      	mov	r0, r6
  405148:	f7ff fe3a 	bl	404dc0 <_sbrk_r>
  40514c:	3001      	adds	r0, #1
  40514e:	d00d      	beq.n	40516c <_malloc_trim_r+0x70>
  405150:	4b10      	ldr	r3, [pc, #64]	; (405194 <_malloc_trim_r+0x98>)
  405152:	68ba      	ldr	r2, [r7, #8]
  405154:	6819      	ldr	r1, [r3, #0]
  405156:	1b2d      	subs	r5, r5, r4
  405158:	f045 0501 	orr.w	r5, r5, #1
  40515c:	4630      	mov	r0, r6
  40515e:	1b09      	subs	r1, r1, r4
  405160:	6055      	str	r5, [r2, #4]
  405162:	6019      	str	r1, [r3, #0]
  405164:	f7ff fb2c 	bl	4047c0 <__malloc_unlock>
  405168:	2001      	movs	r0, #1
  40516a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40516c:	2100      	movs	r1, #0
  40516e:	4630      	mov	r0, r6
  405170:	f7ff fe26 	bl	404dc0 <_sbrk_r>
  405174:	68ba      	ldr	r2, [r7, #8]
  405176:	1a83      	subs	r3, r0, r2
  405178:	2b0f      	cmp	r3, #15
  40517a:	ddde      	ble.n	40513a <_malloc_trim_r+0x3e>
  40517c:	4c06      	ldr	r4, [pc, #24]	; (405198 <_malloc_trim_r+0x9c>)
  40517e:	4905      	ldr	r1, [pc, #20]	; (405194 <_malloc_trim_r+0x98>)
  405180:	6824      	ldr	r4, [r4, #0]
  405182:	f043 0301 	orr.w	r3, r3, #1
  405186:	1b00      	subs	r0, r0, r4
  405188:	6053      	str	r3, [r2, #4]
  40518a:	6008      	str	r0, [r1, #0]
  40518c:	e7d5      	b.n	40513a <_malloc_trim_r+0x3e>
  40518e:	bf00      	nop
  405190:	20400454 	.word	0x20400454
  405194:	20400c7c 	.word	0x20400c7c
  405198:	2040085c 	.word	0x2040085c

0040519c <_free_r>:
  40519c:	2900      	cmp	r1, #0
  40519e:	d044      	beq.n	40522a <_free_r+0x8e>
  4051a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4051a4:	460d      	mov	r5, r1
  4051a6:	4680      	mov	r8, r0
  4051a8:	f7ff fb04 	bl	4047b4 <__malloc_lock>
  4051ac:	f855 7c04 	ldr.w	r7, [r5, #-4]
  4051b0:	4969      	ldr	r1, [pc, #420]	; (405358 <_free_r+0x1bc>)
  4051b2:	f027 0301 	bic.w	r3, r7, #1
  4051b6:	f1a5 0408 	sub.w	r4, r5, #8
  4051ba:	18e2      	adds	r2, r4, r3
  4051bc:	688e      	ldr	r6, [r1, #8]
  4051be:	6850      	ldr	r0, [r2, #4]
  4051c0:	42b2      	cmp	r2, r6
  4051c2:	f020 0003 	bic.w	r0, r0, #3
  4051c6:	d05e      	beq.n	405286 <_free_r+0xea>
  4051c8:	07fe      	lsls	r6, r7, #31
  4051ca:	6050      	str	r0, [r2, #4]
  4051cc:	d40b      	bmi.n	4051e6 <_free_r+0x4a>
  4051ce:	f855 7c08 	ldr.w	r7, [r5, #-8]
  4051d2:	1be4      	subs	r4, r4, r7
  4051d4:	f101 0e08 	add.w	lr, r1, #8
  4051d8:	68a5      	ldr	r5, [r4, #8]
  4051da:	4575      	cmp	r5, lr
  4051dc:	443b      	add	r3, r7
  4051de:	d06d      	beq.n	4052bc <_free_r+0x120>
  4051e0:	68e7      	ldr	r7, [r4, #12]
  4051e2:	60ef      	str	r7, [r5, #12]
  4051e4:	60bd      	str	r5, [r7, #8]
  4051e6:	1815      	adds	r5, r2, r0
  4051e8:	686d      	ldr	r5, [r5, #4]
  4051ea:	07ed      	lsls	r5, r5, #31
  4051ec:	d53e      	bpl.n	40526c <_free_r+0xd0>
  4051ee:	f043 0201 	orr.w	r2, r3, #1
  4051f2:	6062      	str	r2, [r4, #4]
  4051f4:	50e3      	str	r3, [r4, r3]
  4051f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4051fa:	d217      	bcs.n	40522c <_free_r+0x90>
  4051fc:	08db      	lsrs	r3, r3, #3
  4051fe:	1c58      	adds	r0, r3, #1
  405200:	109a      	asrs	r2, r3, #2
  405202:	684d      	ldr	r5, [r1, #4]
  405204:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  405208:	60a7      	str	r7, [r4, #8]
  40520a:	2301      	movs	r3, #1
  40520c:	4093      	lsls	r3, r2
  40520e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  405212:	432b      	orrs	r3, r5
  405214:	3a08      	subs	r2, #8
  405216:	60e2      	str	r2, [r4, #12]
  405218:	604b      	str	r3, [r1, #4]
  40521a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  40521e:	60fc      	str	r4, [r7, #12]
  405220:	4640      	mov	r0, r8
  405222:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405226:	f7ff bacb 	b.w	4047c0 <__malloc_unlock>
  40522a:	4770      	bx	lr
  40522c:	0a5a      	lsrs	r2, r3, #9
  40522e:	2a04      	cmp	r2, #4
  405230:	d852      	bhi.n	4052d8 <_free_r+0x13c>
  405232:	099a      	lsrs	r2, r3, #6
  405234:	f102 0739 	add.w	r7, r2, #57	; 0x39
  405238:	00ff      	lsls	r7, r7, #3
  40523a:	f102 0538 	add.w	r5, r2, #56	; 0x38
  40523e:	19c8      	adds	r0, r1, r7
  405240:	59ca      	ldr	r2, [r1, r7]
  405242:	3808      	subs	r0, #8
  405244:	4290      	cmp	r0, r2
  405246:	d04f      	beq.n	4052e8 <_free_r+0x14c>
  405248:	6851      	ldr	r1, [r2, #4]
  40524a:	f021 0103 	bic.w	r1, r1, #3
  40524e:	428b      	cmp	r3, r1
  405250:	d232      	bcs.n	4052b8 <_free_r+0x11c>
  405252:	6892      	ldr	r2, [r2, #8]
  405254:	4290      	cmp	r0, r2
  405256:	d1f7      	bne.n	405248 <_free_r+0xac>
  405258:	68c3      	ldr	r3, [r0, #12]
  40525a:	60a0      	str	r0, [r4, #8]
  40525c:	60e3      	str	r3, [r4, #12]
  40525e:	609c      	str	r4, [r3, #8]
  405260:	60c4      	str	r4, [r0, #12]
  405262:	4640      	mov	r0, r8
  405264:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405268:	f7ff baaa 	b.w	4047c0 <__malloc_unlock>
  40526c:	6895      	ldr	r5, [r2, #8]
  40526e:	4f3b      	ldr	r7, [pc, #236]	; (40535c <_free_r+0x1c0>)
  405270:	42bd      	cmp	r5, r7
  405272:	4403      	add	r3, r0
  405274:	d040      	beq.n	4052f8 <_free_r+0x15c>
  405276:	68d0      	ldr	r0, [r2, #12]
  405278:	60e8      	str	r0, [r5, #12]
  40527a:	f043 0201 	orr.w	r2, r3, #1
  40527e:	6085      	str	r5, [r0, #8]
  405280:	6062      	str	r2, [r4, #4]
  405282:	50e3      	str	r3, [r4, r3]
  405284:	e7b7      	b.n	4051f6 <_free_r+0x5a>
  405286:	07ff      	lsls	r7, r7, #31
  405288:	4403      	add	r3, r0
  40528a:	d407      	bmi.n	40529c <_free_r+0x100>
  40528c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405290:	1aa4      	subs	r4, r4, r2
  405292:	4413      	add	r3, r2
  405294:	68a0      	ldr	r0, [r4, #8]
  405296:	68e2      	ldr	r2, [r4, #12]
  405298:	60c2      	str	r2, [r0, #12]
  40529a:	6090      	str	r0, [r2, #8]
  40529c:	4a30      	ldr	r2, [pc, #192]	; (405360 <_free_r+0x1c4>)
  40529e:	6812      	ldr	r2, [r2, #0]
  4052a0:	f043 0001 	orr.w	r0, r3, #1
  4052a4:	4293      	cmp	r3, r2
  4052a6:	6060      	str	r0, [r4, #4]
  4052a8:	608c      	str	r4, [r1, #8]
  4052aa:	d3b9      	bcc.n	405220 <_free_r+0x84>
  4052ac:	4b2d      	ldr	r3, [pc, #180]	; (405364 <_free_r+0x1c8>)
  4052ae:	4640      	mov	r0, r8
  4052b0:	6819      	ldr	r1, [r3, #0]
  4052b2:	f7ff ff23 	bl	4050fc <_malloc_trim_r>
  4052b6:	e7b3      	b.n	405220 <_free_r+0x84>
  4052b8:	4610      	mov	r0, r2
  4052ba:	e7cd      	b.n	405258 <_free_r+0xbc>
  4052bc:	1811      	adds	r1, r2, r0
  4052be:	6849      	ldr	r1, [r1, #4]
  4052c0:	07c9      	lsls	r1, r1, #31
  4052c2:	d444      	bmi.n	40534e <_free_r+0x1b2>
  4052c4:	6891      	ldr	r1, [r2, #8]
  4052c6:	68d2      	ldr	r2, [r2, #12]
  4052c8:	60ca      	str	r2, [r1, #12]
  4052ca:	4403      	add	r3, r0
  4052cc:	f043 0001 	orr.w	r0, r3, #1
  4052d0:	6091      	str	r1, [r2, #8]
  4052d2:	6060      	str	r0, [r4, #4]
  4052d4:	50e3      	str	r3, [r4, r3]
  4052d6:	e7a3      	b.n	405220 <_free_r+0x84>
  4052d8:	2a14      	cmp	r2, #20
  4052da:	d816      	bhi.n	40530a <_free_r+0x16e>
  4052dc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4052e0:	00ff      	lsls	r7, r7, #3
  4052e2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4052e6:	e7aa      	b.n	40523e <_free_r+0xa2>
  4052e8:	10aa      	asrs	r2, r5, #2
  4052ea:	2301      	movs	r3, #1
  4052ec:	684d      	ldr	r5, [r1, #4]
  4052ee:	4093      	lsls	r3, r2
  4052f0:	432b      	orrs	r3, r5
  4052f2:	604b      	str	r3, [r1, #4]
  4052f4:	4603      	mov	r3, r0
  4052f6:	e7b0      	b.n	40525a <_free_r+0xbe>
  4052f8:	f043 0201 	orr.w	r2, r3, #1
  4052fc:	614c      	str	r4, [r1, #20]
  4052fe:	610c      	str	r4, [r1, #16]
  405300:	60e5      	str	r5, [r4, #12]
  405302:	60a5      	str	r5, [r4, #8]
  405304:	6062      	str	r2, [r4, #4]
  405306:	50e3      	str	r3, [r4, r3]
  405308:	e78a      	b.n	405220 <_free_r+0x84>
  40530a:	2a54      	cmp	r2, #84	; 0x54
  40530c:	d806      	bhi.n	40531c <_free_r+0x180>
  40530e:	0b1a      	lsrs	r2, r3, #12
  405310:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  405314:	00ff      	lsls	r7, r7, #3
  405316:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  40531a:	e790      	b.n	40523e <_free_r+0xa2>
  40531c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  405320:	d806      	bhi.n	405330 <_free_r+0x194>
  405322:	0bda      	lsrs	r2, r3, #15
  405324:	f102 0778 	add.w	r7, r2, #120	; 0x78
  405328:	00ff      	lsls	r7, r7, #3
  40532a:	f102 0577 	add.w	r5, r2, #119	; 0x77
  40532e:	e786      	b.n	40523e <_free_r+0xa2>
  405330:	f240 5054 	movw	r0, #1364	; 0x554
  405334:	4282      	cmp	r2, r0
  405336:	d806      	bhi.n	405346 <_free_r+0x1aa>
  405338:	0c9a      	lsrs	r2, r3, #18
  40533a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  40533e:	00ff      	lsls	r7, r7, #3
  405340:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405344:	e77b      	b.n	40523e <_free_r+0xa2>
  405346:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40534a:	257e      	movs	r5, #126	; 0x7e
  40534c:	e777      	b.n	40523e <_free_r+0xa2>
  40534e:	f043 0101 	orr.w	r1, r3, #1
  405352:	6061      	str	r1, [r4, #4]
  405354:	6013      	str	r3, [r2, #0]
  405356:	e763      	b.n	405220 <_free_r+0x84>
  405358:	20400454 	.word	0x20400454
  40535c:	2040045c 	.word	0x2040045c
  405360:	20400860 	.word	0x20400860
  405364:	20400cac 	.word	0x20400cac

00405368 <__ascii_mbtowc>:
  405368:	b082      	sub	sp, #8
  40536a:	b149      	cbz	r1, 405380 <__ascii_mbtowc+0x18>
  40536c:	b15a      	cbz	r2, 405386 <__ascii_mbtowc+0x1e>
  40536e:	b16b      	cbz	r3, 40538c <__ascii_mbtowc+0x24>
  405370:	7813      	ldrb	r3, [r2, #0]
  405372:	600b      	str	r3, [r1, #0]
  405374:	7812      	ldrb	r2, [r2, #0]
  405376:	1c10      	adds	r0, r2, #0
  405378:	bf18      	it	ne
  40537a:	2001      	movne	r0, #1
  40537c:	b002      	add	sp, #8
  40537e:	4770      	bx	lr
  405380:	a901      	add	r1, sp, #4
  405382:	2a00      	cmp	r2, #0
  405384:	d1f3      	bne.n	40536e <__ascii_mbtowc+0x6>
  405386:	4610      	mov	r0, r2
  405388:	b002      	add	sp, #8
  40538a:	4770      	bx	lr
  40538c:	f06f 0001 	mvn.w	r0, #1
  405390:	e7f4      	b.n	40537c <__ascii_mbtowc+0x14>
  405392:	bf00      	nop

00405394 <memmove>:
  405394:	4288      	cmp	r0, r1
  405396:	b5f0      	push	{r4, r5, r6, r7, lr}
  405398:	d90d      	bls.n	4053b6 <memmove+0x22>
  40539a:	188b      	adds	r3, r1, r2
  40539c:	4298      	cmp	r0, r3
  40539e:	d20a      	bcs.n	4053b6 <memmove+0x22>
  4053a0:	1884      	adds	r4, r0, r2
  4053a2:	2a00      	cmp	r2, #0
  4053a4:	d051      	beq.n	40544a <memmove+0xb6>
  4053a6:	4622      	mov	r2, r4
  4053a8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  4053ac:	f802 4d01 	strb.w	r4, [r2, #-1]!
  4053b0:	4299      	cmp	r1, r3
  4053b2:	d1f9      	bne.n	4053a8 <memmove+0x14>
  4053b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4053b6:	2a0f      	cmp	r2, #15
  4053b8:	d948      	bls.n	40544c <memmove+0xb8>
  4053ba:	ea41 0300 	orr.w	r3, r1, r0
  4053be:	079b      	lsls	r3, r3, #30
  4053c0:	d146      	bne.n	405450 <memmove+0xbc>
  4053c2:	f100 0410 	add.w	r4, r0, #16
  4053c6:	f101 0310 	add.w	r3, r1, #16
  4053ca:	4615      	mov	r5, r2
  4053cc:	f853 6c10 	ldr.w	r6, [r3, #-16]
  4053d0:	f844 6c10 	str.w	r6, [r4, #-16]
  4053d4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  4053d8:	f844 6c0c 	str.w	r6, [r4, #-12]
  4053dc:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4053e0:	f844 6c08 	str.w	r6, [r4, #-8]
  4053e4:	3d10      	subs	r5, #16
  4053e6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4053ea:	f844 6c04 	str.w	r6, [r4, #-4]
  4053ee:	2d0f      	cmp	r5, #15
  4053f0:	f103 0310 	add.w	r3, r3, #16
  4053f4:	f104 0410 	add.w	r4, r4, #16
  4053f8:	d8e8      	bhi.n	4053cc <memmove+0x38>
  4053fa:	f1a2 0310 	sub.w	r3, r2, #16
  4053fe:	f023 030f 	bic.w	r3, r3, #15
  405402:	f002 0e0f 	and.w	lr, r2, #15
  405406:	3310      	adds	r3, #16
  405408:	f1be 0f03 	cmp.w	lr, #3
  40540c:	4419      	add	r1, r3
  40540e:	4403      	add	r3, r0
  405410:	d921      	bls.n	405456 <memmove+0xc2>
  405412:	1f1e      	subs	r6, r3, #4
  405414:	460d      	mov	r5, r1
  405416:	4674      	mov	r4, lr
  405418:	3c04      	subs	r4, #4
  40541a:	f855 7b04 	ldr.w	r7, [r5], #4
  40541e:	f846 7f04 	str.w	r7, [r6, #4]!
  405422:	2c03      	cmp	r4, #3
  405424:	d8f8      	bhi.n	405418 <memmove+0x84>
  405426:	f1ae 0404 	sub.w	r4, lr, #4
  40542a:	f024 0403 	bic.w	r4, r4, #3
  40542e:	3404      	adds	r4, #4
  405430:	4421      	add	r1, r4
  405432:	4423      	add	r3, r4
  405434:	f002 0203 	and.w	r2, r2, #3
  405438:	b162      	cbz	r2, 405454 <memmove+0xc0>
  40543a:	3b01      	subs	r3, #1
  40543c:	440a      	add	r2, r1
  40543e:	f811 4b01 	ldrb.w	r4, [r1], #1
  405442:	f803 4f01 	strb.w	r4, [r3, #1]!
  405446:	428a      	cmp	r2, r1
  405448:	d1f9      	bne.n	40543e <memmove+0xaa>
  40544a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40544c:	4603      	mov	r3, r0
  40544e:	e7f3      	b.n	405438 <memmove+0xa4>
  405450:	4603      	mov	r3, r0
  405452:	e7f2      	b.n	40543a <memmove+0xa6>
  405454:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405456:	4672      	mov	r2, lr
  405458:	e7ee      	b.n	405438 <memmove+0xa4>
  40545a:	bf00      	nop

0040545c <_realloc_r>:
  40545c:	2900      	cmp	r1, #0
  40545e:	f000 8095 	beq.w	40558c <_realloc_r+0x130>
  405462:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405466:	460d      	mov	r5, r1
  405468:	4616      	mov	r6, r2
  40546a:	b083      	sub	sp, #12
  40546c:	4680      	mov	r8, r0
  40546e:	f106 070b 	add.w	r7, r6, #11
  405472:	f7ff f99f 	bl	4047b4 <__malloc_lock>
  405476:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40547a:	2f16      	cmp	r7, #22
  40547c:	f02e 0403 	bic.w	r4, lr, #3
  405480:	f1a5 0908 	sub.w	r9, r5, #8
  405484:	d83c      	bhi.n	405500 <_realloc_r+0xa4>
  405486:	2210      	movs	r2, #16
  405488:	4617      	mov	r7, r2
  40548a:	42be      	cmp	r6, r7
  40548c:	d83d      	bhi.n	40550a <_realloc_r+0xae>
  40548e:	4294      	cmp	r4, r2
  405490:	da43      	bge.n	40551a <_realloc_r+0xbe>
  405492:	4bc4      	ldr	r3, [pc, #784]	; (4057a4 <_realloc_r+0x348>)
  405494:	6899      	ldr	r1, [r3, #8]
  405496:	eb09 0004 	add.w	r0, r9, r4
  40549a:	4288      	cmp	r0, r1
  40549c:	f000 80b4 	beq.w	405608 <_realloc_r+0x1ac>
  4054a0:	6843      	ldr	r3, [r0, #4]
  4054a2:	f023 0101 	bic.w	r1, r3, #1
  4054a6:	4401      	add	r1, r0
  4054a8:	6849      	ldr	r1, [r1, #4]
  4054aa:	07c9      	lsls	r1, r1, #31
  4054ac:	d54c      	bpl.n	405548 <_realloc_r+0xec>
  4054ae:	f01e 0f01 	tst.w	lr, #1
  4054b2:	f000 809b 	beq.w	4055ec <_realloc_r+0x190>
  4054b6:	4631      	mov	r1, r6
  4054b8:	4640      	mov	r0, r8
  4054ba:	f7fe fddb 	bl	404074 <_malloc_r>
  4054be:	4606      	mov	r6, r0
  4054c0:	2800      	cmp	r0, #0
  4054c2:	d03a      	beq.n	40553a <_realloc_r+0xde>
  4054c4:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4054c8:	f023 0301 	bic.w	r3, r3, #1
  4054cc:	444b      	add	r3, r9
  4054ce:	f1a0 0208 	sub.w	r2, r0, #8
  4054d2:	429a      	cmp	r2, r3
  4054d4:	f000 8121 	beq.w	40571a <_realloc_r+0x2be>
  4054d8:	1f22      	subs	r2, r4, #4
  4054da:	2a24      	cmp	r2, #36	; 0x24
  4054dc:	f200 8107 	bhi.w	4056ee <_realloc_r+0x292>
  4054e0:	2a13      	cmp	r2, #19
  4054e2:	f200 80db 	bhi.w	40569c <_realloc_r+0x240>
  4054e6:	4603      	mov	r3, r0
  4054e8:	462a      	mov	r2, r5
  4054ea:	6811      	ldr	r1, [r2, #0]
  4054ec:	6019      	str	r1, [r3, #0]
  4054ee:	6851      	ldr	r1, [r2, #4]
  4054f0:	6059      	str	r1, [r3, #4]
  4054f2:	6892      	ldr	r2, [r2, #8]
  4054f4:	609a      	str	r2, [r3, #8]
  4054f6:	4629      	mov	r1, r5
  4054f8:	4640      	mov	r0, r8
  4054fa:	f7ff fe4f 	bl	40519c <_free_r>
  4054fe:	e01c      	b.n	40553a <_realloc_r+0xde>
  405500:	f027 0707 	bic.w	r7, r7, #7
  405504:	2f00      	cmp	r7, #0
  405506:	463a      	mov	r2, r7
  405508:	dabf      	bge.n	40548a <_realloc_r+0x2e>
  40550a:	2600      	movs	r6, #0
  40550c:	230c      	movs	r3, #12
  40550e:	4630      	mov	r0, r6
  405510:	f8c8 3000 	str.w	r3, [r8]
  405514:	b003      	add	sp, #12
  405516:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40551a:	462e      	mov	r6, r5
  40551c:	1be3      	subs	r3, r4, r7
  40551e:	2b0f      	cmp	r3, #15
  405520:	d81e      	bhi.n	405560 <_realloc_r+0x104>
  405522:	f8d9 3004 	ldr.w	r3, [r9, #4]
  405526:	f003 0301 	and.w	r3, r3, #1
  40552a:	4323      	orrs	r3, r4
  40552c:	444c      	add	r4, r9
  40552e:	f8c9 3004 	str.w	r3, [r9, #4]
  405532:	6863      	ldr	r3, [r4, #4]
  405534:	f043 0301 	orr.w	r3, r3, #1
  405538:	6063      	str	r3, [r4, #4]
  40553a:	4640      	mov	r0, r8
  40553c:	f7ff f940 	bl	4047c0 <__malloc_unlock>
  405540:	4630      	mov	r0, r6
  405542:	b003      	add	sp, #12
  405544:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405548:	f023 0303 	bic.w	r3, r3, #3
  40554c:	18e1      	adds	r1, r4, r3
  40554e:	4291      	cmp	r1, r2
  405550:	db1f      	blt.n	405592 <_realloc_r+0x136>
  405552:	68c3      	ldr	r3, [r0, #12]
  405554:	6882      	ldr	r2, [r0, #8]
  405556:	462e      	mov	r6, r5
  405558:	60d3      	str	r3, [r2, #12]
  40555a:	460c      	mov	r4, r1
  40555c:	609a      	str	r2, [r3, #8]
  40555e:	e7dd      	b.n	40551c <_realloc_r+0xc0>
  405560:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405564:	eb09 0107 	add.w	r1, r9, r7
  405568:	f002 0201 	and.w	r2, r2, #1
  40556c:	444c      	add	r4, r9
  40556e:	f043 0301 	orr.w	r3, r3, #1
  405572:	4317      	orrs	r7, r2
  405574:	f8c9 7004 	str.w	r7, [r9, #4]
  405578:	604b      	str	r3, [r1, #4]
  40557a:	6863      	ldr	r3, [r4, #4]
  40557c:	f043 0301 	orr.w	r3, r3, #1
  405580:	3108      	adds	r1, #8
  405582:	6063      	str	r3, [r4, #4]
  405584:	4640      	mov	r0, r8
  405586:	f7ff fe09 	bl	40519c <_free_r>
  40558a:	e7d6      	b.n	40553a <_realloc_r+0xde>
  40558c:	4611      	mov	r1, r2
  40558e:	f7fe bd71 	b.w	404074 <_malloc_r>
  405592:	f01e 0f01 	tst.w	lr, #1
  405596:	d18e      	bne.n	4054b6 <_realloc_r+0x5a>
  405598:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40559c:	eba9 0a01 	sub.w	sl, r9, r1
  4055a0:	f8da 1004 	ldr.w	r1, [sl, #4]
  4055a4:	f021 0103 	bic.w	r1, r1, #3
  4055a8:	440b      	add	r3, r1
  4055aa:	4423      	add	r3, r4
  4055ac:	4293      	cmp	r3, r2
  4055ae:	db25      	blt.n	4055fc <_realloc_r+0x1a0>
  4055b0:	68c2      	ldr	r2, [r0, #12]
  4055b2:	6881      	ldr	r1, [r0, #8]
  4055b4:	4656      	mov	r6, sl
  4055b6:	60ca      	str	r2, [r1, #12]
  4055b8:	6091      	str	r1, [r2, #8]
  4055ba:	f8da 100c 	ldr.w	r1, [sl, #12]
  4055be:	f856 0f08 	ldr.w	r0, [r6, #8]!
  4055c2:	1f22      	subs	r2, r4, #4
  4055c4:	2a24      	cmp	r2, #36	; 0x24
  4055c6:	60c1      	str	r1, [r0, #12]
  4055c8:	6088      	str	r0, [r1, #8]
  4055ca:	f200 8094 	bhi.w	4056f6 <_realloc_r+0x29a>
  4055ce:	2a13      	cmp	r2, #19
  4055d0:	d96f      	bls.n	4056b2 <_realloc_r+0x256>
  4055d2:	6829      	ldr	r1, [r5, #0]
  4055d4:	f8ca 1008 	str.w	r1, [sl, #8]
  4055d8:	6869      	ldr	r1, [r5, #4]
  4055da:	f8ca 100c 	str.w	r1, [sl, #12]
  4055de:	2a1b      	cmp	r2, #27
  4055e0:	f200 80a2 	bhi.w	405728 <_realloc_r+0x2cc>
  4055e4:	3508      	adds	r5, #8
  4055e6:	f10a 0210 	add.w	r2, sl, #16
  4055ea:	e063      	b.n	4056b4 <_realloc_r+0x258>
  4055ec:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4055f0:	eba9 0a03 	sub.w	sl, r9, r3
  4055f4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4055f8:	f021 0103 	bic.w	r1, r1, #3
  4055fc:	1863      	adds	r3, r4, r1
  4055fe:	4293      	cmp	r3, r2
  405600:	f6ff af59 	blt.w	4054b6 <_realloc_r+0x5a>
  405604:	4656      	mov	r6, sl
  405606:	e7d8      	b.n	4055ba <_realloc_r+0x15e>
  405608:	6841      	ldr	r1, [r0, #4]
  40560a:	f021 0b03 	bic.w	fp, r1, #3
  40560e:	44a3      	add	fp, r4
  405610:	f107 0010 	add.w	r0, r7, #16
  405614:	4583      	cmp	fp, r0
  405616:	da56      	bge.n	4056c6 <_realloc_r+0x26a>
  405618:	f01e 0f01 	tst.w	lr, #1
  40561c:	f47f af4b 	bne.w	4054b6 <_realloc_r+0x5a>
  405620:	f855 1c08 	ldr.w	r1, [r5, #-8]
  405624:	eba9 0a01 	sub.w	sl, r9, r1
  405628:	f8da 1004 	ldr.w	r1, [sl, #4]
  40562c:	f021 0103 	bic.w	r1, r1, #3
  405630:	448b      	add	fp, r1
  405632:	4558      	cmp	r0, fp
  405634:	dce2      	bgt.n	4055fc <_realloc_r+0x1a0>
  405636:	4656      	mov	r6, sl
  405638:	f8da 100c 	ldr.w	r1, [sl, #12]
  40563c:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405640:	1f22      	subs	r2, r4, #4
  405642:	2a24      	cmp	r2, #36	; 0x24
  405644:	60c1      	str	r1, [r0, #12]
  405646:	6088      	str	r0, [r1, #8]
  405648:	f200 808f 	bhi.w	40576a <_realloc_r+0x30e>
  40564c:	2a13      	cmp	r2, #19
  40564e:	f240 808a 	bls.w	405766 <_realloc_r+0x30a>
  405652:	6829      	ldr	r1, [r5, #0]
  405654:	f8ca 1008 	str.w	r1, [sl, #8]
  405658:	6869      	ldr	r1, [r5, #4]
  40565a:	f8ca 100c 	str.w	r1, [sl, #12]
  40565e:	2a1b      	cmp	r2, #27
  405660:	f200 808a 	bhi.w	405778 <_realloc_r+0x31c>
  405664:	3508      	adds	r5, #8
  405666:	f10a 0210 	add.w	r2, sl, #16
  40566a:	6829      	ldr	r1, [r5, #0]
  40566c:	6011      	str	r1, [r2, #0]
  40566e:	6869      	ldr	r1, [r5, #4]
  405670:	6051      	str	r1, [r2, #4]
  405672:	68a9      	ldr	r1, [r5, #8]
  405674:	6091      	str	r1, [r2, #8]
  405676:	eb0a 0107 	add.w	r1, sl, r7
  40567a:	ebab 0207 	sub.w	r2, fp, r7
  40567e:	f042 0201 	orr.w	r2, r2, #1
  405682:	6099      	str	r1, [r3, #8]
  405684:	604a      	str	r2, [r1, #4]
  405686:	f8da 3004 	ldr.w	r3, [sl, #4]
  40568a:	f003 0301 	and.w	r3, r3, #1
  40568e:	431f      	orrs	r7, r3
  405690:	4640      	mov	r0, r8
  405692:	f8ca 7004 	str.w	r7, [sl, #4]
  405696:	f7ff f893 	bl	4047c0 <__malloc_unlock>
  40569a:	e751      	b.n	405540 <_realloc_r+0xe4>
  40569c:	682b      	ldr	r3, [r5, #0]
  40569e:	6003      	str	r3, [r0, #0]
  4056a0:	686b      	ldr	r3, [r5, #4]
  4056a2:	6043      	str	r3, [r0, #4]
  4056a4:	2a1b      	cmp	r2, #27
  4056a6:	d82d      	bhi.n	405704 <_realloc_r+0x2a8>
  4056a8:	f100 0308 	add.w	r3, r0, #8
  4056ac:	f105 0208 	add.w	r2, r5, #8
  4056b0:	e71b      	b.n	4054ea <_realloc_r+0x8e>
  4056b2:	4632      	mov	r2, r6
  4056b4:	6829      	ldr	r1, [r5, #0]
  4056b6:	6011      	str	r1, [r2, #0]
  4056b8:	6869      	ldr	r1, [r5, #4]
  4056ba:	6051      	str	r1, [r2, #4]
  4056bc:	68a9      	ldr	r1, [r5, #8]
  4056be:	6091      	str	r1, [r2, #8]
  4056c0:	461c      	mov	r4, r3
  4056c2:	46d1      	mov	r9, sl
  4056c4:	e72a      	b.n	40551c <_realloc_r+0xc0>
  4056c6:	eb09 0107 	add.w	r1, r9, r7
  4056ca:	ebab 0b07 	sub.w	fp, fp, r7
  4056ce:	f04b 0201 	orr.w	r2, fp, #1
  4056d2:	6099      	str	r1, [r3, #8]
  4056d4:	604a      	str	r2, [r1, #4]
  4056d6:	f855 3c04 	ldr.w	r3, [r5, #-4]
  4056da:	f003 0301 	and.w	r3, r3, #1
  4056de:	431f      	orrs	r7, r3
  4056e0:	4640      	mov	r0, r8
  4056e2:	f845 7c04 	str.w	r7, [r5, #-4]
  4056e6:	f7ff f86b 	bl	4047c0 <__malloc_unlock>
  4056ea:	462e      	mov	r6, r5
  4056ec:	e728      	b.n	405540 <_realloc_r+0xe4>
  4056ee:	4629      	mov	r1, r5
  4056f0:	f7ff fe50 	bl	405394 <memmove>
  4056f4:	e6ff      	b.n	4054f6 <_realloc_r+0x9a>
  4056f6:	4629      	mov	r1, r5
  4056f8:	4630      	mov	r0, r6
  4056fa:	461c      	mov	r4, r3
  4056fc:	46d1      	mov	r9, sl
  4056fe:	f7ff fe49 	bl	405394 <memmove>
  405702:	e70b      	b.n	40551c <_realloc_r+0xc0>
  405704:	68ab      	ldr	r3, [r5, #8]
  405706:	6083      	str	r3, [r0, #8]
  405708:	68eb      	ldr	r3, [r5, #12]
  40570a:	60c3      	str	r3, [r0, #12]
  40570c:	2a24      	cmp	r2, #36	; 0x24
  40570e:	d017      	beq.n	405740 <_realloc_r+0x2e4>
  405710:	f100 0310 	add.w	r3, r0, #16
  405714:	f105 0210 	add.w	r2, r5, #16
  405718:	e6e7      	b.n	4054ea <_realloc_r+0x8e>
  40571a:	f850 3c04 	ldr.w	r3, [r0, #-4]
  40571e:	f023 0303 	bic.w	r3, r3, #3
  405722:	441c      	add	r4, r3
  405724:	462e      	mov	r6, r5
  405726:	e6f9      	b.n	40551c <_realloc_r+0xc0>
  405728:	68a9      	ldr	r1, [r5, #8]
  40572a:	f8ca 1010 	str.w	r1, [sl, #16]
  40572e:	68e9      	ldr	r1, [r5, #12]
  405730:	f8ca 1014 	str.w	r1, [sl, #20]
  405734:	2a24      	cmp	r2, #36	; 0x24
  405736:	d00c      	beq.n	405752 <_realloc_r+0x2f6>
  405738:	3510      	adds	r5, #16
  40573a:	f10a 0218 	add.w	r2, sl, #24
  40573e:	e7b9      	b.n	4056b4 <_realloc_r+0x258>
  405740:	692b      	ldr	r3, [r5, #16]
  405742:	6103      	str	r3, [r0, #16]
  405744:	696b      	ldr	r3, [r5, #20]
  405746:	6143      	str	r3, [r0, #20]
  405748:	f105 0218 	add.w	r2, r5, #24
  40574c:	f100 0318 	add.w	r3, r0, #24
  405750:	e6cb      	b.n	4054ea <_realloc_r+0x8e>
  405752:	692a      	ldr	r2, [r5, #16]
  405754:	f8ca 2018 	str.w	r2, [sl, #24]
  405758:	696a      	ldr	r2, [r5, #20]
  40575a:	f8ca 201c 	str.w	r2, [sl, #28]
  40575e:	3518      	adds	r5, #24
  405760:	f10a 0220 	add.w	r2, sl, #32
  405764:	e7a6      	b.n	4056b4 <_realloc_r+0x258>
  405766:	4632      	mov	r2, r6
  405768:	e77f      	b.n	40566a <_realloc_r+0x20e>
  40576a:	4629      	mov	r1, r5
  40576c:	4630      	mov	r0, r6
  40576e:	9301      	str	r3, [sp, #4]
  405770:	f7ff fe10 	bl	405394 <memmove>
  405774:	9b01      	ldr	r3, [sp, #4]
  405776:	e77e      	b.n	405676 <_realloc_r+0x21a>
  405778:	68a9      	ldr	r1, [r5, #8]
  40577a:	f8ca 1010 	str.w	r1, [sl, #16]
  40577e:	68e9      	ldr	r1, [r5, #12]
  405780:	f8ca 1014 	str.w	r1, [sl, #20]
  405784:	2a24      	cmp	r2, #36	; 0x24
  405786:	d003      	beq.n	405790 <_realloc_r+0x334>
  405788:	3510      	adds	r5, #16
  40578a:	f10a 0218 	add.w	r2, sl, #24
  40578e:	e76c      	b.n	40566a <_realloc_r+0x20e>
  405790:	692a      	ldr	r2, [r5, #16]
  405792:	f8ca 2018 	str.w	r2, [sl, #24]
  405796:	696a      	ldr	r2, [r5, #20]
  405798:	f8ca 201c 	str.w	r2, [sl, #28]
  40579c:	3518      	adds	r5, #24
  40579e:	f10a 0220 	add.w	r2, sl, #32
  4057a2:	e762      	b.n	40566a <_realloc_r+0x20e>
  4057a4:	20400454 	.word	0x20400454

004057a8 <__ascii_wctomb>:
  4057a8:	b121      	cbz	r1, 4057b4 <__ascii_wctomb+0xc>
  4057aa:	2aff      	cmp	r2, #255	; 0xff
  4057ac:	d804      	bhi.n	4057b8 <__ascii_wctomb+0x10>
  4057ae:	700a      	strb	r2, [r1, #0]
  4057b0:	2001      	movs	r0, #1
  4057b2:	4770      	bx	lr
  4057b4:	4608      	mov	r0, r1
  4057b6:	4770      	bx	lr
  4057b8:	238a      	movs	r3, #138	; 0x8a
  4057ba:	6003      	str	r3, [r0, #0]
  4057bc:	f04f 30ff 	mov.w	r0, #4294967295
  4057c0:	4770      	bx	lr
  4057c2:	bf00      	nop

004057c4 <__aeabi_drsub>:
  4057c4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  4057c8:	e002      	b.n	4057d0 <__adddf3>
  4057ca:	bf00      	nop

004057cc <__aeabi_dsub>:
  4057cc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

004057d0 <__adddf3>:
  4057d0:	b530      	push	{r4, r5, lr}
  4057d2:	ea4f 0441 	mov.w	r4, r1, lsl #1
  4057d6:	ea4f 0543 	mov.w	r5, r3, lsl #1
  4057da:	ea94 0f05 	teq	r4, r5
  4057de:	bf08      	it	eq
  4057e0:	ea90 0f02 	teqeq	r0, r2
  4057e4:	bf1f      	itttt	ne
  4057e6:	ea54 0c00 	orrsne.w	ip, r4, r0
  4057ea:	ea55 0c02 	orrsne.w	ip, r5, r2
  4057ee:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4057f2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4057f6:	f000 80e2 	beq.w	4059be <__adddf3+0x1ee>
  4057fa:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4057fe:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  405802:	bfb8      	it	lt
  405804:	426d      	neglt	r5, r5
  405806:	dd0c      	ble.n	405822 <__adddf3+0x52>
  405808:	442c      	add	r4, r5
  40580a:	ea80 0202 	eor.w	r2, r0, r2
  40580e:	ea81 0303 	eor.w	r3, r1, r3
  405812:	ea82 0000 	eor.w	r0, r2, r0
  405816:	ea83 0101 	eor.w	r1, r3, r1
  40581a:	ea80 0202 	eor.w	r2, r0, r2
  40581e:	ea81 0303 	eor.w	r3, r1, r3
  405822:	2d36      	cmp	r5, #54	; 0x36
  405824:	bf88      	it	hi
  405826:	bd30      	pophi	{r4, r5, pc}
  405828:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  40582c:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405830:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  405834:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  405838:	d002      	beq.n	405840 <__adddf3+0x70>
  40583a:	4240      	negs	r0, r0
  40583c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405840:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405844:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405848:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40584c:	d002      	beq.n	405854 <__adddf3+0x84>
  40584e:	4252      	negs	r2, r2
  405850:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405854:	ea94 0f05 	teq	r4, r5
  405858:	f000 80a7 	beq.w	4059aa <__adddf3+0x1da>
  40585c:	f1a4 0401 	sub.w	r4, r4, #1
  405860:	f1d5 0e20 	rsbs	lr, r5, #32
  405864:	db0d      	blt.n	405882 <__adddf3+0xb2>
  405866:	fa02 fc0e 	lsl.w	ip, r2, lr
  40586a:	fa22 f205 	lsr.w	r2, r2, r5
  40586e:	1880      	adds	r0, r0, r2
  405870:	f141 0100 	adc.w	r1, r1, #0
  405874:	fa03 f20e 	lsl.w	r2, r3, lr
  405878:	1880      	adds	r0, r0, r2
  40587a:	fa43 f305 	asr.w	r3, r3, r5
  40587e:	4159      	adcs	r1, r3
  405880:	e00e      	b.n	4058a0 <__adddf3+0xd0>
  405882:	f1a5 0520 	sub.w	r5, r5, #32
  405886:	f10e 0e20 	add.w	lr, lr, #32
  40588a:	2a01      	cmp	r2, #1
  40588c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405890:	bf28      	it	cs
  405892:	f04c 0c02 	orrcs.w	ip, ip, #2
  405896:	fa43 f305 	asr.w	r3, r3, r5
  40589a:	18c0      	adds	r0, r0, r3
  40589c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  4058a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4058a4:	d507      	bpl.n	4058b6 <__adddf3+0xe6>
  4058a6:	f04f 0e00 	mov.w	lr, #0
  4058aa:	f1dc 0c00 	rsbs	ip, ip, #0
  4058ae:	eb7e 0000 	sbcs.w	r0, lr, r0
  4058b2:	eb6e 0101 	sbc.w	r1, lr, r1
  4058b6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  4058ba:	d31b      	bcc.n	4058f4 <__adddf3+0x124>
  4058bc:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  4058c0:	d30c      	bcc.n	4058dc <__adddf3+0x10c>
  4058c2:	0849      	lsrs	r1, r1, #1
  4058c4:	ea5f 0030 	movs.w	r0, r0, rrx
  4058c8:	ea4f 0c3c 	mov.w	ip, ip, rrx
  4058cc:	f104 0401 	add.w	r4, r4, #1
  4058d0:	ea4f 5244 	mov.w	r2, r4, lsl #21
  4058d4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  4058d8:	f080 809a 	bcs.w	405a10 <__adddf3+0x240>
  4058dc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4058e0:	bf08      	it	eq
  4058e2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4058e6:	f150 0000 	adcs.w	r0, r0, #0
  4058ea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4058ee:	ea41 0105 	orr.w	r1, r1, r5
  4058f2:	bd30      	pop	{r4, r5, pc}
  4058f4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4058f8:	4140      	adcs	r0, r0
  4058fa:	eb41 0101 	adc.w	r1, r1, r1
  4058fe:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405902:	f1a4 0401 	sub.w	r4, r4, #1
  405906:	d1e9      	bne.n	4058dc <__adddf3+0x10c>
  405908:	f091 0f00 	teq	r1, #0
  40590c:	bf04      	itt	eq
  40590e:	4601      	moveq	r1, r0
  405910:	2000      	moveq	r0, #0
  405912:	fab1 f381 	clz	r3, r1
  405916:	bf08      	it	eq
  405918:	3320      	addeq	r3, #32
  40591a:	f1a3 030b 	sub.w	r3, r3, #11
  40591e:	f1b3 0220 	subs.w	r2, r3, #32
  405922:	da0c      	bge.n	40593e <__adddf3+0x16e>
  405924:	320c      	adds	r2, #12
  405926:	dd08      	ble.n	40593a <__adddf3+0x16a>
  405928:	f102 0c14 	add.w	ip, r2, #20
  40592c:	f1c2 020c 	rsb	r2, r2, #12
  405930:	fa01 f00c 	lsl.w	r0, r1, ip
  405934:	fa21 f102 	lsr.w	r1, r1, r2
  405938:	e00c      	b.n	405954 <__adddf3+0x184>
  40593a:	f102 0214 	add.w	r2, r2, #20
  40593e:	bfd8      	it	le
  405940:	f1c2 0c20 	rsble	ip, r2, #32
  405944:	fa01 f102 	lsl.w	r1, r1, r2
  405948:	fa20 fc0c 	lsr.w	ip, r0, ip
  40594c:	bfdc      	itt	le
  40594e:	ea41 010c 	orrle.w	r1, r1, ip
  405952:	4090      	lslle	r0, r2
  405954:	1ae4      	subs	r4, r4, r3
  405956:	bfa2      	ittt	ge
  405958:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40595c:	4329      	orrge	r1, r5
  40595e:	bd30      	popge	{r4, r5, pc}
  405960:	ea6f 0404 	mvn.w	r4, r4
  405964:	3c1f      	subs	r4, #31
  405966:	da1c      	bge.n	4059a2 <__adddf3+0x1d2>
  405968:	340c      	adds	r4, #12
  40596a:	dc0e      	bgt.n	40598a <__adddf3+0x1ba>
  40596c:	f104 0414 	add.w	r4, r4, #20
  405970:	f1c4 0220 	rsb	r2, r4, #32
  405974:	fa20 f004 	lsr.w	r0, r0, r4
  405978:	fa01 f302 	lsl.w	r3, r1, r2
  40597c:	ea40 0003 	orr.w	r0, r0, r3
  405980:	fa21 f304 	lsr.w	r3, r1, r4
  405984:	ea45 0103 	orr.w	r1, r5, r3
  405988:	bd30      	pop	{r4, r5, pc}
  40598a:	f1c4 040c 	rsb	r4, r4, #12
  40598e:	f1c4 0220 	rsb	r2, r4, #32
  405992:	fa20 f002 	lsr.w	r0, r0, r2
  405996:	fa01 f304 	lsl.w	r3, r1, r4
  40599a:	ea40 0003 	orr.w	r0, r0, r3
  40599e:	4629      	mov	r1, r5
  4059a0:	bd30      	pop	{r4, r5, pc}
  4059a2:	fa21 f004 	lsr.w	r0, r1, r4
  4059a6:	4629      	mov	r1, r5
  4059a8:	bd30      	pop	{r4, r5, pc}
  4059aa:	f094 0f00 	teq	r4, #0
  4059ae:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4059b2:	bf06      	itte	eq
  4059b4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4059b8:	3401      	addeq	r4, #1
  4059ba:	3d01      	subne	r5, #1
  4059bc:	e74e      	b.n	40585c <__adddf3+0x8c>
  4059be:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4059c2:	bf18      	it	ne
  4059c4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4059c8:	d029      	beq.n	405a1e <__adddf3+0x24e>
  4059ca:	ea94 0f05 	teq	r4, r5
  4059ce:	bf08      	it	eq
  4059d0:	ea90 0f02 	teqeq	r0, r2
  4059d4:	d005      	beq.n	4059e2 <__adddf3+0x212>
  4059d6:	ea54 0c00 	orrs.w	ip, r4, r0
  4059da:	bf04      	itt	eq
  4059dc:	4619      	moveq	r1, r3
  4059de:	4610      	moveq	r0, r2
  4059e0:	bd30      	pop	{r4, r5, pc}
  4059e2:	ea91 0f03 	teq	r1, r3
  4059e6:	bf1e      	ittt	ne
  4059e8:	2100      	movne	r1, #0
  4059ea:	2000      	movne	r0, #0
  4059ec:	bd30      	popne	{r4, r5, pc}
  4059ee:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4059f2:	d105      	bne.n	405a00 <__adddf3+0x230>
  4059f4:	0040      	lsls	r0, r0, #1
  4059f6:	4149      	adcs	r1, r1
  4059f8:	bf28      	it	cs
  4059fa:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4059fe:	bd30      	pop	{r4, r5, pc}
  405a00:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  405a04:	bf3c      	itt	cc
  405a06:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  405a0a:	bd30      	popcc	{r4, r5, pc}
  405a0c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405a10:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  405a14:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405a18:	f04f 0000 	mov.w	r0, #0
  405a1c:	bd30      	pop	{r4, r5, pc}
  405a1e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405a22:	bf1a      	itte	ne
  405a24:	4619      	movne	r1, r3
  405a26:	4610      	movne	r0, r2
  405a28:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  405a2c:	bf1c      	itt	ne
  405a2e:	460b      	movne	r3, r1
  405a30:	4602      	movne	r2, r0
  405a32:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405a36:	bf06      	itte	eq
  405a38:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  405a3c:	ea91 0f03 	teqeq	r1, r3
  405a40:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405a44:	bd30      	pop	{r4, r5, pc}
  405a46:	bf00      	nop

00405a48 <__aeabi_ui2d>:
  405a48:	f090 0f00 	teq	r0, #0
  405a4c:	bf04      	itt	eq
  405a4e:	2100      	moveq	r1, #0
  405a50:	4770      	bxeq	lr
  405a52:	b530      	push	{r4, r5, lr}
  405a54:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405a58:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405a5c:	f04f 0500 	mov.w	r5, #0
  405a60:	f04f 0100 	mov.w	r1, #0
  405a64:	e750      	b.n	405908 <__adddf3+0x138>
  405a66:	bf00      	nop

00405a68 <__aeabi_i2d>:
  405a68:	f090 0f00 	teq	r0, #0
  405a6c:	bf04      	itt	eq
  405a6e:	2100      	moveq	r1, #0
  405a70:	4770      	bxeq	lr
  405a72:	b530      	push	{r4, r5, lr}
  405a74:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405a78:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405a7c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405a80:	bf48      	it	mi
  405a82:	4240      	negmi	r0, r0
  405a84:	f04f 0100 	mov.w	r1, #0
  405a88:	e73e      	b.n	405908 <__adddf3+0x138>
  405a8a:	bf00      	nop

00405a8c <__aeabi_f2d>:
  405a8c:	0042      	lsls	r2, r0, #1
  405a8e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405a92:	ea4f 0131 	mov.w	r1, r1, rrx
  405a96:	ea4f 7002 	mov.w	r0, r2, lsl #28
  405a9a:	bf1f      	itttt	ne
  405a9c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405aa0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405aa4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405aa8:	4770      	bxne	lr
  405aaa:	f092 0f00 	teq	r2, #0
  405aae:	bf14      	ite	ne
  405ab0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405ab4:	4770      	bxeq	lr
  405ab6:	b530      	push	{r4, r5, lr}
  405ab8:	f44f 7460 	mov.w	r4, #896	; 0x380
  405abc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405ac0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405ac4:	e720      	b.n	405908 <__adddf3+0x138>
  405ac6:	bf00      	nop

00405ac8 <__aeabi_ul2d>:
  405ac8:	ea50 0201 	orrs.w	r2, r0, r1
  405acc:	bf08      	it	eq
  405ace:	4770      	bxeq	lr
  405ad0:	b530      	push	{r4, r5, lr}
  405ad2:	f04f 0500 	mov.w	r5, #0
  405ad6:	e00a      	b.n	405aee <__aeabi_l2d+0x16>

00405ad8 <__aeabi_l2d>:
  405ad8:	ea50 0201 	orrs.w	r2, r0, r1
  405adc:	bf08      	it	eq
  405ade:	4770      	bxeq	lr
  405ae0:	b530      	push	{r4, r5, lr}
  405ae2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  405ae6:	d502      	bpl.n	405aee <__aeabi_l2d+0x16>
  405ae8:	4240      	negs	r0, r0
  405aea:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405aee:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405af2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  405af6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  405afa:	f43f aedc 	beq.w	4058b6 <__adddf3+0xe6>
  405afe:	f04f 0203 	mov.w	r2, #3
  405b02:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405b06:	bf18      	it	ne
  405b08:	3203      	addne	r2, #3
  405b0a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  405b0e:	bf18      	it	ne
  405b10:	3203      	addne	r2, #3
  405b12:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  405b16:	f1c2 0320 	rsb	r3, r2, #32
  405b1a:	fa00 fc03 	lsl.w	ip, r0, r3
  405b1e:	fa20 f002 	lsr.w	r0, r0, r2
  405b22:	fa01 fe03 	lsl.w	lr, r1, r3
  405b26:	ea40 000e 	orr.w	r0, r0, lr
  405b2a:	fa21 f102 	lsr.w	r1, r1, r2
  405b2e:	4414      	add	r4, r2
  405b30:	e6c1      	b.n	4058b6 <__adddf3+0xe6>
  405b32:	bf00      	nop

00405b34 <__aeabi_dmul>:
  405b34:	b570      	push	{r4, r5, r6, lr}
  405b36:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405b3a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405b3e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405b42:	bf1d      	ittte	ne
  405b44:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405b48:	ea94 0f0c 	teqne	r4, ip
  405b4c:	ea95 0f0c 	teqne	r5, ip
  405b50:	f000 f8de 	bleq	405d10 <__aeabi_dmul+0x1dc>
  405b54:	442c      	add	r4, r5
  405b56:	ea81 0603 	eor.w	r6, r1, r3
  405b5a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405b5e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405b62:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405b66:	bf18      	it	ne
  405b68:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405b6c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405b70:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405b74:	d038      	beq.n	405be8 <__aeabi_dmul+0xb4>
  405b76:	fba0 ce02 	umull	ip, lr, r0, r2
  405b7a:	f04f 0500 	mov.w	r5, #0
  405b7e:	fbe1 e502 	umlal	lr, r5, r1, r2
  405b82:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405b86:	fbe0 e503 	umlal	lr, r5, r0, r3
  405b8a:	f04f 0600 	mov.w	r6, #0
  405b8e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405b92:	f09c 0f00 	teq	ip, #0
  405b96:	bf18      	it	ne
  405b98:	f04e 0e01 	orrne.w	lr, lr, #1
  405b9c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405ba0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405ba4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405ba8:	d204      	bcs.n	405bb4 <__aeabi_dmul+0x80>
  405baa:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405bae:	416d      	adcs	r5, r5
  405bb0:	eb46 0606 	adc.w	r6, r6, r6
  405bb4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405bb8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405bbc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405bc0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405bc4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405bc8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405bcc:	bf88      	it	hi
  405bce:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405bd2:	d81e      	bhi.n	405c12 <__aeabi_dmul+0xde>
  405bd4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405bd8:	bf08      	it	eq
  405bda:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405bde:	f150 0000 	adcs.w	r0, r0, #0
  405be2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405be6:	bd70      	pop	{r4, r5, r6, pc}
  405be8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405bec:	ea46 0101 	orr.w	r1, r6, r1
  405bf0:	ea40 0002 	orr.w	r0, r0, r2
  405bf4:	ea81 0103 	eor.w	r1, r1, r3
  405bf8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405bfc:	bfc2      	ittt	gt
  405bfe:	ebd4 050c 	rsbsgt	r5, r4, ip
  405c02:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405c06:	bd70      	popgt	{r4, r5, r6, pc}
  405c08:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405c0c:	f04f 0e00 	mov.w	lr, #0
  405c10:	3c01      	subs	r4, #1
  405c12:	f300 80ab 	bgt.w	405d6c <__aeabi_dmul+0x238>
  405c16:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405c1a:	bfde      	ittt	le
  405c1c:	2000      	movle	r0, #0
  405c1e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405c22:	bd70      	pople	{r4, r5, r6, pc}
  405c24:	f1c4 0400 	rsb	r4, r4, #0
  405c28:	3c20      	subs	r4, #32
  405c2a:	da35      	bge.n	405c98 <__aeabi_dmul+0x164>
  405c2c:	340c      	adds	r4, #12
  405c2e:	dc1b      	bgt.n	405c68 <__aeabi_dmul+0x134>
  405c30:	f104 0414 	add.w	r4, r4, #20
  405c34:	f1c4 0520 	rsb	r5, r4, #32
  405c38:	fa00 f305 	lsl.w	r3, r0, r5
  405c3c:	fa20 f004 	lsr.w	r0, r0, r4
  405c40:	fa01 f205 	lsl.w	r2, r1, r5
  405c44:	ea40 0002 	orr.w	r0, r0, r2
  405c48:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405c4c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405c50:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405c54:	fa21 f604 	lsr.w	r6, r1, r4
  405c58:	eb42 0106 	adc.w	r1, r2, r6
  405c5c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405c60:	bf08      	it	eq
  405c62:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405c66:	bd70      	pop	{r4, r5, r6, pc}
  405c68:	f1c4 040c 	rsb	r4, r4, #12
  405c6c:	f1c4 0520 	rsb	r5, r4, #32
  405c70:	fa00 f304 	lsl.w	r3, r0, r4
  405c74:	fa20 f005 	lsr.w	r0, r0, r5
  405c78:	fa01 f204 	lsl.w	r2, r1, r4
  405c7c:	ea40 0002 	orr.w	r0, r0, r2
  405c80:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405c84:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405c88:	f141 0100 	adc.w	r1, r1, #0
  405c8c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405c90:	bf08      	it	eq
  405c92:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405c96:	bd70      	pop	{r4, r5, r6, pc}
  405c98:	f1c4 0520 	rsb	r5, r4, #32
  405c9c:	fa00 f205 	lsl.w	r2, r0, r5
  405ca0:	ea4e 0e02 	orr.w	lr, lr, r2
  405ca4:	fa20 f304 	lsr.w	r3, r0, r4
  405ca8:	fa01 f205 	lsl.w	r2, r1, r5
  405cac:	ea43 0302 	orr.w	r3, r3, r2
  405cb0:	fa21 f004 	lsr.w	r0, r1, r4
  405cb4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405cb8:	fa21 f204 	lsr.w	r2, r1, r4
  405cbc:	ea20 0002 	bic.w	r0, r0, r2
  405cc0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405cc4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405cc8:	bf08      	it	eq
  405cca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405cce:	bd70      	pop	{r4, r5, r6, pc}
  405cd0:	f094 0f00 	teq	r4, #0
  405cd4:	d10f      	bne.n	405cf6 <__aeabi_dmul+0x1c2>
  405cd6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405cda:	0040      	lsls	r0, r0, #1
  405cdc:	eb41 0101 	adc.w	r1, r1, r1
  405ce0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405ce4:	bf08      	it	eq
  405ce6:	3c01      	subeq	r4, #1
  405ce8:	d0f7      	beq.n	405cda <__aeabi_dmul+0x1a6>
  405cea:	ea41 0106 	orr.w	r1, r1, r6
  405cee:	f095 0f00 	teq	r5, #0
  405cf2:	bf18      	it	ne
  405cf4:	4770      	bxne	lr
  405cf6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405cfa:	0052      	lsls	r2, r2, #1
  405cfc:	eb43 0303 	adc.w	r3, r3, r3
  405d00:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405d04:	bf08      	it	eq
  405d06:	3d01      	subeq	r5, #1
  405d08:	d0f7      	beq.n	405cfa <__aeabi_dmul+0x1c6>
  405d0a:	ea43 0306 	orr.w	r3, r3, r6
  405d0e:	4770      	bx	lr
  405d10:	ea94 0f0c 	teq	r4, ip
  405d14:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405d18:	bf18      	it	ne
  405d1a:	ea95 0f0c 	teqne	r5, ip
  405d1e:	d00c      	beq.n	405d3a <__aeabi_dmul+0x206>
  405d20:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405d24:	bf18      	it	ne
  405d26:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405d2a:	d1d1      	bne.n	405cd0 <__aeabi_dmul+0x19c>
  405d2c:	ea81 0103 	eor.w	r1, r1, r3
  405d30:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405d34:	f04f 0000 	mov.w	r0, #0
  405d38:	bd70      	pop	{r4, r5, r6, pc}
  405d3a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405d3e:	bf06      	itte	eq
  405d40:	4610      	moveq	r0, r2
  405d42:	4619      	moveq	r1, r3
  405d44:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405d48:	d019      	beq.n	405d7e <__aeabi_dmul+0x24a>
  405d4a:	ea94 0f0c 	teq	r4, ip
  405d4e:	d102      	bne.n	405d56 <__aeabi_dmul+0x222>
  405d50:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405d54:	d113      	bne.n	405d7e <__aeabi_dmul+0x24a>
  405d56:	ea95 0f0c 	teq	r5, ip
  405d5a:	d105      	bne.n	405d68 <__aeabi_dmul+0x234>
  405d5c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405d60:	bf1c      	itt	ne
  405d62:	4610      	movne	r0, r2
  405d64:	4619      	movne	r1, r3
  405d66:	d10a      	bne.n	405d7e <__aeabi_dmul+0x24a>
  405d68:	ea81 0103 	eor.w	r1, r1, r3
  405d6c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405d70:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405d74:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405d78:	f04f 0000 	mov.w	r0, #0
  405d7c:	bd70      	pop	{r4, r5, r6, pc}
  405d7e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405d82:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405d86:	bd70      	pop	{r4, r5, r6, pc}

00405d88 <__aeabi_ddiv>:
  405d88:	b570      	push	{r4, r5, r6, lr}
  405d8a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405d8e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405d92:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405d96:	bf1d      	ittte	ne
  405d98:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405d9c:	ea94 0f0c 	teqne	r4, ip
  405da0:	ea95 0f0c 	teqne	r5, ip
  405da4:	f000 f8a7 	bleq	405ef6 <__aeabi_ddiv+0x16e>
  405da8:	eba4 0405 	sub.w	r4, r4, r5
  405dac:	ea81 0e03 	eor.w	lr, r1, r3
  405db0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405db4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405db8:	f000 8088 	beq.w	405ecc <__aeabi_ddiv+0x144>
  405dbc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405dc0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405dc4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405dc8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405dcc:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405dd0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405dd4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405dd8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405ddc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405de0:	429d      	cmp	r5, r3
  405de2:	bf08      	it	eq
  405de4:	4296      	cmpeq	r6, r2
  405de6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405dea:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405dee:	d202      	bcs.n	405df6 <__aeabi_ddiv+0x6e>
  405df0:	085b      	lsrs	r3, r3, #1
  405df2:	ea4f 0232 	mov.w	r2, r2, rrx
  405df6:	1ab6      	subs	r6, r6, r2
  405df8:	eb65 0503 	sbc.w	r5, r5, r3
  405dfc:	085b      	lsrs	r3, r3, #1
  405dfe:	ea4f 0232 	mov.w	r2, r2, rrx
  405e02:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405e06:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405e0a:	ebb6 0e02 	subs.w	lr, r6, r2
  405e0e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405e12:	bf22      	ittt	cs
  405e14:	1ab6      	subcs	r6, r6, r2
  405e16:	4675      	movcs	r5, lr
  405e18:	ea40 000c 	orrcs.w	r0, r0, ip
  405e1c:	085b      	lsrs	r3, r3, #1
  405e1e:	ea4f 0232 	mov.w	r2, r2, rrx
  405e22:	ebb6 0e02 	subs.w	lr, r6, r2
  405e26:	eb75 0e03 	sbcs.w	lr, r5, r3
  405e2a:	bf22      	ittt	cs
  405e2c:	1ab6      	subcs	r6, r6, r2
  405e2e:	4675      	movcs	r5, lr
  405e30:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405e34:	085b      	lsrs	r3, r3, #1
  405e36:	ea4f 0232 	mov.w	r2, r2, rrx
  405e3a:	ebb6 0e02 	subs.w	lr, r6, r2
  405e3e:	eb75 0e03 	sbcs.w	lr, r5, r3
  405e42:	bf22      	ittt	cs
  405e44:	1ab6      	subcs	r6, r6, r2
  405e46:	4675      	movcs	r5, lr
  405e48:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405e4c:	085b      	lsrs	r3, r3, #1
  405e4e:	ea4f 0232 	mov.w	r2, r2, rrx
  405e52:	ebb6 0e02 	subs.w	lr, r6, r2
  405e56:	eb75 0e03 	sbcs.w	lr, r5, r3
  405e5a:	bf22      	ittt	cs
  405e5c:	1ab6      	subcs	r6, r6, r2
  405e5e:	4675      	movcs	r5, lr
  405e60:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405e64:	ea55 0e06 	orrs.w	lr, r5, r6
  405e68:	d018      	beq.n	405e9c <__aeabi_ddiv+0x114>
  405e6a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405e6e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405e72:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405e76:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405e7a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405e7e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405e82:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405e86:	d1c0      	bne.n	405e0a <__aeabi_ddiv+0x82>
  405e88:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405e8c:	d10b      	bne.n	405ea6 <__aeabi_ddiv+0x11e>
  405e8e:	ea41 0100 	orr.w	r1, r1, r0
  405e92:	f04f 0000 	mov.w	r0, #0
  405e96:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405e9a:	e7b6      	b.n	405e0a <__aeabi_ddiv+0x82>
  405e9c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405ea0:	bf04      	itt	eq
  405ea2:	4301      	orreq	r1, r0
  405ea4:	2000      	moveq	r0, #0
  405ea6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405eaa:	bf88      	it	hi
  405eac:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405eb0:	f63f aeaf 	bhi.w	405c12 <__aeabi_dmul+0xde>
  405eb4:	ebb5 0c03 	subs.w	ip, r5, r3
  405eb8:	bf04      	itt	eq
  405eba:	ebb6 0c02 	subseq.w	ip, r6, r2
  405ebe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405ec2:	f150 0000 	adcs.w	r0, r0, #0
  405ec6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405eca:	bd70      	pop	{r4, r5, r6, pc}
  405ecc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405ed0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405ed4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405ed8:	bfc2      	ittt	gt
  405eda:	ebd4 050c 	rsbsgt	r5, r4, ip
  405ede:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405ee2:	bd70      	popgt	{r4, r5, r6, pc}
  405ee4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405ee8:	f04f 0e00 	mov.w	lr, #0
  405eec:	3c01      	subs	r4, #1
  405eee:	e690      	b.n	405c12 <__aeabi_dmul+0xde>
  405ef0:	ea45 0e06 	orr.w	lr, r5, r6
  405ef4:	e68d      	b.n	405c12 <__aeabi_dmul+0xde>
  405ef6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405efa:	ea94 0f0c 	teq	r4, ip
  405efe:	bf08      	it	eq
  405f00:	ea95 0f0c 	teqeq	r5, ip
  405f04:	f43f af3b 	beq.w	405d7e <__aeabi_dmul+0x24a>
  405f08:	ea94 0f0c 	teq	r4, ip
  405f0c:	d10a      	bne.n	405f24 <__aeabi_ddiv+0x19c>
  405f0e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405f12:	f47f af34 	bne.w	405d7e <__aeabi_dmul+0x24a>
  405f16:	ea95 0f0c 	teq	r5, ip
  405f1a:	f47f af25 	bne.w	405d68 <__aeabi_dmul+0x234>
  405f1e:	4610      	mov	r0, r2
  405f20:	4619      	mov	r1, r3
  405f22:	e72c      	b.n	405d7e <__aeabi_dmul+0x24a>
  405f24:	ea95 0f0c 	teq	r5, ip
  405f28:	d106      	bne.n	405f38 <__aeabi_ddiv+0x1b0>
  405f2a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405f2e:	f43f aefd 	beq.w	405d2c <__aeabi_dmul+0x1f8>
  405f32:	4610      	mov	r0, r2
  405f34:	4619      	mov	r1, r3
  405f36:	e722      	b.n	405d7e <__aeabi_dmul+0x24a>
  405f38:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405f3c:	bf18      	it	ne
  405f3e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405f42:	f47f aec5 	bne.w	405cd0 <__aeabi_dmul+0x19c>
  405f46:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405f4a:	f47f af0d 	bne.w	405d68 <__aeabi_dmul+0x234>
  405f4e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405f52:	f47f aeeb 	bne.w	405d2c <__aeabi_dmul+0x1f8>
  405f56:	e712      	b.n	405d7e <__aeabi_dmul+0x24a>

00405f58 <__gedf2>:
  405f58:	f04f 3cff 	mov.w	ip, #4294967295
  405f5c:	e006      	b.n	405f6c <__cmpdf2+0x4>
  405f5e:	bf00      	nop

00405f60 <__ledf2>:
  405f60:	f04f 0c01 	mov.w	ip, #1
  405f64:	e002      	b.n	405f6c <__cmpdf2+0x4>
  405f66:	bf00      	nop

00405f68 <__cmpdf2>:
  405f68:	f04f 0c01 	mov.w	ip, #1
  405f6c:	f84d cd04 	str.w	ip, [sp, #-4]!
  405f70:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f74:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f78:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f7c:	bf18      	it	ne
  405f7e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405f82:	d01b      	beq.n	405fbc <__cmpdf2+0x54>
  405f84:	b001      	add	sp, #4
  405f86:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405f8a:	bf0c      	ite	eq
  405f8c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405f90:	ea91 0f03 	teqne	r1, r3
  405f94:	bf02      	ittt	eq
  405f96:	ea90 0f02 	teqeq	r0, r2
  405f9a:	2000      	moveq	r0, #0
  405f9c:	4770      	bxeq	lr
  405f9e:	f110 0f00 	cmn.w	r0, #0
  405fa2:	ea91 0f03 	teq	r1, r3
  405fa6:	bf58      	it	pl
  405fa8:	4299      	cmppl	r1, r3
  405faa:	bf08      	it	eq
  405fac:	4290      	cmpeq	r0, r2
  405fae:	bf2c      	ite	cs
  405fb0:	17d8      	asrcs	r0, r3, #31
  405fb2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405fb6:	f040 0001 	orr.w	r0, r0, #1
  405fba:	4770      	bx	lr
  405fbc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405fc0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fc4:	d102      	bne.n	405fcc <__cmpdf2+0x64>
  405fc6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405fca:	d107      	bne.n	405fdc <__cmpdf2+0x74>
  405fcc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405fd0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405fd4:	d1d6      	bne.n	405f84 <__cmpdf2+0x1c>
  405fd6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405fda:	d0d3      	beq.n	405f84 <__cmpdf2+0x1c>
  405fdc:	f85d 0b04 	ldr.w	r0, [sp], #4
  405fe0:	4770      	bx	lr
  405fe2:	bf00      	nop

00405fe4 <__aeabi_cdrcmple>:
  405fe4:	4684      	mov	ip, r0
  405fe6:	4610      	mov	r0, r2
  405fe8:	4662      	mov	r2, ip
  405fea:	468c      	mov	ip, r1
  405fec:	4619      	mov	r1, r3
  405fee:	4663      	mov	r3, ip
  405ff0:	e000      	b.n	405ff4 <__aeabi_cdcmpeq>
  405ff2:	bf00      	nop

00405ff4 <__aeabi_cdcmpeq>:
  405ff4:	b501      	push	{r0, lr}
  405ff6:	f7ff ffb7 	bl	405f68 <__cmpdf2>
  405ffa:	2800      	cmp	r0, #0
  405ffc:	bf48      	it	mi
  405ffe:	f110 0f00 	cmnmi.w	r0, #0
  406002:	bd01      	pop	{r0, pc}

00406004 <__aeabi_dcmpeq>:
  406004:	f84d ed08 	str.w	lr, [sp, #-8]!
  406008:	f7ff fff4 	bl	405ff4 <__aeabi_cdcmpeq>
  40600c:	bf0c      	ite	eq
  40600e:	2001      	moveq	r0, #1
  406010:	2000      	movne	r0, #0
  406012:	f85d fb08 	ldr.w	pc, [sp], #8
  406016:	bf00      	nop

00406018 <__aeabi_dcmplt>:
  406018:	f84d ed08 	str.w	lr, [sp, #-8]!
  40601c:	f7ff ffea 	bl	405ff4 <__aeabi_cdcmpeq>
  406020:	bf34      	ite	cc
  406022:	2001      	movcc	r0, #1
  406024:	2000      	movcs	r0, #0
  406026:	f85d fb08 	ldr.w	pc, [sp], #8
  40602a:	bf00      	nop

0040602c <__aeabi_dcmple>:
  40602c:	f84d ed08 	str.w	lr, [sp, #-8]!
  406030:	f7ff ffe0 	bl	405ff4 <__aeabi_cdcmpeq>
  406034:	bf94      	ite	ls
  406036:	2001      	movls	r0, #1
  406038:	2000      	movhi	r0, #0
  40603a:	f85d fb08 	ldr.w	pc, [sp], #8
  40603e:	bf00      	nop

00406040 <__aeabi_dcmpge>:
  406040:	f84d ed08 	str.w	lr, [sp, #-8]!
  406044:	f7ff ffce 	bl	405fe4 <__aeabi_cdrcmple>
  406048:	bf94      	ite	ls
  40604a:	2001      	movls	r0, #1
  40604c:	2000      	movhi	r0, #0
  40604e:	f85d fb08 	ldr.w	pc, [sp], #8
  406052:	bf00      	nop

00406054 <__aeabi_dcmpgt>:
  406054:	f84d ed08 	str.w	lr, [sp, #-8]!
  406058:	f7ff ffc4 	bl	405fe4 <__aeabi_cdrcmple>
  40605c:	bf34      	ite	cc
  40605e:	2001      	movcc	r0, #1
  406060:	2000      	movcs	r0, #0
  406062:	f85d fb08 	ldr.w	pc, [sp], #8
  406066:	bf00      	nop

00406068 <__aeabi_dcmpun>:
  406068:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40606c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406070:	d102      	bne.n	406078 <__aeabi_dcmpun+0x10>
  406072:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  406076:	d10a      	bne.n	40608e <__aeabi_dcmpun+0x26>
  406078:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40607c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  406080:	d102      	bne.n	406088 <__aeabi_dcmpun+0x20>
  406082:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  406086:	d102      	bne.n	40608e <__aeabi_dcmpun+0x26>
  406088:	f04f 0000 	mov.w	r0, #0
  40608c:	4770      	bx	lr
  40608e:	f04f 0001 	mov.w	r0, #1
  406092:	4770      	bx	lr

00406094 <__aeabi_d2iz>:
  406094:	ea4f 0241 	mov.w	r2, r1, lsl #1
  406098:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40609c:	d215      	bcs.n	4060ca <__aeabi_d2iz+0x36>
  40609e:	d511      	bpl.n	4060c4 <__aeabi_d2iz+0x30>
  4060a0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4060a4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4060a8:	d912      	bls.n	4060d0 <__aeabi_d2iz+0x3c>
  4060aa:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4060ae:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4060b2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4060b6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4060ba:	fa23 f002 	lsr.w	r0, r3, r2
  4060be:	bf18      	it	ne
  4060c0:	4240      	negne	r0, r0
  4060c2:	4770      	bx	lr
  4060c4:	f04f 0000 	mov.w	r0, #0
  4060c8:	4770      	bx	lr
  4060ca:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4060ce:	d105      	bne.n	4060dc <__aeabi_d2iz+0x48>
  4060d0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4060d4:	bf08      	it	eq
  4060d6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4060da:	4770      	bx	lr
  4060dc:	f04f 0000 	mov.w	r0, #0
  4060e0:	4770      	bx	lr
  4060e2:	bf00      	nop

004060e4 <__aeabi_uldivmod>:
  4060e4:	b953      	cbnz	r3, 4060fc <__aeabi_uldivmod+0x18>
  4060e6:	b94a      	cbnz	r2, 4060fc <__aeabi_uldivmod+0x18>
  4060e8:	2900      	cmp	r1, #0
  4060ea:	bf08      	it	eq
  4060ec:	2800      	cmpeq	r0, #0
  4060ee:	bf1c      	itt	ne
  4060f0:	f04f 31ff 	movne.w	r1, #4294967295
  4060f4:	f04f 30ff 	movne.w	r0, #4294967295
  4060f8:	f000 b97a 	b.w	4063f0 <__aeabi_idiv0>
  4060fc:	f1ad 0c08 	sub.w	ip, sp, #8
  406100:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  406104:	f000 f806 	bl	406114 <__udivmoddi4>
  406108:	f8dd e004 	ldr.w	lr, [sp, #4]
  40610c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  406110:	b004      	add	sp, #16
  406112:	4770      	bx	lr

00406114 <__udivmoddi4>:
  406114:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  406118:	468c      	mov	ip, r1
  40611a:	460d      	mov	r5, r1
  40611c:	4604      	mov	r4, r0
  40611e:	9e08      	ldr	r6, [sp, #32]
  406120:	2b00      	cmp	r3, #0
  406122:	d151      	bne.n	4061c8 <__udivmoddi4+0xb4>
  406124:	428a      	cmp	r2, r1
  406126:	4617      	mov	r7, r2
  406128:	d96d      	bls.n	406206 <__udivmoddi4+0xf2>
  40612a:	fab2 fe82 	clz	lr, r2
  40612e:	f1be 0f00 	cmp.w	lr, #0
  406132:	d00b      	beq.n	40614c <__udivmoddi4+0x38>
  406134:	f1ce 0c20 	rsb	ip, lr, #32
  406138:	fa01 f50e 	lsl.w	r5, r1, lr
  40613c:	fa20 fc0c 	lsr.w	ip, r0, ip
  406140:	fa02 f70e 	lsl.w	r7, r2, lr
  406144:	ea4c 0c05 	orr.w	ip, ip, r5
  406148:	fa00 f40e 	lsl.w	r4, r0, lr
  40614c:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  406150:	0c25      	lsrs	r5, r4, #16
  406152:	fbbc f8fa 	udiv	r8, ip, sl
  406156:	fa1f f987 	uxth.w	r9, r7
  40615a:	fb0a cc18 	mls	ip, sl, r8, ip
  40615e:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  406162:	fb08 f309 	mul.w	r3, r8, r9
  406166:	42ab      	cmp	r3, r5
  406168:	d90a      	bls.n	406180 <__udivmoddi4+0x6c>
  40616a:	19ed      	adds	r5, r5, r7
  40616c:	f108 32ff 	add.w	r2, r8, #4294967295
  406170:	f080 8123 	bcs.w	4063ba <__udivmoddi4+0x2a6>
  406174:	42ab      	cmp	r3, r5
  406176:	f240 8120 	bls.w	4063ba <__udivmoddi4+0x2a6>
  40617a:	f1a8 0802 	sub.w	r8, r8, #2
  40617e:	443d      	add	r5, r7
  406180:	1aed      	subs	r5, r5, r3
  406182:	b2a4      	uxth	r4, r4
  406184:	fbb5 f0fa 	udiv	r0, r5, sl
  406188:	fb0a 5510 	mls	r5, sl, r0, r5
  40618c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  406190:	fb00 f909 	mul.w	r9, r0, r9
  406194:	45a1      	cmp	r9, r4
  406196:	d909      	bls.n	4061ac <__udivmoddi4+0x98>
  406198:	19e4      	adds	r4, r4, r7
  40619a:	f100 33ff 	add.w	r3, r0, #4294967295
  40619e:	f080 810a 	bcs.w	4063b6 <__udivmoddi4+0x2a2>
  4061a2:	45a1      	cmp	r9, r4
  4061a4:	f240 8107 	bls.w	4063b6 <__udivmoddi4+0x2a2>
  4061a8:	3802      	subs	r0, #2
  4061aa:	443c      	add	r4, r7
  4061ac:	eba4 0409 	sub.w	r4, r4, r9
  4061b0:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  4061b4:	2100      	movs	r1, #0
  4061b6:	2e00      	cmp	r6, #0
  4061b8:	d061      	beq.n	40627e <__udivmoddi4+0x16a>
  4061ba:	fa24 f40e 	lsr.w	r4, r4, lr
  4061be:	2300      	movs	r3, #0
  4061c0:	6034      	str	r4, [r6, #0]
  4061c2:	6073      	str	r3, [r6, #4]
  4061c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061c8:	428b      	cmp	r3, r1
  4061ca:	d907      	bls.n	4061dc <__udivmoddi4+0xc8>
  4061cc:	2e00      	cmp	r6, #0
  4061ce:	d054      	beq.n	40627a <__udivmoddi4+0x166>
  4061d0:	2100      	movs	r1, #0
  4061d2:	e886 0021 	stmia.w	r6, {r0, r5}
  4061d6:	4608      	mov	r0, r1
  4061d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4061dc:	fab3 f183 	clz	r1, r3
  4061e0:	2900      	cmp	r1, #0
  4061e2:	f040 808e 	bne.w	406302 <__udivmoddi4+0x1ee>
  4061e6:	42ab      	cmp	r3, r5
  4061e8:	d302      	bcc.n	4061f0 <__udivmoddi4+0xdc>
  4061ea:	4282      	cmp	r2, r0
  4061ec:	f200 80fa 	bhi.w	4063e4 <__udivmoddi4+0x2d0>
  4061f0:	1a84      	subs	r4, r0, r2
  4061f2:	eb65 0503 	sbc.w	r5, r5, r3
  4061f6:	2001      	movs	r0, #1
  4061f8:	46ac      	mov	ip, r5
  4061fa:	2e00      	cmp	r6, #0
  4061fc:	d03f      	beq.n	40627e <__udivmoddi4+0x16a>
  4061fe:	e886 1010 	stmia.w	r6, {r4, ip}
  406202:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406206:	b912      	cbnz	r2, 40620e <__udivmoddi4+0xfa>
  406208:	2701      	movs	r7, #1
  40620a:	fbb7 f7f2 	udiv	r7, r7, r2
  40620e:	fab7 fe87 	clz	lr, r7
  406212:	f1be 0f00 	cmp.w	lr, #0
  406216:	d134      	bne.n	406282 <__udivmoddi4+0x16e>
  406218:	1beb      	subs	r3, r5, r7
  40621a:	0c3a      	lsrs	r2, r7, #16
  40621c:	fa1f fc87 	uxth.w	ip, r7
  406220:	2101      	movs	r1, #1
  406222:	fbb3 f8f2 	udiv	r8, r3, r2
  406226:	0c25      	lsrs	r5, r4, #16
  406228:	fb02 3318 	mls	r3, r2, r8, r3
  40622c:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  406230:	fb0c f308 	mul.w	r3, ip, r8
  406234:	42ab      	cmp	r3, r5
  406236:	d907      	bls.n	406248 <__udivmoddi4+0x134>
  406238:	19ed      	adds	r5, r5, r7
  40623a:	f108 30ff 	add.w	r0, r8, #4294967295
  40623e:	d202      	bcs.n	406246 <__udivmoddi4+0x132>
  406240:	42ab      	cmp	r3, r5
  406242:	f200 80d1 	bhi.w	4063e8 <__udivmoddi4+0x2d4>
  406246:	4680      	mov	r8, r0
  406248:	1aed      	subs	r5, r5, r3
  40624a:	b2a3      	uxth	r3, r4
  40624c:	fbb5 f0f2 	udiv	r0, r5, r2
  406250:	fb02 5510 	mls	r5, r2, r0, r5
  406254:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  406258:	fb0c fc00 	mul.w	ip, ip, r0
  40625c:	45a4      	cmp	ip, r4
  40625e:	d907      	bls.n	406270 <__udivmoddi4+0x15c>
  406260:	19e4      	adds	r4, r4, r7
  406262:	f100 33ff 	add.w	r3, r0, #4294967295
  406266:	d202      	bcs.n	40626e <__udivmoddi4+0x15a>
  406268:	45a4      	cmp	ip, r4
  40626a:	f200 80b8 	bhi.w	4063de <__udivmoddi4+0x2ca>
  40626e:	4618      	mov	r0, r3
  406270:	eba4 040c 	sub.w	r4, r4, ip
  406274:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  406278:	e79d      	b.n	4061b6 <__udivmoddi4+0xa2>
  40627a:	4631      	mov	r1, r6
  40627c:	4630      	mov	r0, r6
  40627e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406282:	f1ce 0420 	rsb	r4, lr, #32
  406286:	fa05 f30e 	lsl.w	r3, r5, lr
  40628a:	fa07 f70e 	lsl.w	r7, r7, lr
  40628e:	fa20 f804 	lsr.w	r8, r0, r4
  406292:	0c3a      	lsrs	r2, r7, #16
  406294:	fa25 f404 	lsr.w	r4, r5, r4
  406298:	ea48 0803 	orr.w	r8, r8, r3
  40629c:	fbb4 f1f2 	udiv	r1, r4, r2
  4062a0:	ea4f 4518 	mov.w	r5, r8, lsr #16
  4062a4:	fb02 4411 	mls	r4, r2, r1, r4
  4062a8:	fa1f fc87 	uxth.w	ip, r7
  4062ac:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  4062b0:	fb01 f30c 	mul.w	r3, r1, ip
  4062b4:	42ab      	cmp	r3, r5
  4062b6:	fa00 f40e 	lsl.w	r4, r0, lr
  4062ba:	d909      	bls.n	4062d0 <__udivmoddi4+0x1bc>
  4062bc:	19ed      	adds	r5, r5, r7
  4062be:	f101 30ff 	add.w	r0, r1, #4294967295
  4062c2:	f080 808a 	bcs.w	4063da <__udivmoddi4+0x2c6>
  4062c6:	42ab      	cmp	r3, r5
  4062c8:	f240 8087 	bls.w	4063da <__udivmoddi4+0x2c6>
  4062cc:	3902      	subs	r1, #2
  4062ce:	443d      	add	r5, r7
  4062d0:	1aeb      	subs	r3, r5, r3
  4062d2:	fa1f f588 	uxth.w	r5, r8
  4062d6:	fbb3 f0f2 	udiv	r0, r3, r2
  4062da:	fb02 3310 	mls	r3, r2, r0, r3
  4062de:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4062e2:	fb00 f30c 	mul.w	r3, r0, ip
  4062e6:	42ab      	cmp	r3, r5
  4062e8:	d907      	bls.n	4062fa <__udivmoddi4+0x1e6>
  4062ea:	19ed      	adds	r5, r5, r7
  4062ec:	f100 38ff 	add.w	r8, r0, #4294967295
  4062f0:	d26f      	bcs.n	4063d2 <__udivmoddi4+0x2be>
  4062f2:	42ab      	cmp	r3, r5
  4062f4:	d96d      	bls.n	4063d2 <__udivmoddi4+0x2be>
  4062f6:	3802      	subs	r0, #2
  4062f8:	443d      	add	r5, r7
  4062fa:	1aeb      	subs	r3, r5, r3
  4062fc:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  406300:	e78f      	b.n	406222 <__udivmoddi4+0x10e>
  406302:	f1c1 0720 	rsb	r7, r1, #32
  406306:	fa22 f807 	lsr.w	r8, r2, r7
  40630a:	408b      	lsls	r3, r1
  40630c:	fa05 f401 	lsl.w	r4, r5, r1
  406310:	ea48 0303 	orr.w	r3, r8, r3
  406314:	fa20 fe07 	lsr.w	lr, r0, r7
  406318:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  40631c:	40fd      	lsrs	r5, r7
  40631e:	ea4e 0e04 	orr.w	lr, lr, r4
  406322:	fbb5 f9fc 	udiv	r9, r5, ip
  406326:	ea4f 441e 	mov.w	r4, lr, lsr #16
  40632a:	fb0c 5519 	mls	r5, ip, r9, r5
  40632e:	fa1f f883 	uxth.w	r8, r3
  406332:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  406336:	fb09 f408 	mul.w	r4, r9, r8
  40633a:	42ac      	cmp	r4, r5
  40633c:	fa02 f201 	lsl.w	r2, r2, r1
  406340:	fa00 fa01 	lsl.w	sl, r0, r1
  406344:	d908      	bls.n	406358 <__udivmoddi4+0x244>
  406346:	18ed      	adds	r5, r5, r3
  406348:	f109 30ff 	add.w	r0, r9, #4294967295
  40634c:	d243      	bcs.n	4063d6 <__udivmoddi4+0x2c2>
  40634e:	42ac      	cmp	r4, r5
  406350:	d941      	bls.n	4063d6 <__udivmoddi4+0x2c2>
  406352:	f1a9 0902 	sub.w	r9, r9, #2
  406356:	441d      	add	r5, r3
  406358:	1b2d      	subs	r5, r5, r4
  40635a:	fa1f fe8e 	uxth.w	lr, lr
  40635e:	fbb5 f0fc 	udiv	r0, r5, ip
  406362:	fb0c 5510 	mls	r5, ip, r0, r5
  406366:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  40636a:	fb00 f808 	mul.w	r8, r0, r8
  40636e:	45a0      	cmp	r8, r4
  406370:	d907      	bls.n	406382 <__udivmoddi4+0x26e>
  406372:	18e4      	adds	r4, r4, r3
  406374:	f100 35ff 	add.w	r5, r0, #4294967295
  406378:	d229      	bcs.n	4063ce <__udivmoddi4+0x2ba>
  40637a:	45a0      	cmp	r8, r4
  40637c:	d927      	bls.n	4063ce <__udivmoddi4+0x2ba>
  40637e:	3802      	subs	r0, #2
  406380:	441c      	add	r4, r3
  406382:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  406386:	eba4 0408 	sub.w	r4, r4, r8
  40638a:	fba0 8902 	umull	r8, r9, r0, r2
  40638e:	454c      	cmp	r4, r9
  406390:	46c6      	mov	lr, r8
  406392:	464d      	mov	r5, r9
  406394:	d315      	bcc.n	4063c2 <__udivmoddi4+0x2ae>
  406396:	d012      	beq.n	4063be <__udivmoddi4+0x2aa>
  406398:	b156      	cbz	r6, 4063b0 <__udivmoddi4+0x29c>
  40639a:	ebba 030e 	subs.w	r3, sl, lr
  40639e:	eb64 0405 	sbc.w	r4, r4, r5
  4063a2:	fa04 f707 	lsl.w	r7, r4, r7
  4063a6:	40cb      	lsrs	r3, r1
  4063a8:	431f      	orrs	r7, r3
  4063aa:	40cc      	lsrs	r4, r1
  4063ac:	6037      	str	r7, [r6, #0]
  4063ae:	6074      	str	r4, [r6, #4]
  4063b0:	2100      	movs	r1, #0
  4063b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4063b6:	4618      	mov	r0, r3
  4063b8:	e6f8      	b.n	4061ac <__udivmoddi4+0x98>
  4063ba:	4690      	mov	r8, r2
  4063bc:	e6e0      	b.n	406180 <__udivmoddi4+0x6c>
  4063be:	45c2      	cmp	sl, r8
  4063c0:	d2ea      	bcs.n	406398 <__udivmoddi4+0x284>
  4063c2:	ebb8 0e02 	subs.w	lr, r8, r2
  4063c6:	eb69 0503 	sbc.w	r5, r9, r3
  4063ca:	3801      	subs	r0, #1
  4063cc:	e7e4      	b.n	406398 <__udivmoddi4+0x284>
  4063ce:	4628      	mov	r0, r5
  4063d0:	e7d7      	b.n	406382 <__udivmoddi4+0x26e>
  4063d2:	4640      	mov	r0, r8
  4063d4:	e791      	b.n	4062fa <__udivmoddi4+0x1e6>
  4063d6:	4681      	mov	r9, r0
  4063d8:	e7be      	b.n	406358 <__udivmoddi4+0x244>
  4063da:	4601      	mov	r1, r0
  4063dc:	e778      	b.n	4062d0 <__udivmoddi4+0x1bc>
  4063de:	3802      	subs	r0, #2
  4063e0:	443c      	add	r4, r7
  4063e2:	e745      	b.n	406270 <__udivmoddi4+0x15c>
  4063e4:	4608      	mov	r0, r1
  4063e6:	e708      	b.n	4061fa <__udivmoddi4+0xe6>
  4063e8:	f1a8 0802 	sub.w	r8, r8, #2
  4063ec:	443d      	add	r5, r7
  4063ee:	e72b      	b.n	406248 <__udivmoddi4+0x134>

004063f0 <__aeabi_idiv0>:
  4063f0:	4770      	bx	lr
  4063f2:	bf00      	nop

004063f4 <sysfont_glyphs>:
	...
  406414:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  406424:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  406434:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  40644c:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  40645c:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  40646c:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406484:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406494:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  4064a4:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  4064bc:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  4064d8:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  4064e8:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4064f8:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  406508:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  406530:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406558:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406568:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  40658c:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  40659c:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  4065ac:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  4065bc:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  4065d4:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  4065e4:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4065f4:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  40660c:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  40661c:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  40662c:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  406644:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406654:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406664:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  40667c:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  40668c:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  40669c:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  4066b4:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  4066c4:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  4066d4:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  4066f0:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  406700:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  406710:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  40672c:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  406744:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  40675c:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  40676c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  40677c:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406794:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  4067a4:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  4067b4:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  4067cc:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  4067dc:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  4067ec:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  406804:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  406814:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406824:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  40683c:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  40684c:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  40685c:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406874:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406884:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406894:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  4068ac:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  4068bc:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  4068cc:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  4068e4:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4068f4:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  406904:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  40691c:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  40692c:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  40693c:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406954:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406964:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406974:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  40698c:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  40699c:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4069ac:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  4069c4:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  4069d4:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  4069e4:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4069fc:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  406a0c:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  406a1c:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  406a34:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  406a44:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406a54:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  406a6c:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  406a7c:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  406a8c:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406aa4:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406ab4:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406ac4:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  406aec:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  406afc:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  406b18:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  406b30:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  406b40:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406b50:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406b68:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406b78:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406b88:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406ba0:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406bb0:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406bc0:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406bd0:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406be0:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  406bf0:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  406c00:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  406c10:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  406c20:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  406c30:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  406c48:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406c58:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406c68:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406c84:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406ca0:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  406cbc:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  406ccc:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  406cdc:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  406cf4:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  406d10:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  406d2c:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  406d48:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406d64:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406d80:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  406d9c:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406db8:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406dc8:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406dd8:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406de8:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  406df8:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  406e08:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  406e18:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  406e28:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  406e38:	0000 0000 3025 6432 253a 3230 3a64 3025     ....%02d:%02d:%0
  406e48:	6432 2520 7364 0000                         2d %ds..

00406e50 <_global_impure_ptr>:
  406e50:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406e60:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406e70:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406e80:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406e90:	296c 0000 0030 0000                         l)..0...

00406e98 <blanks.7223>:
  406e98:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406ea8 <zeroes.7224>:
  406ea8:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406eb8:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.

00406ec8 <__mprec_bigtens>:
  406ec8:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406ed8:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406ee8:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406ef0 <__mprec_tens>:
  406ef0:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406f00:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406f10:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406f20:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406f30:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406f40:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406f50:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406f60:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406f70:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406f80:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406f90:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406fa0:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406fb0:	9db4 79d9 7843 44ea                         ...yCx.D

00406fb8 <p05.6055>:
  406fb8:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406fc8:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406fd4 <_ctype_>:
  406fd4:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406fe4:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406ff4:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  407004:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  407014:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  407024:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  407034:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  407044:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  407054:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

004070d8 <_init>:
  4070d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4070da:	bf00      	nop
  4070dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4070de:	bc08      	pop	{r3}
  4070e0:	469e      	mov	lr, r3
  4070e2:	4770      	bx	lr

004070e4 <__init_array_start>:
  4070e4:	00403081 	.word	0x00403081

004070e8 <__frame_dummy_init_array_entry>:
  4070e8:	00400165                                e.@.

004070ec <_fini>:
  4070ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4070ee:	bf00      	nop
  4070f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4070f2:	bc08      	pop	{r3}
  4070f4:	469e      	mov	lr, r3
  4070f6:	4770      	bx	lr

004070f8 <__fini_array_start>:
  4070f8:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 63f4 0040 0e0a 7d20               .....c@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <_impure_ptr>:
20400020:	0028 2040 0000 0000                         (.@ ....

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0cb0 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	57a9 0040 5369 0040 0000 0000 6fd4 0040     .W@.iS@......o@.
20400954:	6fd0 0040 6e74 0040 6e74 0040 6e74 0040     .o@.tn@.tn@.tn@.
20400964:	6e74 0040 6e74 0040 6e74 0040 6e74 0040     tn@.tn@.tn@.tn@.
20400974:	6e74 0040 6e74 0040 ffff ffff ffff ffff     tn@.tn@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
